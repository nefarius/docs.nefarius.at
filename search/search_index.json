{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to the weird and wonderful world of gaming peripherals, better known as Gamepads or Game Controllers!</p> <p>On this site you find tutorials and extensive documentation surrounding the creations of Benjamin \"Nefarius\" H\u00f6glinger-Stelzer, a madman with a love for puzzling and Sony hardware \ud83d\ude01</p> <p>Feel free to look around, you'll find links and documents to many of my popular projects!</p>"},{"location":"#news","title":"News","text":"<p>The news feed is hosted and provided by Fosstodon, a Mastodon instance.</p> <p>follow me on Mastodon</p> <p>Nefarius on Mastodon</p>"},{"location":"Community-Support/","title":"Community and Support","text":"<p>Don't email developers for support requests</p> <p>It's sad that it has to be addressed but please use the resources below to seek assistance, free support has to happen via public channels, thank you for understanding \ud83e\udd70 Mails in violation of this simple request will be discarded without any further comment \ud83d\udc6e</p> <p>Struggling with some project and need help? We've got you covered! In addition to the articles on this site there's the possibility of human interaction \ud83d\ude09</p>"},{"location":"Community-Support/#discord","title":"Discord","text":"<p>Wanna have a quick chat? Be our guest on Discord! Various helpful people can be found here happy to chat. Do keep in mind that time zones are a thing so answers might come with a delay \ud83d\ude09 Read and respect the rules \u2764\ufe0f</p>"},{"location":"Community-Support/#github-discussions","title":"GitHub Discussions","text":"<p>Most (every?) repository has Discussions enabled, browse existing topics and open your own if your search didn't bring up satisfying results \u2764\ufe0f</p>"},{"location":"Community-Support/#github-issues","title":"GitHub Issues","text":"<p>Please respect that the GitHub issue tracker of the individual repositories is a collaboration platform for mainly developers and advanced users; kindly don't use it to ask for help, use the channels mentioned above. Mods shall close non-relevant issues without further notice to keep discussions clean \ud83d\udc6e</p>"},{"location":"Donations/","title":"Donations","text":"<p>A token of appreciation \u2764\ufe0f</p> <p>I accept donations solely as a token of appreciation if my work has brought you joy. I do not offer any services in return for donations. If you wish to contract me to carry out specific work for financial reimbursement you can hire my skills through my company. B2B relationships most welcome! Contact <code>solutions [_at] nefarius [dot_] at</code> to talk business \ud83d\ude18</p> <p>A vast majority of my work is available for free under permissive licenses, for both private individuals and enterprises alike. Maintaining this many popular projects requires time and skill and over the years a tremendous portion of my life has been dedicated to Free and Open Source Software. I usually work independent and without an \"agenda\" so if my chaotic creations have been useful to you consider supporting my path by tossing a coin or two \ud83d\udc96</p>"},{"location":"Donations/#reoccurring-subscriptions","title":"Reoccurring subscriptions","text":"<p>If you wanna stay a while and listen you can use these reoccurring services:</p> <p> </p>"},{"location":"Donations/#one-time-donations","title":"One-time donations","text":"<p>If you wanna \"drive-by-contribute\" and throw a few coins in the hat you can do so through:</p> <p> </p>"},{"location":"Downloads/","title":"Downloads","text":"<p>Welcome to the download hub \u2764\ufe0f</p> <p>Here you'll find quick-links to binaries for popular projects \ud83d\udc47</p>"},{"location":"Downloads/#production-ready-releases","title":"Production-ready releases","text":"Product Virtual Gamepad Emulation Bus Driver Setup BthPS3 Bluetooth Drivers Setup DsHidMini Driver HidHide Setup"},{"location":"Downloads/#mirrors-archives","title":"Mirrors &amp; Archives","text":"<p>You can explore mirror copies or archived binaries on the file server, these are typically in \"working conditions\" but may no longer be maintained or have been superseded by other solutions. Use with care \u2728</p>"},{"location":"Downloads/#buildbot-archive","title":"Buildbot Archive","text":"<p>Copies of build artifacts spit out by AppVeyor are mirrored on a separate file server since they get removed automatically from their infrastructure after a month. Drivers hosted there are unsigned (or test-signed) and therefore won't work on a non-developer-machine with the right preparations. Build artifacts are of interest typically only to developers or beta-testing folks, explore at your own risk \ud83e\udd8b</p>"},{"location":"projects/","title":"About Projects","text":"<p>Welcome! \ud83d\udc4b</p> <p>Here you can find an overview over past and actively maintained projects under the wings of the Nefarius ecosystem \ud83d\ude01</p> <p>Most of them - if they're open-source - you'll find on GitHub primarily; these sites here are meant to provide extended user documentation (less developer-heavy), a bit of history insights for discontinued projects and announcements or in-progress information for solutions currently cooking in the labs \ud83d\ude0e</p> <p>Bear in mind that this is not a complete list of my creations, check out my repositories on GitHub and self-hosted.</p>"},{"location":"projects/AirBender/","title":"About AirBender","text":"<p>AirBender was a user-mode driver providing a custom Bluetooth stack for USB Bluetooth dongles to support Sony PlayStation 3 Controllers on Windows. It was in development from August 2016 to February 2018 until it got archived in favour of better solutions. Its direct successor is BthPS3.</p> <p>The driver is a C-port of the C# implementation used in ScpToolkit and therefore \"occupies\" an entire Bluetooth dongle (radio) to function, making it impossible to use with conventional Bluetooth device (headphones, mice, ...) until uninstalled.</p> <p>It requires the .NET companion service Shibari to detect connected controllers and have them translated into virtual Xbox 360 or DualShock 4 devices using the ViGEm Framework.</p> <p>It is not advised to use AirBender due to missing support and potentially remaining issues in design and code.</p>"},{"location":"projects/AirBender/Removal-Guide/","title":"AirBender Removal Guide","text":"<p>AirBender didn't ship with an (un-)installer but with a little help of 3rd party tools removal is simple and painless \ud83d\ude03</p>"},{"location":"projects/AirBender/Removal-Guide/#how-to-tell-if-i-have-it","title":"How to tell if I have it","text":"<p>Great question! You might not use Bluetooth regularly at all and might have installed it a long time ago and forgotten all about it. No worries though, easiest way is to have a look in Device Manager. Press Win+X and click on Device Manager. Have a look at the Bluetooth section, it might look like so:</p> <p></p> <p>Look at that, we found it! \ud83d\ude04 Onwards with the next step!</p>"},{"location":"projects/AirBender/Removal-Guide/#how-to-get-rid-of-it","title":"How to get rid of it","text":"<p>Download, extract and run Driver Store Explorer and look for the AirBender device there, tick it, tick the <code>Force Deletion</code> box and finally hit the <code>Delete Driver(s)</code> button.</p> <p></p> <p>After that, simply unplug and plugin your Bluetooth dongle or reboot the machine and let Windows download the manufacturer drivers. Done! \ud83c\udf89</p>"},{"location":"projects/BthPS3/","title":"About BthPS3","text":"<p>Welcome to the BthPS3 extended documentation!</p> <p>Here you can find extended documentation about the different parts of this project, the devices it supports and answers to common issues and questions.</p> <p>Wanna know if your particular Bluetooth host radio has been confirmed working or help documenting a new one? Take a look at this collection of compatible devices.</p> <p>Those pesky controllers refusing to connect? Kindly take a peek over here.</p> <p>Having troubles getting the DualShock 4 to work while this solution is installed? We've got you covered.</p> <p>Explore the inner workings of the drivers by enabling the trace log.</p>"},{"location":"projects/BthPS3/API-Documentation/","title":"API Documentation","text":"<p>Topic intended for developers</p> <p>This topic is intended for developers who'd like to build upon the capabilities of BthPS3 and directly talk to devices for prototyping or other experimental tasks.</p> <p>Devices connected through BthPS3 can be interfaced with \"driverless\" by opening a handle and directly communicating with the HID Control and Interrupt channels. They can be enumerated via SetupAPI by using the Device Interface GUIDs documented in the project sources. Reading from and writing to the L2CAP channels is done via DeviceIoControl utilizing these IOCTL commands.</p>"},{"location":"projects/BthPS3/API-Documentation/#example-implementation","title":"Example implementation","text":"<p>Check out this archived project for a reference implementation on how to enumerate and interact with devices exposed by BthPS3 (C#/.NET).</p>"},{"location":"projects/BthPS3/About-Controller-Compatibility/","title":"A word about controller compatibility","text":"<p>TL;DR:</p> <p>If your controller works, great! If it doesn't, well, life's not always fair \ud83d\ude1c</p> <p>An important statement from the author, I highly encourage the read \ud83d\ude42</p> <p>This set of drivers has been designed for and tested with the original Sony PlayStation 3 peripherals, better known by the names SIXAXIS, DualShock and Navigation controller. Over time many aftermarket and just blatant ripoff devices have appeared on the market, primarily aiming for compatibility with the original PlayStation 3 platform. It's even been observed, that official Sony gear can behave differently on platforms other than the PlayStation, most probably due to slight changes in both controller and PlayStation firmware.</p> <p>While this project has been designed with highest compatibility towards cheaper and aftermarket devices in mind it is impossible to support them all with the same level of quality the legit hardware delivers. Some chips used by aftermarket/ripoff/fake controllers behave differently to variations in certain Bluetooth properties not always possible to influence on Windows, some are timing sensitive and fail if packets don't arrive exactly as engineered for the PlayStation 3. Some simply refuse to connect at all despite many other devices working flawlessly. That's just how it is and will most probably not change in the near future.</p> <p>I encourage any user to test this solution with their hardware, yet keep in mind, that \"my BlyatShock 3.5 from VeryLowPriceStore LLC. doesn't work\" issue reports will be discarded without further comment. It is simply not my desire nor my job to fix other el cheapo manufacturers broken firmware. You can send me the hardware in question though for analysis, maybe one day I can be the proud owner of Bluetooth Classic sniffer equipment \ud83d\ude07 Or someone finds a way to soft-mod a PlayStation 3 so a packet capture of the Bluetooth host module becomes possible.</p>"},{"location":"projects/BthPS3/Amazon-Choice-Pro-Controller/","title":"Amazon's Choice \"Pro Controller\" Compatibility","text":"<p>This Controller can't be connected to Windows Bluetooth</p> <p>This controller doesn't obey the Bluetooth specification regarding channel encryption and can therefore not be connected to Windows. Details below. It has been tested with the legacy ScpToolkit and BthPS3.</p>"},{"location":"projects/BthPS3/Amazon-Choice-Pro-Controller/#about","title":"About","text":"<p>This is a 3rd party aftermarket controller modeled after the original Sony DualShock 3 compatible with the PlayStation 3.</p> <p>Alternative names:</p> <ul> <li>Diswoe Wireless Controller</li> </ul>"},{"location":"projects/BthPS3/Amazon-Choice-Pro-Controller/#product-page","title":"Product page","text":"<p>Molyhood Wireless Controller for PS3, Wireless Controller, Double Shock Gaming Controller, 6-Axis Bluetooth Gamepad Joystick with Charging Cable for PS3 Controller for Playstation 3</p>"},{"location":"projects/BthPS3/Amazon-Choice-Pro-Controller/#product-pictures","title":"Product pictures","text":""},{"location":"projects/BthPS3/Amazon-Choice-Pro-Controller/#wireshark","title":"Wireshark","text":"<p>A packet capture exposes the channel open response sent by the Windows Bluetooth stack as set to <code>Result: Refused - security block (0x0003)</code>:</p> <p></p>"},{"location":"projects/BthPS3/Amazon-Choice-Pro-Controller/#event-viewer","title":"Event Viewer","text":"<p>This type of connection error is logged in the Windows Event Log in the System log, reported by <code>BTHUSB</code> as <code>Windows rejected a device connection because the device didn't establish encryption prior to the service level connection.</code>:</p> <p></p>"},{"location":"projects/BthPS3/Compatible-Bluetooth-Devices/","title":"Compatible Bluetooth Devices","text":"<p>This list needs your help</p> <p>This list is compiled from community efforts, if you have a device not listed here help by adding it!</p> <p>Non-exhaustive list of Bluetooth host devices known to work with the drivers and supported controller devices. Meaning of Status column:</p> <ul> <li>\u2714\ufe0f = tested and confirmed working</li> <li>\u2754 = assumed to work (ported over from old Wiki)</li> <li>\u274c = has issues (see Remarks)</li> </ul>"},{"location":"projects/BthPS3/Compatible-Bluetooth-Devices/#usb-dongles","title":"USB Dongles","text":"Hardware ID Name Status Remarks <code>USB\\VID_0A12&amp;PID_0001</code> Hama Nano Bluetooth USB Adapter \u2714\ufe0f Very common chip used in multiple brands, typically displayed in Windows as \"Generic Bluetooth Radio\". <code>USB\\VID_0461&amp;PID_4D75</code> Rocketfish\u2122 Bluetooth USB Adapter RF-FLBTAD \u2754 <code>USB\\VID_050D&amp;PID_065A</code> Belkin F8T065bf \u2754 <code>USB\\VID_07D1&amp;PID_F101</code> DBT-122 Wireless USB Bluetooth Adapter \u2754 <code>USB\\VID_0B05&amp;PID_17CB</code> ASUS USB-BT400 \u2714\ufe0f <code>USB\\VID_0DF6&amp;PID_2200</code> Sitecom CN-512 \u2754 <code>USB\\VID_0E5E&amp;PID_6622</code> Conwise CW6622 \u2754 <code>USB\\VID_1131&amp;PID_1001</code> ISSC KY-BT100 \u2754 <code>USB\\VID_0BB4&amp;PID_0306</code> Broadcom BCM20703 \u274c HTC VIVE (Steam OpenVR) customized device. Can be used in parallel with \"vanilla\" dongle without issues though. <code>USB\\VID_0BDA&amp;PID_8771</code> Orico BTA-508 \u2714\ufe0f Uses a Realtek RTL8761B chipset. <code>USB\\VID_2357&amp;PID_0604</code> TP-LINK UB500 (bt 5.0) \u2714\ufe0f <code>USB\\VID_0A12&amp;PID_0001</code> TP-LINK UB400 (bt 4.0) \u2714\ufe0f"},{"location":"projects/BthPS3/Compatible-Bluetooth-Devices/#integrated-moduleschips-in-laptops-or-other-devices","title":"Integrated Modules/Chips in Laptops or other Devices","text":"Hardware ID Name Status Remarks <code>USB\\VID_8087&amp;PID_07DC</code> Intel(R) Wireless Bluetooth(R) \u2714\ufe0f <code>USB\\VID_0489&amp;PID_E052</code> Broadcom BCM20702 Bluetooth USB Device \u2714\ufe0f <code>USB\\VID_03F0&amp;PID_231D</code> HP Integrated module with Bluetooth wireless technology (Broadcom BCM2070) \u2754 <code>USB\\VID_044E&amp;PID_3010</code> ALPS-UGPZ9-BCM2046 \u2754 <code>USB\\VID_046D&amp;PID_C709</code> HP Bluetooth Module with trace filter \u2754 <code>USB\\VID_047D&amp;PID_105E</code> Kensington Bluetooth EDR Dongle \u2754 <code>USB\\VID_0489&amp;PID_E011</code> Broadcom BCM2046 \u2754 <code>USB\\VID_0489&amp;PID_E027</code> Atheros AR3011 Bluetooth(R) Adapter \u2754 <code>USB\\VID_0489&amp;PID_E042</code> Broadcom BCM20702 \u2754 <code>USB\\VID_0489&amp;PID_E04D</code> Atheros AR3012 Bluetooth(R) Adapter \u2754 <code>USB\\VID_0489&amp;PID_E04E</code> Bluetooth USB Module \u2754 <code>USB\\VID_04CA&amp;PID_3006</code> BlueSoleil Generic Bluetooth Driver \u2754 <code>USB\\VID_050D&amp;PID_016A</code> Broadcom BCM2046B1 (Belkin) \u2754 <code>USB\\VID_05AC&amp;PID_8216</code> Broadcom Bluetooth 2.1 (MacBookAir2) \u2754 <code>USB\\VID_05AC&amp;PID_821A</code> Apple Broadcom Built-in Bluetooth (MacBookPro8) \u2754 <code>USB\\VID_05AC&amp;PID_821D</code> Apple Broadcom Built-in Bluetooth (MacBookPro9) \u2754 <code>USB\\VID_05AC&amp;PID_821F</code> Apple Broadcom Built-in Bluetooth (MacBookAir4) \u2754 <code>USB\\VID_05AC&amp;PID_8286</code> Apple Broadcom Built-in Bluetooth (MacBookPro10) \u2754 <code>USB\\VID_0930&amp;PID_0214</code> Bluetooth USB Controller-9 from TOSHIBA (Broadcom BCM2070) \u2754 <code>USB\\VID_0930&amp;PID_0215</code> Bluetooth USB Controller-10 from TOSHIBA \u2754 <code>USB\\VID_0A5C&amp;PID_200A</code> Broadcom BCM2035 \u2754 <code>USB\\VID_0A5C&amp;PID_2021</code> Broadcom BCM2035B3 \u2754 <code>USB\\VID_0A5C&amp;PID_2100</code> Broadcom BCM2045 \u2754 <code>USB\\VID_0A5C&amp;PID_2101</code> Broadcom BCM2045 \u2754 <code>USB\\VID_0A5C&amp;PID_2146</code> Broadcom BCM2046 \u2754 <code>USB\\VID_0A5C&amp;PID_2148</code> Broadcom BCM92046DG \u2754 <code>USB\\VID_0A5C&amp;PID_2150</code> Broadcom BCM2046 \u2754 <code>USB\\VID_0A5C&amp;PID_2153</code> Broadcom BCM2046 \u2754 <code>USB\\VID_0A5C&amp;PID_2154</code> Broadcom BCM92046DG-CL1ROM Bluetooth 2.1 UHE Dongle \u2754 <code>USB\\VID_0A5C&amp;PID_217D</code> HP Bluetooth module \u2754 <code>USB\\VID_0A5C&amp;PID_2190</code> Broadcom BCM2070 \u2754 <code>USB\\VID_0A5C&amp;PID_2198</code> Broadcom BCM2070 \u2754 <code>USB\\VID_0A5C&amp;PID_21B4</code> Broadcom BCM2070 \u2754 <code>USB\\VID_0A5C&amp;PID_21E1</code> Broadcom BCM20702A0 (Driver for Hewlett-Packard) \u2754 <code>USB\\VID_0A5C&amp;PID_21E3</code> Broadcom BCM20702A0 (Driver for Hewlett-Packard) \u2754 <code>USB\\VID_0A5C&amp;PID_21E8</code> Broadcom BCM20702A0 \u2714\ufe0f Uses manufacturer-specific driver from 2015 (from Microsoft Update Catalog) <code>USB\\VID_0B05&amp;PID_1715</code> ASUS Bluetooth Dongle (Broadcom BCM2045) \u2754 <code>USB\\VID_0B05&amp;PID_1783</code> ASUS Bluetooth v2.1 USB Adapter \u2754 <code>USB\\VID_0B05&amp;PID_1788</code> BT-270 (ASUS) \u2754 <code>USB\\VID_0B05&amp;PID_179C</code> Bluetooth (ASUS) \u2754 <code>USB\\VID_0B05&amp;PID_17B5</code> Bluetooth (ASUS) \u2754 <code>USB\\VID_0B05&amp;PID_B700</code> BT-253 (ASUS) \u2754 <code>USB\\VID_0BDA&amp;PID_0724</code> Realtek Bluetooth 4.0 \u2754 <code>USB\\VID_0BDA&amp;PID_8723</code> Realtek Bluetooth 4.0 \u2754 <code>USB\\VID_0CF3&amp;PID_3002</code> Atheros AR3011 \u2754 <code>USB\\VID_0CF3&amp;PID_3004</code> Atheros AR3012 \u2754 <code>USB\\VID_0CF3&amp;PID_3005</code> Atheros AR3011 \u2754 <code>USB\\VID_0DB0&amp;PID_3801</code> Motorola Bluetooth 2.1+EDR Device (MSI) \u2754 <code>USB\\VID_1131&amp;PID_1004</code> ISSC (EDR) Bluetooth USB Adapter \u2754 <code>USB\\VID_1286&amp;PID_2044</code> Marvell AVASTAR Bluetooth Radio Adapter (Microsoft Surface) \u2754 <code>USB\\VID_13D3&amp;PID_3304</code> Atheros AR3011 (Azurewave Janus 3304) \u2754 <code>USB\\VID_13D3&amp;PID_3315</code> Bluetooth module (ASUS) \u2754 <code>USB\\VID_413C&amp;PID_8126</code> Dell Wireless 355 Module with Bluetooth 2.0 + EDR Technology \u2754 <code>USB\\VID_413C&amp;PID_8197</code> Dell Wireless 380 Bluetooth 4.0 Module (Broadcom BCM20702A0) \u2754 <code>USB\\VID_8086&amp;PID_0189</code> Intel Centrino Advanced-N 6230 Bluetooth adapter \u2754 <code>USB\\VID_8087&amp;PID_07DA</code> Intel Centrino Wireless Bluetooth 4.0 + High Speed Adapter \u2754 <code>USB\\VID_8087&amp;PID_0AAA</code> Intel Wireless Bluetooth \u2714\ufe0f Must be on manufacturer driver version from 2021 to work."},{"location":"projects/BthPS3/Compatible-Bluetooth-Devices/#unknown-devices","title":"Unknown Devices","text":"Hardware ID Name Status Remarks <code>USB\\VID_045E&amp;PID_3500</code> \u2754 \u2754 <code>USB\\VID_0B05&amp;PID_1785</code> \u2754 \u2754"},{"location":"projects/BthPS3/Debugging-the-drivers/","title":"Getting a kernel driver to talk","text":"<p>Kernel Drivers typically don't write traditional log files that end up on the disk somewhere, instead Event Tracing for Windows is used to write messages to a special logging facility we can tap into with a bit of command line magic.</p>"},{"location":"projects/BthPS3/Debugging-the-drivers/#prepare-verbose-tracing","title":"Prepare verbose tracing","text":"<p>Fire up PowerShell with administrative privileges by pressing Win+X and selecting it from the appearing menu like so:</p> <p></p> <p>Keep it open until we're done, we'll need it throughout the process \ud83d\ude09</p> <p>By default verbose tracing is off, which means we will lose a lot of potentially interesting information. To enable verbose tracing, execute the following commands in PowerShell:</p> <p>PowerShell</p> <pre><code>Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3\\Parameters\" -Name \"VerboseOn\" -Type DWord -Value 1 -Force\nSet-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3\\Parameters\\Wdf\" -Name \"VerboseOn\" -Type DWord -Value 1 -Force\nSet-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3PSM\\Parameters\" -Name \"VerboseOn\" -Type DWord -Value 1 -Force\nSet-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3PSM\\Parameters\\Wdf\" -Name \"VerboseOn\" -Type DWord -Value 1 -Force\n</code></pre> <p>After that reboot the machine before you proceed with the next step!</p>"},{"location":"projects/BthPS3/Debugging-the-drivers/#capture-the-trace","title":"Capture the trace","text":""},{"location":"projects/BthPS3/Debugging-the-drivers/#start-trace-session","title":"Start trace session","text":"<p>Once you've got PowerShell open again, paste the following three lines into it \"as is\" and hit enter:</p> <p>PowerShell</p> <pre><code>New-EtwTraceSession -Name BthPS3 -LogFileMode 0x8100 -FlushTimer 1 -LocalFilePath \"C:\\BthPS3.etl\"\nAdd-EtwTraceProvider -SessionName BthPS3 -Guid \u2018{37dcd579-e844-4c80-9c8b-a10850b6fac6}\u2019 -MatchAnyKeyword 0x0FFFFFFFFFFFFFFF -Level 0xFF -Property 0x40\nAdd-EtwTraceProvider -SessionName BthPS3 -Guid \u2018{586aa8b1-53a6-404f-9b3e-14483e514a2c}\u2019 -MatchAnyKeyword 0x0FFFFFFFFFFFFFFF -Level 0xFF -Property 0x40\n</code></pre> <p>Should looks similar to this:</p> <p></p>"},{"location":"projects/BthPS3/Debugging-the-drivers/#perform-the-action-you-want-captured","title":"Perform the action you want captured","text":"<p>Currently tracing is active and the events happening inside the driver will be registered in a log file, meaning now is the time to execute the actions that need to be investigated. Examples:</p> <ul> <li>Controller is not connecting wirelessly? Try connecting it a few times<ul> <li>Make sure to turn on the controller as normal via the PS button and wait until the LEDs stop blinking before repeating</li> </ul> </li> <li>Controller is turning off randomly even if it's charged? Make sure to play with the controller until it disconnects on its own</li> <li>Something (e.g.: LEDs, rumble, sticks) works as normal via USB but not via BT? make sure to repeat the same actions while via BT that work as normal via USB</li> </ul>"},{"location":"projects/BthPS3/Debugging-the-drivers/#stop-trace-session","title":"Stop trace session","text":"<p>Once everything we like to know has been captured, stop the session so the data collection stops and the log file is closed:</p> <p>PowerShell</p> <pre><code>Remove-EtwTraceSession -Name BthPS3\n</code></pre> <p>The log file should now exist under the C:\\-Drive:</p> <p></p>"},{"location":"projects/BthPS3/Debugging-the-drivers/#great-i-got-it-what-now","title":"Great, I got it, what now","text":"<p>So we've captured the <code>BthPS3.etl</code> file, but what now? Well, the easy way is to submit it to Nefarius for analysis \ud83d\ude01. Make sure to compact the file via WinRAR or 7zip before sending it.</p> <p>Or, you can take a peek at its contents for yourself if you read on.</p>"},{"location":"projects/BthPS3/Debugging-the-drivers/#decipher-the-trace-file-content","title":"Decipher the trace file content","text":"<p>The trace files are not readable with a traditional text editor, some special tools are required to get the spicy bits out of it. Microsoft provides tools for the task but they are awfully verbose and not easy on the beginner in the authors humble opinion, so use of a 3rd party tool is highly recommended.</p>"},{"location":"projects/BthPS3/Debugging-the-drivers/#using-mgtek-traceview-plus-3","title":"Using MGTEK TraceView Plus 3","text":"<p>Obtain a copy of MGTEK TraceView Plus 3 and install it.</p> <p>MGTEK TraceView Plus 3</p> <p>This software is not freeware. It offers a free evaluation version with a generous time of 30 days trial limit and a simple nag screen. If you plan on utilizing its features frequently you can obtain a licensed copy on their shop. Thanks for supporting great software \ud83e\udd70</p> <p>You should now be able to simply double-click the <code>BthPS3.etl</code> we created before and it should open in TraceView Plus. If not, open Trace View Plus and use <code>File / Open Trace Log...</code> and navigate to the <code>BthPS3.etl</code> file like so:</p> <p></p> <p>Once opened you should see some oddly formatted lines similar to this:</p> <p></p> <p>Trat's no good, TraceView Plus needs some information on how to decode the content into a useful format. So we navigate to <code>Session / Add Trace Files...</code> like so:</p> <p></p> <p>Now navigate to the BthPS3 installation folder on your local drive and select both PDB files like shown:</p> <p></p> <p>Now the display should change and readable text will appear:</p> <p></p> <p>Alright, now you can navigate the content of the trace, newest events on the bottom, oldest on top.</p>"},{"location":"projects/BthPS3/Debugging-the-drivers/#fancy-but-what-do-i-do-with-that","title":"Fancy, but what do I do with that","text":"<p>Once you've made it this far, you can see the inner workings of the drivers. Have a look for the levels <code>TRACE_LEVEL_WARNING</code> or <code>TRACE_LEVEL_ERROR</code>, which indicates a failure in the driver. This hints at the potential issue with the connection, which may or may not be solvable.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/","title":"Driver Configuration Utility Explained","text":"<p>The <code>BthPS3 Driver Configuration Tool</code> is a small self-contained .NET application shipped with the setup providing the user with a simple way to adapt the drivers operation to their liking. You can find it in your start menu, just search for it \ud83d\ude09</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#profile-driver-settings","title":"Profile Driver Settings","text":"<p>These settings control the profile driver (the component which has the logic of detecting and connecting controllers in it) behavior. Depending on the companion solutions you have installed or want to install some of the following switches can or even need to be adjusted for the solution to work properly.</p> <p></p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#enable-sixaxistmdualshocktm-3-support","title":"Enable SIXAXIS\u2122\ufe0f/DualShock\u2122\ufe0f 3 Support","text":"<p>TL;DR:</p> <p>This needs to be on if you want your DS3 to work wireless \ud83d\ude1c</p> <p>PS3 peripherals don't report much useful identification data like VendorID/ProductID fields or other common descriptors. Therefore the driver uses the remote name the device reports upon connection as an indicator to identify the type/make/model. The driver package ships with a set of well-known pre-configured names that get compared to identify a SIXAXIS-compatible device. This process is not flawless but it is reliable enough to cover the bulk of original and aftermarket devices.</p> <p>If this setting is ticked, the driver attempts to compar the remote name to a well-known set of names and if successful connects it as a SIXAXIS compatible. If this setting is disabled, the detection process is skipped completely and the connection gets denied.</p> <p>The following PowerShell snippet returns the currently configured names which identify a SIXAXIS-ish device:</p> <p>PowerShell</p> <pre><code>Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3\\Parameters\" -Name \"SIXAXISSupportedNames\" | Select-Object -ExpandProperty \"SIXAXISSupportedNames\"\n</code></pre> <p>An adventurous user can tinker with this setting and edit or add names in the registry to experiment with devices who report different and untested names. The comparison is case-sensitive, so make sure the names match a 100% (including spelling mistakes \ud83d\ude09).</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#enable-playstation-move-navigation-support","title":"Enable PlayStation\u00ae\ufe0f Move Navigation Support","text":"<p>If ticked, the pre-configured list of remote device names will be used to attempt to identify and connect a Move Navigation compatible device. The process is skipped and the connection denied, if the setting is off.</p> <p>The following PowerShell snippet returns the currently configured names which identify a Navigation-ish device:</p> <p>PowerShell</p> <pre><code>Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3\\Parameters\" -Name \"NAVIGATIONSupportedNames\" | Select-Object -ExpandProperty \"NAVIGATIONSupportedNames\"\n</code></pre>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#enable-playstation-move-motion-support","title":"Enable PlayStation\u00ae\ufe0f Move Motion Support","text":"<p>If ticked, the pre-configured list of remote device names will be used to attempt to identify and connect a Move Motion compatible device. The process is skipped and the connection denied, if the setting is off.</p> <p>The following PowerShell snippet returns the currently configured names which identify a Motion-ish device:</p> <p>PowerShell</p> <pre><code>Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3\\Parameters\" -Name \"MOTIONSupportedNames\" | Select-Object -ExpandProperty \"MOTIONSupportedNames\"\n</code></pre> <p>This setting is off by default to not conflict with the PSMoveService project.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#enable-wireless-controller-dualshocktm-4-support","title":"Enable Wireless Controller (DualShock\u2122\ufe0f 4) Support","text":"<p>If ticked, the pre-configured list of remote device names will be used to attempt to identify and connect a Wireless/DualShock 4 compatible device. The process is skipped and the connection denied, if the setting is off.</p> <p>The following PowerShell snippet returns the currently configured names which identify a DualShock 4-ish device:</p> <p>PowerShell</p> <pre><code>Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\BthPS3\\Parameters\" -Name \"WIRELESSSupportedNames\" | Select-Object -ExpandProperty \"WIRELESSSupportedNames\"\n</code></pre> <p>This setting is off by default to not conflict with the DS4Windows project.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#automatically-re-enable-filter-after-grace-period-has-passed","title":"Automatically re-enable filter after grace period has passed","text":"<p>The profile driver can instruct the filter driver to enable or disable its patching (re-routing) capabilities if necessary. This is particularly useful if you want to connect a DualShock 4 the \"traditional\" way (pair and connect it in \"PC mode\" which needs no special drivers) which will accidentally be picked up by the profile driver due to the way the connection logic in the DS4 is designed. It might be undesired to connect a DS4 \"through\" BthPS3 since it works perfectly with stock drivers, so the profile driver will drop the connection, disable the filter for a specified amount of seconds, let the DS4 connect in \"vanilla\" mode and re-enable the patch again to continue supporting the other PS3 peripherals.</p> <p>Leaving this on is the default behavior. If you turn it off, you need to control filter behavior yourself (see Filter Driver Settings).</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#re-enable-filter-after","title":"Re-enable filter after...","text":"<p>A time span (in seconds) to wait until the filter enables itself again. If you experience issues connecting a DS4 (or Xbox One Wireless Controllers or similar via Bluetooth) try increasing this value and make sure to attempt to power on your controller a few times in order to make it work. If this mechanism still fails your, see Filter Driver Settings.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#automatically-disable-filter-on-unsupported-device-arrival","title":"Automatically disable filter on unsupported device arrival","text":"<p>If the remote device identification mechanism fails (unrecognized remote name or other issues in the connection process), the profile driver can automatically instruct the filter to temporarily disabling its capabilities, basically restoring \"vanilla\" operation of the Bluetooth stack. BthPS3 can interfere with the connection process of other well-known wireless controller devices due to design flaws of the PS3 peripherals, this automatism is meant to aid in working around those issues. It is recommended to keep this setting active.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#filter-driver-settings","title":"Filter Driver Settings","text":"<p>The filter driver has one simple, powerful job: re-route HID-related traffic to the profile driver to investigate if a compatible PS3 peripherals is attempting to connect. This feature can be be altered on the fly with the settings outlined below.</p> <p></p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#enable-psm-patching","title":"Enable PSM patching","text":"<p>If on, the filter re-routes the \"paths\" necessary to connect a PS3 peripheral to the profile driver, which then can work its magic to further present the controller to the system. If off, the entire Bluetooth stack behaves as if BthPS3 wasn't there, which can help when experiencing troubles connecting other well-known Bluetooth gaming devices, in turn disables PS3 peripherals support entirely though. Can't have everything in life \ud83d\ude00</p> <p>If you want to use e.g. a DS3, DS4 and Xbox One controller at the same time simply follow this:</p> <ul> <li>Leave the filter on</li> <li>Connect the DS3 and wait a few seconds until it is online</li> <li>Turn the filter off</li> <li>Now connect the DS4 and Xbox Wireless devices</li> <li>Either leave the filter off and enable it later or enable it immediately again</li> <li>Enjoy the game \ud83e\udd73</li> </ul>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#danger-zone","title":"Danger Zone","text":"<p>It's called Danger Zone for a reason \ud83d\ude1c</p> <p>Depending on some companion solutions (like Shibari or DsHidMini) you may need to alter some of these settings. Read carefully though, some might cause system instability if configured incorrectly. You have been warned \ud83d\udc6e</p> <p>The Danger Zone hosts some of the more advanced settings of the solution. You're welcome to tinker with them as long as you can live with the consequences \ud83d\ude1c Some companion solutions (like Shibari or DsHidMini) even require a specific combination of settings as explained below.</p> <p></p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#expose-pdo-as-raw-device-to-user-land","title":"Expose PDO as RAW device to user-land","text":"Companion Required state Shibari On DsHidMini Off <p>If this setting is on, the resulting child devices (PDO, Physical Device Object) of the profile driver can be brought up \"driverless\" and will be accessible for communication by any non-driver user-land application (like Shibari). Its HID Control/Interrupt channels can directly be consumed by the Windows API in any high-level language (see API-Documentation). This mode is great for prototyping and experimenting with the devices without the need to write any (kernel- or user-mode) driver code.</p> <p>The default is on.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#hide-pdo-from-device-manager","title":"Hide PDO from Device Manager","text":"<p>When enabled, the connected controller devices will be hidden in Device Manager. They can still be examined by enabling <code>View / Show hidden devices</code>. This setting has no effect on any other operational logic and is there only for cosmetics.</p> <p>The default is off.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#restrict-pdo-access-to-elevated-users","title":"Restrict PDO access to elevated users","text":"<p>If enabled, devices in RAW mode can only be enumerated and accessed from elevated processes (applications started as Administrator, System services). This might be useful if some companion solutions have to run as an elevated process anyway for whatever reason.</p> <p>The default is off which allows any user to enumerate the devices.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#exclusive-pdo-access-enforced","title":"Exclusive PDO access enforced","text":"<p>When in RAW mode, many processes can enumerate and open the devices at the same time. For game controllers presented through BthPS3 this behavior is undesired, since by design one driver/process needs authority of the exchanged packets, otherwise input information will be split across many processes resulting in unpredictable and lost button/axis change events and conflicting LED state events from different sources.</p> <p>It is recommended to leave this setting enabled unless a specific solution requires multiple open handles to the device.</p>"},{"location":"projects/BthPS3/Driver-Configuration-Utility-Explained/#pdo-s0-idle-timeout","title":"PDO S0 Idle Timeout","text":"<p>Once PS3 peripherals have received their \"magic start packet\" they will continue sending input state changes to the host radio until disconnected (turned off) again. This process allocates buffer memory which needs to be consumed by either a function driver or user-land process. If both of these companion solutions are absent, this setting kicks in and drops the connection after the set amount of time has passed where no I/O traffic has happened.</p> <p>It is usually not required to increase (or decrease) this value, leaving it at the default is recommended.</p>"},{"location":"projects/BthPS3/DualShock-4-FAQ/","title":"Frequently Asked Questions about the DS4","text":""},{"location":"projects/BthPS3/DualShock-4-FAQ/#pairing-a-dualshock-4-to-windows","title":"Pairing a DualShock 4 to Windows","text":"<p>The pairing process of the controller on Windows does not change. Press the dedicated PC mode pairing button combination and the controller becomes visible to Windows. Use the search engine of your choice to find out how to do that, it's documented quite well.</p>"},{"location":"projects/BthPS3/DualShock-4-FAQ/#reconnecting-an-already-paired-dualshock-4-to-windows","title":"Reconnecting an already paired DualShock 4 to Windows","text":"<p>Reconnecting the controller (a.k.a. powering it on via the PS button and letting it connect via Bluetooth) follows a different pattern when these drivers are present.</p> <p>Without BthPS3 installed, the reconnecting process of the DS4 to Windows is as follows:</p> <ul> <li>Wake Up the PS4 controller with the PS button<ul> <li>Controller successfully connects to Windows after a few seconds</li> </ul> </li> </ul> <p>With BthPS3 installed, the reconnecting process of the DS4 to Windows requires 2 attempts:</p> <ul> <li>1st Attempt: Wake Up the PS4 controller with the PS Button<ul> <li>Controller's Lightbar will blink white for a few short seconds before the controller turns itself off again (expected)</li> </ul> </li> <li>2nd Attempt: After the 1st Attempt fails, the user has 10 seconds to<ol> <li>turn on the controller again and</li> <li>wait for the controller to successfully connect to Windows. If the controller does not connect in this 10s time windows, the user will have to go back to the 1st Attempt and retry</li> </ol> </li> </ul>"},{"location":"projects/BthPS3/DualShock-4-FAQ/#what-is-different-after-installing-bthps3-for-the-reconnect-process","title":"What is different after installing BthPS3 for the reconnect process?","text":"<p>With BthPS3 installed there are two modes of operation:</p> <ul> <li>BthPS3's filter is enabled<ul> <li>PS3 controllers can be connected to Windows, but not the DS4 (DS4 will connect, but Windows won't recognize it as a controller and tools like DS4Windows, Steam etc. will not detect it).</li> </ul> </li> <li>BthPS3's filter is disabled: you can connect DS4 controllers normally, but DS3s won't connect anymore.</li> </ul> <p>Unless BthPS3's registry parameters have been altered from the defaults, this is what happens normally when trying to reconnect a DS4 to Windows with BthPS3 present:</p> <ul> <li>Filter is enabled. DS3 controllers can be connected at will.</li> <li>User wakes up an already paired DS4 controller that then tries to reconnect to Windows.</li> <li>DS4 connects, but doesn't work properly because the filter is enabled. The filter will consider the DS4 an unsupported device and will almost instantly drop the DS4 connection (DS4 will turn turn off the process). This is what happens on \"1st Attempt\" stated above.</li> <li>After the unsupported device is detected (DS4 that tried to connect) and its connection dropped, the filter will disable itself. If PS3 controllers are already connected their connection will NOT be dropped, they will stay connected normally to either Shibari or companion drivers even with the filter disabled, but the user won't be able to connect new PS3 controllers for now.</li> <li>After being disabled, the filter will re-enable itself in 10 seconds.</li> <li>Now, since the filter will enable itself after some time (10s by default) and you need it disabled to connect a DS4 controller, this means that after the 1st attempt to connect the controller \"fails\" the user needs to turn on again the DS4 in this 10s time window to allow it to properly reconnect to Windows before the filter is enabled again.</li> <li>So, while the filter is Disabled \ud83d\udc49 DS4 controller is turned on again \ud83d\udc49 DS4 should connect normally to Windows</li> <li>After 10s, the filter is re-enabled, allowing the user to connect PS3 controllers again. Since the DS4 is already properly connected to Windows, its connection won't be dropped and you will be able to use it normally.</li> </ul>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/","title":"Frequently Asked Questions about BthPS3","text":"<p>Got questions? Who can blame you \ud83d\ude05 we can provide some answers, though! Read on, traveler!</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#how-to-fix-this-setup-message","title":"How to fix this setup message?","text":"<p>Bluetooth Host Radio not found. A working Bluetooth stack is required for driver installation or removal.</p> <p></p> <p>Your Bluetooth isn't working \ud83d\ude42 If you're on a Laptop, make sure you haven't disabled wireless either via a physical switch or a key combination (depends on the device model). On Desktop, make sure you actually have a Bluetooth dongle plugged in \ud83d\ude09 If you had other solutions like ScpToolkit or AirBender installed, make sure they have been removed completely and you run stock drivers. If you don't see the little Bluetooth tray icon in your taskbar, chances are your Bluetooth isn't working or turned on. Fix it and setup will be happy \ud83d\ude18</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#how-to-fix-previous-version-found-on-reinstall","title":"How to fix \"previous version found\" on reinstall?","text":"<p>If you're getting this setup error...</p> <p> </p> <p>...and can't get rid of it, do the following:</p> <p>Let's assume you downloaded <code>BthPS3Setup_x64.msi</code> to <code>F:\\Downloads</code> (adjust for your particular system's paths accordingly), open a <code>cmd</code>/<code>PowerShell</code>/<code>Terminal</code> as Administrator:</p> <p> </p> <p>In the resulting window insert the following lines (followed by an Enter key press):</p> <ul> <li><code>cd \"F:\\Downloads\\\"</code><ul> <li>Replace <code>F:\\Downloads\\</code> with wherever you downloaded the setup to! For example <code>C:\\Users\\&lt;yourUsernameHere&gt;\\Downloads</code></li> </ul> </li> <li><code>.\\BthPS3Setup_x64.msi FILTERNOTFOUND=\"1\"</code></li> </ul> <p>Now the setup should launch bypassing the error message. Follow the setup's instructions and you're done.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#how-to-fix-bluetooth-device-error-codes-19-39","title":"How to fix Bluetooth device error codes 19 &amp; 39?","text":"<p>... or Code 31 or Code 37 or Code 43. If you end up with a damaged/partial installation for whatever reason (computers, right? \ud83d\ude05) the setup or uninstaller might not even be able to do its work. Worry not though, if you check Device Manager and see that yellow exclamation mark on your Bluetooth host device, check the details and if they give you a familiar error code, like...</p> <p> </p> <p>...or...</p> <p> </p> <p>...or...</p> <p> </p> <p>...or...</p> <p> </p> <p>...this may look frightening, but in essence is an easy fix.</p> <p>Fire up PowerShell as Administrator and execute:</p> <p>PowerShell</p> <pre><code>Remove-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Class\\{e0cbf06c-cd8b-4647-bb8a-263b43f0f974}' -Name 'LowerFilters'\n</code></pre> <p>This removes the requirement to load the filter driver, which might be missing, and therefore prohibiting your radio to boot properly. After this line got executed, either power-cycle your radio or simply reboot and see if that issue got fixed \u2764\ufe0f You may also need to uninstall and install BthPS3 again to completely fix the issue.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#what-do-do-about-error-code-10-status_device_power_failure","title":"What do do about error Code 10 <code>STATUS_DEVICE_POWER_FAILURE</code>?","text":"<p>This device can not start. (Code 10)</p> <p> </p> <p>Your Bluetooth host dongle/card is too old or incompatible \ud83d\ude42 Time to upgrade or switch to something slightly more expensive and sturdy \ud83e\udd1e There is no software-fix possible for this error.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#what-about-code-10-the-specified-request-is-not-a-valid-operation-for-the-target-device","title":"What about Code 10 <code>The specified request is not a valid operation for the target device.</code>?","text":"<p>Your Bluetooth host dongle/card is incompatible \ud83d\ude42 Time to switch to something slightly more expensive and sturdy \ud83e\udd1e There is no software-fix possible for this error.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#what-bluetooth-hosts-are-supported","title":"What Bluetooth hosts are supported?","text":"<p>In short: all of them manufactured within the last decade and running proper stock drivers (means no ScpServer/ScpToolkit, no AirBender, stock as the manufacturer intended). For details see this article.</p> <p>There's a catch</p> <p>Only host radios using USB are supported! This includes the majority of external dongles or integrated cards (they use USB under the hood to connect to the rest of the system). So if your device is using something more exotic like I\u00b2C or UART, I'm afraid that's not gonna work \ud83d\ude14</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#what-controllers-are-supported","title":"What controllers are supported?","text":"<p>TL;DR</p> <p>The genuine original Sony hardware, anything else is a nice-to-have that may or may not work \u2728</p> <p>This is unfortunately impossible to answer a 100% correctly. These drivers have been designed with compromises in mind. They aim to support the original genuine Sony SIXAXIS/DualShock 3 (and Navigation, Move) controllers while operating within the realms of possibilities the Microsoft Bluetooth stack offers and allows. The DualShock 3 (or DS3 in short) has been a fairly popular piece of hardware and many clones have arisen over time, some coming close to the quality of the original, some... well, not quite as much. Aftermarket devices spoof (forge) the Hardware Identification Information that Windows sees and the labels and manufacturer notes on the housing itself. There simply is no rock-solid way to properly identify these devices to separate the good from the ugly. That's the inconvenient truth, any other statement would be a wild guess and not facts. For details see this article.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#can-i-use-my-wireless-keyboardmouseheadphones-with-this","title":"Can I use my wireless Keyboard/Mouse/Headphones with this?","text":"<p>Yes, that's the whole purpose of this design \ud83d\ude09 BthPS3 extends the existing vanilla Bluetooth stack, it doesn't replace it (like ScpToolkit and alike did). This means it can never be as close to the original PlayStation Bluetooth stack (we need to play by Microsoft's design rules, remember?) as other solutions but the trade-off of keeping your stock wireless functionality should be worth it.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#how-many-devices-can-i-connect-at-the-same-time","title":"How many devices can I connect at the same time?","text":"<p>There is no definitive answer to that one, as it depends heavily on the Bluetooth host hardware (quality, antenna design, size and position) and the amount of \"noise\" in your environment (Bluetooth is a fairly \"weak\" protocol compared to all the other radio chatter that's constantly happening in a common household). Users have reported all sorts of working constellations; like up to 6 controllers connected and working concurrently without any human-noticeable delay. So it's up to you to figure this one out! \ud83d\ude01</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#can-it-emulate-another-common-controller-like-xbox-one","title":"Can it emulate another common controller, like Xbox One?","text":"<p>Controller emulation is not the job of these drivers, they provide the plumbing required to get them connected to Windows (and stay connected and keep talk), nothing more, nothing less. Other drivers (which you can find on this site) handle the controller-specific work required.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#is-there-any-noticeable-input-lag-over-bluetooth","title":"Is there any noticeable input lag over Bluetooth?","text":"<p>Another stellar question! With no definite answer \ud83d\ude05 The truthful answer would be: don't know, don't care since it hasn't been measured with scientific equipment. The more down-to-earth answer comes from simple experience and interaction, human to machine: no. You might feel it working better or worse compared to USB, real or placebo. Those who ask this question usually just wanna hear \"nope, it's all fine\" so that they can move on. Well, there you have it, you can move on now \ud83d\ude18</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#why-is-the-dualshock-4-even-supported","title":"Why is the DualShock 4 even supported?","text":"<p>Because I can \ud83d\ude1c literally. It wasn't much extra work to add DS4 compatibility, as under the hood it operates quite similar to the DS3, without the unnecessary quirks. The DualShock 4 works natively without any custom drivers on Windows if paired in \"PC mode\" (PS and share button pressed at the same time until the light bar flashes rapidly), but a little known \"secret\" about this device is, that by default it operates in \"PS mode\" (PlayStation Bluetooth compatible) which BthPS3 can emulate! For now this doesn't really have any real-world advantages but leaves a backdoor for experimentation, if adventurous developers wanna talk to it they way the PlayStation originally does.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#how-do-i-uninstall-this","title":"How do I uninstall this?","text":"<p>In case you don't want/need the software anymore or you're getting this setup message:</p> <p></p> <p>Simply head over to Apps &amp; features and uninstall from there:</p> <p></p> <p>Follow the instructions of the uninstaller and you're all set! \ud83d\udc4b</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#why-does-it-not-work-on-the-raspberry-pi-4","title":"Why does it not work on the Raspberry Pi 4?","text":"<p>If you're running Windows on Raspberry and attempt to install BthPS3 you will be greeted by error <code>Code 31</code> in Device Manager:</p> <p></p> <p>Note the <code>UART</code> in the parent device. Unfortunately the mandatory filter driver that ships with BthPS3 work with USB only, not UART. Therefore this solution is unable to operate on the Raspberry Pi 4 and any other device that uses UART for Bluetooth.</p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#can-i-install-this-on-the-steam-deck","title":"Can I install this on the Steam Deck?","text":"<p>No, BthPS3 will not work on the Steam Deck since it uses UART, not USB.</p> <p></p> <p></p>"},{"location":"projects/BthPS3/Frequently-Asked-Questions/#why-does-the-driver-stop-working-after-turning-bluetooth-off-and-on-again-or-on-hibernatesleep","title":"Why does the driver stop working after turning Bluetooth off and on again, or on hibernate/sleep?","text":"<p>If you are using Intel(R) Wireless Bluetooth(R) (quite common in Laptops) you can run into the following issue:</p> <pre><code>This device can not start. (Code 10)\n\nSTATUS_DEVICE_POWER_FAILURE\n</code></pre> <p></p> <p>Actions triggering this can be either waking up from sleep/hibernate or by manually turning Bluetooth off and on via the Windows-provided buttons:</p> <p></p> <p>Afterwards the profile driver greets you with a yellow exclamation mark:</p> <p></p> <p>This is a problem caused by Intel Wireless and can not be fixed. To mitigate, either do not disable and enable Bluetooth during operation, or use a different Bluetooth host.</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/","title":"Installation Guide (Shibari Edition)","text":"<p>\ud83d\udea8 Obsolete solution \ud83d\udea8</p> <p>DsHidMini (official successor) has been released, please use that instead! This article will remain online for historic reasons but use is discouraged as no more updates will follow!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#whats-this","title":"What's this","text":"<p>Ever wanted to use those pesky outdated yet absolutely lovely game controller devices shipped with your PlayStation(R) 3 on the Windows platform without constantly tripping over wires in your living room and risking becoming a victim of gravity?  Well fear no more, you've come to the right place, mate! We got just the piece of magnificent software you need and all it will cost you is a few minutes of your precious time! </p> <p>Coming to you from the Austrian University of Awesome (AUA ), BthPS3 has surfaced as the result of research and development by one crazed fella; Dr. Nefarius!  Known for his expertise of building software nobody knows how to even install or, for that matter, getting rid of! </p> <p>Sounds exciting? Want to join the herd and risk getting your PC turned into something even greater than before? Well, what are you even waiting for, keep on reading, spirited traveler! </p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#uh-what-do-you-need-from-me","title":"Uh, what do you need from me","text":"<p>Simple! Just latest Windows 10 and any Bluetooth USB device or integrated card (like those you commonly find in portable computers, a.k.a. Laptops) running stock (a.k.a vanilla) drivers! No SCP, no AirBender, just the defaults  (well, not quite, but keep on reading 'till the bottom of the page!  )</p> <p></p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#sweet-give-me-how-to-install","title":"Sweet, give me! How to install","text":"<p>Download Setup for Windows 10</p> <p>Latest BthPS3 Bluetooth Drivers</p> <p> Grab and run the setup, it will tell you everything you need to know, just click through it </p> <p> Now is the time to plug in your Bluetooth dongle, if you haven't already </p> <p> If you have an integrated card - like on laptops - make sure it is turned ON before you continue! </p> <p>If you don't, setup will be very sad  and will abort mission.</p> <p>So play along and ensure it's happy, will ya </p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#alright-that-was-scary-what-to-do-next","title":"Alright, that was scary, what to do next?","text":"<p>Fear not, we're almost at the finish line! Now comes the part that's a bit rough but together we shall succeed!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#get-all-the-files","title":"Get all the files","text":"<p>Download and store all the fun listed here somewhere on your battle station </p> <ul> <li>Get the latest <code>Shibari.zip</code> from here (always pick the highest version number from the bottom for most recent release)<ul> <li>This plays the \"middle man\" between all those drivers you'll install</li> </ul> </li> <li>Get the latest <code>FireShock.zip</code> from here<ul> <li>This is required for USB connection and automatic pairing</li> </ul> </li> <li>Get the latest <code>ViGEm Bus Driver</code> from here<ul> <li>This is required for presenting the devices as either Xbox 360 or DualShock 4 controllers to games</li> </ul> </li> </ul>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#install-drivers","title":"Install drivers","text":"<ul> <li>Extract the <code>FireShock</code> archive somewhere and simply execute the <code>dpinst</code> (or <code>dpinst64</code>) tool included which will install the USB driver</li> <li>Run the <code>ViGEm Bus Driver</code> setup and simply click through it until finished</li> </ul>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#ready-for-some-action","title":"Ready for some action","text":"<p>You made it this far? Great! Remember that <code>Shibari</code> archive from earlier? Extract that somewhere and have a look into the resulting folder. Simply fire up <code>Shibari.Dom.Server.exe</code> in there and your connected DS3 should spawn a virtual Xbox 360 and DualShock 4 controller which your games can pick up. Keep <code>Shibari</code> running for everything to work properly! Check the following F.A.Q. to see how to make it run permanently. Enjoy!</p> <p></p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#faq","title":"F.A.Q.","text":""},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#have-you-gone-insane","title":"Have you gone insane?","text":"<p>Maybe! When you stare into the kernel for too long, the kernel stares back </p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#is-this-some-official-sony-thing","title":"Is this some official Sony thing?","text":"<p>Well, obviously not, as clearly stated literally everywhere! It's a research project I started for fun and pushed towards becoming production-ready and thought it might be of use to my fellow gamers!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#does-this-thing-phone-home-i-see-some-network-traffic-once-a-day","title":"Does this thing phone home? I see some network traffic once a day...","text":"<p>I ship a self-updater with my drivers since pushing security/stability critical enhancements is vital for drivers. The updater checks updates.vigem.org once a day and remains silent if you're sporting the most recent version. There's a scheduled task called <code>BthPS3Updater</code> you can disable/delete by hand if this makes you nervous.</p> <p>Not a thing anymore since v1.3.x of BthPS3.</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#why-dont-you-cover-windows-versions-lower-than-10","title":"Why don't you cover Windows versions lower than 10?","text":"<p>Production-signing is unfortunately fairly annoying and unnecessary complicated for drivers targeting multiple major revisions of Windows so to keep my sanity I went for Windows 10 only. The code of BthPS3 is - as we speak - technically compatible from Windows 7 to 10 so it could be back-ported in the future with little efforts.</p> <p>Starting with this commit Windows 7 support is no longer given due to the introduction of a dependency not present in older OS versions.</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#why-is-this-shibari-thingy-necessary-to-run-this-clutter","title":"Why is this Shibari thingy necessary to run this clutter?","text":"<p>I have plans for getting completely rid of this requirement, but that requires additional drivers which I've started working on but currently don't have the drive or capacity to deal with. Maybe if support and interest from the community rises above a certain threshold I'll tackle that topic some day again!</p> <p>No need, use DsHidMini instead of Shibari and FireShock!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#how-do-i-get-pressure-sensitive-buttons-in-pcsx2-with-this","title":"How do I get pressure sensitive buttons in PCSX2 with this?","text":"<p>That is possible but out of the scope of this project. DsHidMini can do that for you!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#can-i-use-the-motion-capabilities-of-the-ps3-controllers","title":"Can I use the motion capabilities of the PS3 controllers?","text":"<p>That is possible but out of the scope of this project.</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#i-want-some-battery-charge-indicator-like-scp","title":"I want some battery charge indicator, like SCP!","text":"<p>That is possible but out of the scope of this project. DsHidMini can do that for you!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#can-i-have-all-scp-features-like-quick-disconnect-combo-etc","title":"Can I have all SCP features like quick disconnect combo etc.?","text":"<p>That is possible but out of the scope of this project. DsHidMini can do that for you!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#i-sometimes-need-to-power-on-the-controller-twice-or-more-until-it-stays-connected","title":"I sometimes need to power on the controller twice or more until it stays connected...","text":"<p>That's due to how certain connection details get stored within the Microsoft Bluetooth DDIs and when the driver attaches, there's no way around that other than just powering the controller on again!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#the-setup-version-doesnt-match-the-driver-version-it-installs","title":"The setup version doesn't match the driver version it installs...","text":"<p>That's intentional; not every tweak and fix the setup itself receives necessarily requires an update of the driver binaries. So all fine there!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#i-want-a-dualshock-4-emulated-not-an-xbox-360-controller","title":"I want a DualShock 4 emulated, not an Xbox 360 controller!","text":"<p>Open <code>settings.json</code> in your Shibari folder and check out the comments in the <code>\"sinks\"</code> section </p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#ever-since-ive-installed-this-my-ds3-isnt-working-anymore-in-psnow","title":"Ever since I've installed this, my DS3 isn't working anymore in PSNow!","text":"<p><code>FireShock</code> and Sonys official <code>sixaxis</code> driver they ship with PSNow unfortunately can't coexist on the same system, if you want \"traditional\" USB support back you need to uninstall <code>FireShock</code>:</p> <p></p> <p>Use DsHidMini instead to get that feature back!</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#ever-since-ive-installed-this-my-ds4-isnt-connecting-anymore-at-all","title":"Ever since I've installed this, my DS4 isn't connecting anymore at all!","text":"<p>This is a bit tricky at the moment; I've added a workaround to combat this where you should be able to use it like before without any troubles if you simply power it on, let it shut off after one or two seconds and then within a time span of ten seconds power it on again and it should work.</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#how-can-i-keep-shibari-running-in-the-background","title":"How can I keep Shibari running in the background?","text":"<p><code>Shibari</code> can easily be installed as a Windows Service running in the background without the need to start it every time you'd like to use your devices and have an additional Window open all the time.</p> <p>Fire up PowerShell as Administrator and run the <code>Shibari.Dom.Server.exe</code> file with <code>install</code> as an argument, like so:</p> <p></p> <p>The path to the executable file has to match the one on your machine of course \ud83d\ude09</p> <p>Right after that start the service:</p> <pre><code>Start-Service Shibari.Dom.Server\n</code></pre> <p>Check that the service is running:</p> <pre><code>Get-Service Shibari.Dom.Server\n</code></pre> <p></p> <p>Done, delightful \ud83d\ude03</p>"},{"location":"projects/BthPS3/Installation-Guide-Shibari-Edition/#my-controller-is-randomly-pressing-buttons-or-axes-jitter-bug1","title":"My controller is randomly pressing buttons or axes jitter, bug!!1!","text":"<p>Nope, this isn't and never was a software issue. Any misbehavior in regards to reported inputs comes from the controller hardware itself, not my tools. In short: your device is damaged or reached the end of its lifespan, sorry! Time to replace! \ud83d\ude14</p> <p>If you sport some of those lovely fake aftermarket devices from questionable stores from far away costing only a dime or two then you might have been screwed over and my software is not here to fix hardware manufacturers cuts, get proper genuine hardware or at least higher quality replicas </p> <p>Copyright (C) 2018-2021 - Nefarius Software Solutions e.U.</p> <p>This is a community project and not affiliated with Sony Interactive Entertainment Inc. in any way.</p> <p>\"PlayStation\", \"PSP\", \"PS2\", \"PS one\", \"DUALSHOCK\" and \"SIXAXIS\" are registered trademarks of Sony Interactive Entertainment Inc.</p>"},{"location":"projects/BthPS3/Welcome/Installation-Successful/","title":"BthPS3 installed successfully","text":"<p>Congratulations on your BthPS3 installation!</p>"},{"location":"projects/BthPS3/Welcome/Installation-Successful/#next-steps","title":"Next Steps","text":"<p>You will most likely want to install the companion solution DsHidMini (if you haven't already) to get support for a wide variety of games and emulators.</p> <p>You will most likely not need to tweak any of the default settings, however this article explains the configuration utility in great detail.</p> <p>You can show your gratitude towards the authors of the software by making a donation.</p>"},{"location":"projects/BthPS3/Welcome/Installation-Successful/#troubleshooting","title":"Troubleshooting","text":"<p>If you are facing difficulties getting your devices to connect check out the following resources before seeking support:</p> <ul> <li>Controller Compatibility</li> <li>Frequently Asked Questions</li> </ul>"},{"location":"projects/BthPS3/Welcome/Installation-Successful/#event-logs","title":"Event Logs","text":"<p>The drivers log warnings and critical errors to the Windows Event Log under <code>Windows Logs</code> / <code>System</code> from these event sources:</p> <ul> <li><code>Nefarius Bluetooth PS Filter Service</code></li> <li><code>Nefarius BthPS3 Profile Driver</code></li> </ul> <p></p>"},{"location":"projects/BthPS3/Welcome/Installation-Successful/#driver-traces","title":"Driver Traces","text":"<p>To get even more information out of the drivers follow this article.</p>"},{"location":"projects/DsHidMini/","title":"About DsHidMini","text":"<p>DsHidMini is a universal driver for the dated yet beloved DualShock 3 Controllers used by the Sony PlayStation 3 (Navigation and Motion Controller support is planned). It's aimed to be a full, modern replacement of the discontinued ScpToolkit, feature-rich yet lightweight providing a wide range of compatibility with existing Games, Tools and Emulators. Developed for and compatible with latest Windows 10/11.</p> <p>No Windows XP/Vista/7/8/8.1 support</p> <p>DsHidMini heavily depends on amazing libraries and frameworks provided by Microsoft, unfortunately those are not available on anything older than Windows 10/11. Upgrade now \u2728</p> <p>No fake/aftermarket/3rd-party/non-Sony Controller support</p> <p>This solution was developed for the official Sony-designed and sold SIXAXIS/DualShock 3 controller hardware that was shipped with the consoles. Over time countless (cheaply designed and manufactured) copy-cats have been released, some with major compatibility issues with Windows that can't be addressed. So if you attempt to use DsHidMini with wannabe-PS3-Controllers and it doesn't work you're on your own, do not open issues regarding this, you will receive no help because we can't provide any. Refund the controller and get a genuine one (new-old-stock) or buy an Xbox controller \u2764\ufe0f</p>"},{"location":"projects/DsHidMini/#installation","title":"Installation","text":"<p>Join the cool-kids-gang and simply follow the installation instructions!</p>"},{"location":"projects/DsHidMini/#development-activity","title":"Development activity","text":"<p>A brief summary of the recent development activity.</p> <p> </p>"},{"location":"projects/DsHidMini/#demo-videos","title":"Demo-Videos","text":"<p>A few videos about various topics and progress reports over the development cycle of the project can be found below. Since videos can't be updated, always assume the written documentation is more up to date and favour that over the videos! You have been warned \u2764\ufe0f</p>"},{"location":"projects/DsHidMini/#2021-03-08-dshidmini-ds4-mode-custom-led-demo","title":"2021-03-08 DsHidMini DS4 mode custom LED Demo","text":""},{"location":"projects/DsHidMini/#2021-03-08-dshidmini-sdf-mode-explained-with-pcsx2-v170","title":"2021-03-08 DsHidMini SDF mode explained with PCSX2 v1.7.0","text":""},{"location":"projects/DsHidMini/#2021-02-27-dshidmini-demo-rpcs3","title":"2021-02-27 DsHidMini Demo RPCS3","text":""},{"location":"projects/DsHidMini/#2021-02-10-dshidmini-usb-led-charging-animation","title":"2021-02-10 DsHidMini USB LED Charging Animation","text":""},{"location":"projects/DsHidMini/#2020-03-18-dshidmini-demo-pcsx2-150","title":"2020-03-18 DsHidMini Demo PCSX2 1.5.0","text":"<p>Copyright (C) 2020-2025 - Nefarius Software Solutions e.U.</p> <p>This is a community project and not affiliated with Sony Interactive Entertainment Inc. in any way.</p> <p>\"PlayStation\", \"PSP\", \"PS2\", \"PS one\", \"DUALSHOCK\" and \"SIXAXIS\" are registered trademarks of Sony Interactive Entertainment Inc.</p>"},{"location":"projects/DsHidMini/Experimental/Version-3-Beta/","title":"Welcome to Version 3 Beta Testing","text":"<p>Ahoy there! \ud83d\udc4b If you can read this you're most probably part of the DsHidMini Version 3 Beta crew, welcome!</p> <p>Please read this article thoroughly before continuing to use the software or asking questions about it.</p>"},{"location":"projects/DsHidMini/Experimental/Version-3-Beta/#participation-rules","title":"Participation rules","text":"<p>The dev team is small, like, really small, so we have no time for any BS. If you want to help us find and fix bugs, some rules are inevitable or the ride won't be any fun.</p> <ul> <li>Participating in a Beta implies you are somewhat comfortable with advanced Windows/PC usage and able to solve problems on your own. Do not use the Beta releases if you just want to get gaming ASAP, use the stable version 2 releases instead!</li> <li>Before asking questions about what new features are available or which bugs were fixed check both the open and closed issues and PRs on GitHub first! We know reading is annoying but so is repeating answering the same questions over and over again to us.</li> </ul>"},{"location":"projects/DsHidMini/Experimental/Version-3-Beta/#make-sure-to-have-the-new-controlapp-tool","title":"Make sure to have the new ControlApp tool","text":"<p>Version 3 uses a completely different configuration system so the old <code>DSHMC.exe</code> can not be used with version 3.</p> <ul> <li>You can download the latest build of the new control app from here</li> <li>You don't need to have the ControlApp open for DsHidMini to work. Only use it to monitor and configure DsHidMini controllers, so keep it in a convenient location for easy access<ul> <li>ControlApp requires the .NET Desktop Runtime 8 to be able to run. To check whether you already have it, simply try opening the ControlApp \u2014 It will either open normally or prompt you to install .NET Desktop Runtime 8</li> </ul> </li> </ul>"},{"location":"projects/DsHidMini/Experimental/Version-3-Beta/#important-facts","title":"Important facts","text":"<ul> <li>The mandatory redirect to this page will NOT be removed until a stable public release becomes available.</li> <li>The documentation in this site for Version 3 is still being built.</li> <li>Manually check for updates regularly while the auto-update infrastructure is still being built:<ul> <li>Check for new pre-releases of the driver setup.</li> <li>Check for new builds of the control app.</li> </ul> </li> </ul> <p>\ud83d\udc49 You can follow development progress and chats about the solution on our Discord. I leave finding it as an exercise to the user \ud83d\ude09</p>"},{"location":"projects/DsHidMini/Experimental/Version-3-Beta/#removal","title":"Removal","text":"<p>Check the dedicated V3 BETA installation/removal page</p>"},{"location":"projects/DsHidMini/v2/","title":"Major Version 2","text":"<p>404</p>"},{"location":"projects/DsHidMini/v2/DS4-Mode-User-Guide/","title":"DS4Windows Mode User Guide","text":""},{"location":"projects/DsHidMini/v2/DS4-Mode-User-Guide/#general-info","title":"General info","text":"<p>Jays2Kings' DS4Windows IS NOT SUPPORTED!</p> <p>If you just search \"DS4Windows\" on Google/Bing/whatever the first result will probably be the obsolete Jays2Kings' version</p> <p>In <code>DS4Windows</code> HID Device Mode, the controller appears as a custom device that can only be detected by Ryochan7's DS4Windows, allowing the user to then emulate a DualShock 4 or Xbox 360 (XInput) controller as well as make use of most of its features.</p> What worksWhat does NOT work <ul> <li>Xbox 360 (XInput) / DualShock 4 emulation according to the selected profile settings in DS4Windows</li> <li>Rumble works as normal</li> <li>DS4's Touchpad Button can be used by remapping a button to it (e.g.: use Select as the TP button instead of Share)</li> <li>DS3's LEDs can be controlled by setting the correct Light Bar colors (more on that on a later section)</li> <li>DS4Windows's <code>Flash Lightbar at High Latency</code> function makes the LEDs flash accordingly</li> <li>Basically every other DS4Windows function that is not related to the Light Bar or motion works as intended</li> </ul> <ul> <li>DS3 controllers are always recognized as if they were connected by USB. As such, DS4Windows Bluetooth functions like auto-disconnect on idle and disconnect on button combo are not supported. This is a limitation on DsHidMini side and can't be fixed by DS4Windows. The built-in equivalent functions of DsHidMini should be used instead</li> <li>Motion/UDP server is not supported and will remain so until someone manages to translate the motion info from the DS3 to the DS4 motion standard</li> <li>Settings that make the Light Bar color flash, pulse or change randomly (rainbow mode) are not supported</li> <li>Specific DS4 Touchpad movements are not supported, only the Touchpad Button (another button needs to be remapped to it)</li> </ul>"},{"location":"projects/DsHidMini/v2/DS4-Mode-User-Guide/#using-the-controller-with-ds4windows","title":"Using the controller with DS4Windows","text":"<ul> <li>To start, the controller must be in <code>DS4Windows</code> mode</li> <li>Download the latest Ryochan7's DS4Windows release package according to your system architecture</li> <li>Extract the package to an easily accessible folder</li> <li>Run DS4Windows.exe</li> <li>Install the ViGEmBus Driver if asked to</li> </ul> <p>After that, the controller should be properly recognized by DS4Windows. If it's not, verify again if it is in \"DS4Windows mode\".</p> <p></p>"},{"location":"projects/DsHidMini/v2/DS4-Mode-User-Guide/#important-remarks","title":"Important remarks","text":"<p>From here, DS4Windows can be used mostly as usual. XInput and DS4 emulation, as well other functions, can then be set-up in the profiles settings according to the user needs. Besides that:</p> <ul> <li>Keep in mind: <code>Select</code> and <code>Start</code> buttons are recognized as the <code>Share</code> and <code>Options</code> buttons in DS4Windows </li> <li>In case you need, there are more detailed instructions on how to change to DS4 emulation in the FAQ</li> <li>If you want your controller's LEDs to represent the current battery level, check the Simple Led Control -&gt; Example 2 in the Light Bar color to LEDs translation SECTION<ul> <li>Read the full Light Bar translation section if you want to check all possible types of LED control that are possible via DS4Windows settings  </li> </ul> </li> <li>It's recommended you have a quick look at the Frequently Asked Questions section, read at least the title of the topics</li> </ul>"},{"location":"projects/DsHidMini/v2/DS4-Mode-User-Guide/#light-bar-color-to-leds-translation","title":"Light Bar color to LEDs translation","text":"<p>Optional section</p> <p>Read this section if you want to control your controller's LEDs to show the current battery or selected profile</p> <p>By setting the correct Light Bar color values in the profile settings it is possible to control the LEDs on the DS3, which can be useful to:</p> <ul> <li>Make the controller's LEDs represent the current battery level</li> <li>Represent the current selected profile as a specific LED</li> <li>Indicate the battery level by using Special Actions in the profile's settings</li> </ul> <p>Beware that functions in DS4Windows that make the Light Bar flash, pulse or randomize the colors (<code>rainbow mode</code>) are not supported and can make the LEDs change to an undesired state, though the <code>Flash Light Bar at High Latency</code> function do is supported and will make the LEDs flash at a high frequency.</p> <p>There are 2 modes of Light Bar to LED control: Simple and Complete. To learn how to use them and see easy to follow examples expand the following item:</p> Modes of Light Bar Translation (click to expand) Simple LED controlComplete LED control <ul> <li>Simple to set-up<ul> <li>Check the examples in the end of this section!</li> </ul> </li> <li>Good to represent which profile is active (see example 1)</li> <li>Necessary when making DS4Windows show the controller's battery level and for battery related <code>Special Actions</code> (see examples 2 and 3 respectively)</li> </ul> <p></p> <p>FORMS OF ACTIVATION:</p> Simple LED control mode How to activate Description Single mode Green and Blue = 0 Only the chosen LED is ON Filling Mode Green = 0, Blue = 255 The chosen LED and the ones before it are ON <p>When this form of translation is active, the <code>Red color value</code> will be translated to the LEDs state according to the following table:</p> RED value (Dec) LED state 0 - 64 Blinking LED 1 65 - 94 LED 1 95 - 148 LED 2 149 - 201 LED 3 202 - 255 LED 4 Example 1: Setting up a profile to be represented as LED 3 only (single mode) <p></p> Example 2: Setting up a profile to reflect the controller's battery level <p></p> Example 3: Setting up a Special Action to make the LEDs reflect the controller's battery level <p></p> <ul> <li>\"Harder\" to set-up (not really)</li> <li>Allows any combination of LEDs on</li> <li>Useful if the user wants to differentiate between more than 4 profiles</li> </ul> <p>HOW TO ACTIVATE: Green and Blue = 255</p> <p>When this form of translation is active, the Red color value from 0 to 15 will be translated to the LEDs state according to the following table:</p> LED 4 LED 3 LED 2 LED 1 RED value (Dec) 0 ON 1 ON 2 ON ON 3 ON 4 ON ON 5 ON ON 6 ON ON ON 7 ON 8 ON ON 9 ON ON 10 ON ON ON 11 ON ON 12 ON ON ON 13 ON ON ON 14 ON ON ON ON 15 <p>e.g.: Setting up a profile to be represented as LEDs 4 and 2.</p> <p></p>"},{"location":"projects/DsHidMini/v2/DS4-Mode-User-Guide/#frequently-asked-questions","title":"Frequently Asked Questions","text":"How do I change between XInput and DS4 emulation? <p>The controller that DS4Windows emulates is dependent on the current selected profile. By default, the profile that comes with DS4Windows called... Default... is set to emulate a Xbox 360 controller. You can create new profiles with different settings to best fit your use case, though this section will focus solely on creating a profile with DS4 emulation:</p> <ul> <li>Go to the Profiles tab</li> <li>Click on the \"New\" button to create a new profile</li> <li>When asked if a preset is to be used, choose \"yes\"</li> <li>Select <code>Gamepad</code> and then <code>DualShock 4</code> at the Output Controller</li> <li>Adjust the Light Bar color to what you desire accordingly to the Light Bar to LEDs translation section (in the example below the profile will be represented by LED 2)</li> <li>Give a name to your profile (e.g.: DS3 to DS4)</li> <li>Save the profile</li> <li>Back in the Controllers tab, click on the Selected profile box and change from default to the profile you just created </li> </ul> <p>And done, now you can switch between XInput/DS4 emulation by changing between profiles.</p> <p>Keep in mind that some games that support DS4 controllers use the <code>Touch Pad</code> for options/to open the map/etc. In this case, you'll need to remap a button as the <code>Touch Pad</code> button on a new profile to use it.</p> Do I need to use HidHide or the \"hide ds4 controllers\" option to hide my DS3 controller in order to prevent the \"double controller\" issue? <p>No need to. The \"real\" part of the DS3 controller in DsHidMini's DS4Windows Mode can only be recognized by DS4Windows and is therefore already immune to the \"double controller\" or \"double input\" issue. Games will only be able to detect the DS3's emulated/virtual Xbox 360/DS4 counterpart.</p> Select button is not recognized in some games when emulating a DS4 / How do I use the Touch Pad button? <p>A DS3 controller has 13 buttons while a real DS4 controller has 14, this extra button being the <code>Touch Pad</code> button which can't be mapped directly to the DS3 by DsHidMini.</p> <p>Some games that support DS4 controllers use the <code>Touch Pad</code> for options, opening the map, etc. To work around this, the user needs to remap an existing button to the <code>TP</code> one. </p> <p>Usually, games that use the <code>TP</code> button don't use the <code>Share</code> button (the default <code>Select</code>), so the usual bet is to remap it to the <code>TP</code>, though any other one can be chosen. So, after creating a profile with <code>DS4</code> emulation:</p> <ul> <li>Duplicate your DS4 profile, choose a different name to it</li> <li>Edit the new profile</li> <li>On the left side, in the DualShock 4 picture, click on the button you want to remap</li> <li>On the new window that appears, select the middle of the Touch Pad</li> <li>Save your profile and switch to it</li> </ul> <p>If a game uses both the <code>Share</code> and <code>TP</code> buttons, you can have a profile with <code>Share</code> as it is and the <code>PS</code> button remapped to the <code>TP</code>. Or, if you want more advanced solutions, you can use <code>special actions</code> in the profile settings so you can switch between different profiles by button combinations mid-game.</p> Steam/Some emulator or app doesn't detect my controller when emulating a DS4, only when emulating a Xbox 360 <p>Steam and some other apps/emulators (Yuzu/CEMU) will fully ignore DS4 controllers, real or virtual, if they detect that DS4Windows is running. This happens as their own means of preventing the \"double controller\" issue, which is not a problem for DS3 controllers being used with DS4Windows.</p> <p>To workaround this detection and make those apps stop ignoring the DS4 controller, DS4Windows needs to be running under a custom \".exe\" name.</p> <p>Some remarks regarding Steam</p> <ul> <li>Regarding most Steam games, 99% of the games that support DS4 controllers should detect the emulated one as normal regardless if Steam itself is not</li> <li>If using a custom \".exe\" name it's also recommended to DISABLE Steam's \"Playstation Configuration Support\", in its controller settings, so Steam doesn't remap your controller again along DS4Windows</li> <li>A custom \".exe\" name must be used with DS4W for the emulated DS4 to interact with Steam's Big Picture Mode<ul> <li>But the \"Playstation Configuration Support\" option doesn't need to be enabled for this</li> </ul> </li> </ul> 'X' game does not detect my emulated DS4 / my game is not showing PS button icons <ul> <li>First, double check if the game actually supports DS4 controllers and has native PS icons when played with a DualShock 4. There is no direct way to check this besides just testing, Googling around and looking at forums</li> <li>If the game does not support DualShock 4/PS icons then that's in no way related to us and we can't do anything about it</li> <li>If you are 100% sure the game supports PS button icons/DualShock 4, then it may be detecting that DS4Windows is running and then ignoring DS4 controllers (super rare case, only 1 game is known to do it). Check the topic above on how to solve this</li> <li>If the game still doesn't recognize the emulated DualShock 4 then we have no idea what's going on and you are welcome on reaching us through the proper means</li> </ul> How do I do 'X' thing on DS4Windows? <p>DS4Windows is a really amazing tool that can do lots of things, but the purpose of this guide isn't covering DS4Windows in itself, it's to give users the minimum necessary to have XInput/DS4 emulation and to cover DsHidMini related functions, like Light Bar color to LEDs translation. Because the other things it can do are not related to DsHidMini then it's recommended that you look in its wiki or google around for online tutorials. </p>"},{"location":"projects/DsHidMini/v2/FAQ/","title":"Frequently Asked Questions","text":"<p>There is another FAQ for wireless</p> <p>If you're facing wireless connection issues check out the BthPS3 FAQ as well!</p>"},{"location":"projects/DsHidMini/v2/FAQ/#xinput-ds3-ds4-what-are-you-talking-about","title":"XInput? DS3? DS4? What are you talking about?","text":"<p>Know the terms</p> <ul> <li>The controller shipped with the Sony PlayStation 3 \ud83d\udc49 DualShock 3 (DS3)</li> <li>The controller shipped with the Sony PlayStation 4 \ud83d\udc49 DualShock 4 (DS4)</li> <li>Xbox 360 controller \ud83d\udc49 XInput (compatible) controller/device</li> <li>Xbox One controller \ud83d\udc49 XInput (compatible) controller/device</li> </ul>"},{"location":"projects/DsHidMini/v2/FAQ/#what-is-dshidmini","title":"What is DsHidMini?","text":"<p>Check out the repository README and the main project page.</p>"},{"location":"projects/DsHidMini/v2/FAQ/#i-am-already-using-scptoolkit-motioninjoy-shibari-whatever-should-i-move-to-dshidmini","title":"I am already using ScpToolKit / MotionInJoy / Shibari / Whatever, should I move to DsHidMini?","text":"<p>That is entirely up to you of course \ud83d\ude42 Do you wish to stick with abandoned, outdated, unmaintained, complex and potentially untrustworthy software that will work less and less the further Windows and Games advance, or do you want to step into the light and use fresh, stable, thought-through open software that simply delivers what it promises? Your call \ud83d\ude09</p>"},{"location":"projects/DsHidMini/v2/FAQ/#how-do-i-use-it","title":"How do I use it?","text":"<ul> <li>Follow the How to Install guide</li> <li>Learn about the different DsHidMini HID Device Modes your controller can be, the characteristics of each mode and how to change between them.</li> </ul> <p>After DsHidMini is active and the controller connected, all you need is to change to the mode best suited to your use case. Keep in mind that if you want to use your controller as a XInput (Xbox 360) or DualShock 4 controller, there are a few extra steps left to be followed.</p> <p> </p>"},{"location":"projects/DsHidMini/v2/FAQ/#does-my-fake-ps3-controller-work-with-dshidmini","title":"Does my fake PS3 controller work with DsHidMini?","text":"<p>Short answer: it depends. Long answer: it depends \ud83d\ude42 This is community software with no ties to any hardware manufacturer, all we can provide is knowledge based on research and reverse engineering.</p>"},{"location":"projects/DsHidMini/v2/FAQ/#what-are-the-hid-device-modes-which-one-should-i-use","title":"What are the HID Device Modes? Which one should I use?","text":"<p>Go back to the How do I use it? question.</p>"},{"location":"projects/DsHidMini/v2/FAQ/#what-does-my-controllers-led-represent-how-do-i-quickly-disconnect-the-controller-on-bluetooth","title":"What does my controllers' LED represent? How do I quickly disconnect the controller on Bluetooth?","text":"<p>Read the Features section of the main GitHub page of DsHidMini.</p>"},{"location":"projects/DsHidMini/v2/FAQ/#how-to-fix-device-timeout","title":"How to fix <code>Device Timeout</code>?","text":"<p>This device cannot start. (Code 10)  </p> <p>{Device Timeout} The specified I/O operation on %hs was completed before the time-out period expired.</p> <p></p> <p>This is a known issue that can happen in some occasions. By the time of writing, no known fix exists.</p>"},{"location":"projects/DsHidMini/v2/FAQ/#how-do-i-use-my-controller-as-a-xbox-360-or-dualshock-4","title":"How do I use my controller as a Xbox 360 or DualShock 4?","text":""},{"location":"projects/DsHidMini/v2/FAQ/#recommended-method","title":"Recommended method","text":"<p>Set the controller to <code>DS4Windows Mode</code> and use it with Ryochan7's DS4Windows. For more detailed instructions and other information, follow the DS4Windows Mode User Guide and you'll be good to go.</p> <p> </p>"},{"location":"projects/DsHidMini/v2/FAQ/#alternative-methods","title":"Alternative methods","text":"<p>If, for whatever reason, you don't want to use DS4Windows and prefer to choose your own remapping tool, then you have the following options:</p> <ul> <li> <p>Using the Controller in <code>SXS Mode</code> + Steam: Steam will detect the controller as an official PlayStation 3 controller as long as <code>PlayStation configuration support</code> is enabled. XInput and DS4 emulation are then done automatically according to what Steam thinks the game supports.</p> </li> <li> <p>Using the controller in <code>SDF or GPJ Mode</code> + another remapping software: in <code>SDF/GPJ Mode</code> the controller is presented as a generic gamepad which can then be used with remapping tools like x360ce, UCR etc.</p> </li> </ul>"},{"location":"projects/DsHidMini/v2/FAQ/#what-is-the-best-way-to-use-my-controller-in-gamesemulators","title":"What is the best way to use my controller in games/emulators?","text":"<p>The answer is: it depends.</p> <p>You need to verify which <code>Input API</code> is supported in whatever you are using and if you want to use DS3 specific functions, like pressure buttons or motion controls. The following table should help you:</p> \"I want to...\" How to use your DS3 (recommendation) Notes Play modern PC games <code>XInput</code> or <code>DualShock 4</code> Check the How do I use my controller as a Xbox 360 or DualShock 4? section. Not all modern games support DS4 controllers, and those that do support it sometimes don't support its rumble Use the DS3 as a common gamepad for most emulators <code>XInput</code> or <code>GPJ Mode</code> The gamepad part of <code>GPJ Mode</code> should be compatible with emulators that support only <code>DirectInput</code> Use RetroArch <code>XInput</code> Though RetroArch does support <code>DirectInput</code>, its rumble support is currently broken. <code>XInput</code> should be used instead to have working rumble Use RPCS3 <code>SXS Mode</code> Check the How do I use DsHidMini with RPCS3? section Use the DS3 in PCSX2 with pressure buttons <code>SDF Mode</code> Check the How do I set the controller's pressure buttons in PCSX2? section"},{"location":"projects/DsHidMini/v2/FAQ/#how-do-i-use-dshidmini-with-rpcs3","title":"How do I use DsHidMini with RPCS3?","text":"<p>It's recommended that you use your DS3 controller in <code>SXS Mode</code> and then choose on RPCS3's controller settings the <code>DualShock 3</code> Handler. When doing so, RPCS3 should automatically pick and set your DS3, with full support to all its functions including LEDs, pressure buttons and motion.</p> <p> </p>"},{"location":"projects/DsHidMini/v2/FAQ/#how-do-i-set-the-controllers-pressure-buttons-in-pcsx2","title":"How do I set the controller's pressure buttons in PCSX2?","text":"<p>The recommended method is the following:</p> <ul> <li>Set the controller into <code>SDF Mode</code></li> <li>Go to PCSX2 input settings</li> <li>Make sure <code>DirectInput</code> is activated at the <code>Game Devices APIs</code> options (DO NOT CHECK the <code>DualShock 3 native mode</code> box)</li> <li>Open the DsHidMini Control Client and check the <code>Mute digital pressure buttons</code> checkbox</li> <li>Back to PCSX2 input settings, on the <code>Pad X</code> tab, configure everything EXCEPT L3 / R3 / Start / Select / Analog / Mouse</li> <li>Go into the DsHidMini Control Client and uncheck the <code>Mute digital pressure buttons</code></li> <li>Finish setting the L3 / R3 / Start / Select buttons. The <code>Analog</code> and <code>Mouse</code> buttons are not necessary</li> <li>At the <code>Add Force Feedback Effect</code> select your DS3 controller</li> <li>Only <code>Constant Force</code> is required/supported, don't select any other effect, it will not work</li> <li>Finish by clicking on <code>OK</code></li> </ul> <p> </p>"},{"location":"projects/DsHidMini/v2/FAQ/#how-do-i-use-the-motion-sensors-with-emulators","title":"How do I use the motion sensors with emulators?","text":"<p>The only emulator that can use the DS3 motion sensors is the RPCS3 emulator when using the DualShock 3 handler.</p> <p>For now, it's impossible to use the controller's motion with other emulators, like CEMU, Yuzu, Dolphin etc. The reason for this is that the PS3 controller only has 1 gyroscope, while modern controllers have 3 gyros. While it's possible to \"emulate\" the missing gyros by using the sensors it does have, the whole process involves many maths that are not implemented at the moment and are at the very bottom of DsHidMini's To-Do list.</p>"},{"location":"projects/DsHidMini/v2/FAQ/#i-did-everything-right-and-it-just-wont-connect-via-bluetooth","title":"I did everything right and it just won't connect via Bluetooth!","text":"<p>Triple-check that you didn't attempt \"conventional pairing\" in the past, if you did so the controller will never ever successfully connect, no matter what you do. To check this, open the Bluetooth Settings page within Windows and check the list for entries similar to:</p> <p> </p> <p> </p> <p>Select it and click the \"Remove device\" button. Then properly pair it once by plugging it into USB, unplug and press the PS button. Should all work now!</p> <p>Another hint would be if you see an active connection in the notifications panel, but the controller doesn't appear in DSHMC:</p> <p> </p>"},{"location":"projects/DsHidMini/v2/FAQ/#i-installed-everything-but-the-controller-doesnt-appear-in-device-manager-devices-and-printers-or-the-control-app","title":"I installed everything but the controller doesn't appear in Device Manager, Devices and Printers or the control app!","text":"<p>You do not have a SIXAXIS/DualShock 3 device then. To verify, plug in your device via USB, get the tool DevManView from NirSoft and search for <code>USB\\VID_054C&amp;PID_0268</code> like so:</p> <p></p> <p>If you can not find at least one match you do not have a DS3 and DsHidMini will not work. End of story. No, support can not help you with that. Accept it.</p> <p>This is a DS3:</p> <p></p> <p>These are not:</p> <p></p> <p></p> <p>Neither are the DualShock 4 nor the DualSense. I am baffled that this is apparently really hard to understand \ud83e\udd26\u200d\u2642\ufe0f</p>"},{"location":"projects/DsHidMini/v2/FAQ/#i-checked-the-hardware-id-it-matches-but-it-still-does-not-work","title":"I checked the hardware ID, it matches but it still does not work!","text":"<p>In very rare cases Windows might have installed the driver but is not loading it onto the controller device. You can force Windows to do that:</p> <ul> <li>Find the <code>USB Input Device</code> node with the mentioned hardware IDs in Device Manager</li> <li>Open Properties, on the <code>Driver</code> tab, hit <code>Update Driver</code></li> <li>Follow this sequence of choices in the upcoming wizard: </li> <li>After that DsHidMini has been loaded successfully! Repeat on subsequent controllers if necessary.</li> </ul>"},{"location":"projects/DsHidMini/v2/FAQ/#how-can-i-check-if-my-dualshock-3-is-genuine","title":"How can I check if my DualShock 3 is genuine?","text":"<p>Short answer: you probably can't. Long answer: read this.</p>"},{"location":"projects/DsHidMini/v2/FAQ/#im-having-x-problem-when-using-dshidmini-what-should-i-do","title":"I'm having \"X\" problem when using DsHidMini, what should I do?","text":"<ul> <li>Trouble when installing DsHidMini or connecting your controllers to the computer: check the How to Install Troubleshooting section</li> <li>Controller works normally most of the time but have random button presses or buttons fail to register: most likely a hardware fault, not related to DsHidMini</li> <li>Figure it out yourself \ud83d\udc4d There isn't always someone available in life to hold your hand \ud83d\udcaa</li> </ul>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/","title":"HID Device Modes Explained","text":"<p>Important topic</p> <p>This is one of the core features of the driver and understanding it is vital for great gaming experience so take your time and study thoroughly \ud83d\ude18</p> <p>DsHidMini aims for maximum possible compatibility with existing tools or games without the need for any custom code. It supports different \"HID Device emulation modes\", meaning upon boot-up it can present the controller as different types of HID devices, each sporting a unique set of specialized features outlined below. The device mode you choose dictates the level of compatibility with certain 3rd party software and how the controller is \"seen\" by processes. Read on for details.</p>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/#how-to-adjust-the-settings","title":"How to adjust the settings","text":"<p>Connected controllers using DsHidMini can be adjusted in the DsHidMini Control UI tool (<code>DSHMC.exe</code>) that is downloaded along the driver. It needs to be run as Administrator to allow changing the current HID Device Mode. After every change, press the \"Apply changes\" button to make them effective, which will cause the affected controller to disconnect on Bluetooth and restart on USB. For Bluetooth it needs to be powered on again manually afterwards by pressing the \"PS\" button.</p> <p></p> <p>The HID Device Mode is a per device, per connection type setting, meaning that:</p> <ul> <li>Each connected controller can be set to a different mode</li> <li>The same controller can be in different modes when wired or wireless, so always check which mode the device is set to when transitioning from wired to wireless and vice versa</li> </ul>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/#hid-device-modes","title":"HID Device Modes","text":"<p>The games and tools outlined here are recommendations, please feel free to experiment to your heart's content \u2764\ufe0f</p>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/#sdf","title":"SDF","text":"<p>TL;DR:</p> <p>Use this mode for best compatibility with the older pre-Qt versions of the PCSX2 PlayStation 2 Emulator. For PCSX2 Qt follow this video guide!</p> <p>Single Device with Force Feedback mode. In this mode, the controller is presented as one \"almost\"-DirectInput-compatible HID device with pressure sensitive features exposed as additional sliders. The rumble motors can be controlled via Force Feedback effects (Constant Force Effect). The advantage of this mode is a 100% compatibility with all unmodified versions of PCSX2 with the LilyPad gamepad plugin (shipped by default).</p> <p>The downside of this mode is, that the pressure axes exceed the limit of supported axes per device and therefore pressure sensitive axes will not be available in games using DirectInput. They will however work fine with any engine using the low level HID API instead.</p> <p>The default LED behavior in this mode is the charging animation and can't be altered.</p>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/#gpj","title":"GPJ","text":"<p>TL;DR:</p> <p>Use this mode with x360ce or to experiment with older games.</p> <p>Gamepad plus Joystick mode. In this mode, the controller is presented as two separate HID devices; a traditional gamepad featuring the same set of features like a common Xbox 360 controller and a Joystick, only handling the pressure axes. This mode guarantees the best potential compatibility with legacy solutions purely relying on DirectInput and works around the mentioned axis limit. The rumble motors can be controlled via Force Feedback effects (Constant Force Effect).</p> <p>The default LED behavior in this mode is the charging animation and can't be altered.</p>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/#sxs","title":"SXS","text":"<p>TL;DR:</p> <p>Use this mode with Steam or the RPCS3 PlayStation 3 Emulator.</p> <p>SIXAXIS.SYS mode. In this mode, the driver emulates the behavior of the official Sony <code>sixaxis.sys</code> driver shipped with the PS Now application. Use this mode to ensure compatibility with Steam, the PS Now application or the RPCS3 PlayStation 3 Emulator.</p> <p>The default LED behavior in this mode is the charging animation. If a compatible application sends output reports to the device, the driver will \"hand over\" control to the application and stops the charging indicator until the device has been restarted.</p>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/#ds4windows","title":"DS4Windows","text":"<p>TL;DR:</p> <p>Use this mode with Ryochan7's DS4Windows. Follow these instructions to set it up properly.</p> <p>DualShock 4 mode. In this mode, the driver emulates a DualShock 4 with an artificial Vendor &amp; Product ID supported by the \"Ryochan7 Edition\" of DS4Windows. You can use almost all features DS4Windows offers with a DualShock 3 (excluding nonexistent features like the track pad or the light bar) including XInput emulation.</p> <p>The default LED behavior in this mode is the charging animation. Once the controller is picked up by DS4Windows, light bar changes will get translated to LED states (see this article for details) and rumble requests passed through.</p> <p>Motion controls are currently not supported (no gyroscope or accelerometer) and therefore will not work with CEMU when the UDP Server is active.</p>"},{"location":"projects/DsHidMini/v2/HID-Device-Modes-Explained/#xinput","title":"XInput","text":"<p>TL;DR:</p> <p>Use this mode with RetroArch, Steam or any game with Xbox Controller support. Read here for details.</p> <p>Xbox One Controller mode. This is the driver default when shipped. In this mode, the controller is emulating an Xbox One Controller with an artificial Vendor &amp; Product ID. This mode guarantees the best potential compatibility with pretty much all modern PC games with Xbox (360/One) Controller support either standalone or shipped through Steam.</p> <p>The default LED behavior in this mode is the charging animation and can't be altered. The lit LED does not represent the player index.</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/","title":"How to Install/Remove","text":"<p>DsHidMini can only work its magic if it's the dominant driver for your controller, you may have others preinstalled that need removal, this guide covers most of the known cases.</p> <p>Do NOT attempt manual PAIRING with the Windows built-in methods!</p> <p>Do not attempt to pair a PS3 Controller on Windows via the built-in device discovery dialog, like:  This will not work and can cause Bluetooth connection to fail completely, so do not this! </p> <p>Check the F.A.Q. for fixing if you did so!</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#installation","title":"Installation","text":"<p>STOP trying to use DsHidMini with random controllers</p> <p>Only and only this controller (Sony DualShock 3 a.k.a. PS3 Gamepad) is supported:  Do NOT contact support for any other device, it will not work, no matter how many times you ask!</p> <p>No matter what software you may have preinstalled, this step is always the same \ud83d\ude00</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#version-2xx","title":"Version 2.x.x","text":"<p>This is the current latest stable major version.</p> <ul> <li>Make sure your UAC is enabled (see here)!</li> <li>If you want Bluetooth support you need to install BthPS3 first (optional for USB)</li> <li>Grab the release from GitHub</li> <li>Download the attached <code>dshidmini_vX.X.X.X.zip</code> archive to an arbitrary location on your machine</li> <li>Unblock the archive if it's blocked<ul> <li>Right-click, properties on the archive, then tick <code>Unblock</code> </li> </ul> </li> <li>Extract the archive (doesn't matter where to, e.g. your Downloads folder)</li> <li>Make sure you know your architecture<ul> <li>On x64 navigate to <code>x64\\dshidmini</code></li> <li>On x86 navigate to <code>x86\\dshidmini</code></li> </ul> </li> <li>Right-click on <code>dshidmini.inf</code> and select Install <ul> <li>If you've never installed great software before \ud83d\ude09 this might show up (hit Install): </li> <li>Should only take a moment until success dialog (may not appear on Windows 11, just continue) </li> </ul> </li> <li>Right-click on <code>igfilter.inf</code> and select Install (do not miss this step) </li> <li>Now connect your controller via USB<ul> <li>\ud83d\udc35 This will automatically pair it to your Windows Bluetooth host if you have working Bluetooth at the time of plugging it in \ud83d\udc35</li> </ul> </li> <li>With your controller connected by USB, open the DsHidMini Control Utility (the <code>DSHMC.exe</code> file that comes along the driver archive) to see if the controller gets detected<ul> <li>Run it as Administrator to change settings, check the documentation for details</li> <li>It is not required to keep the utility running for the driver to function, only if you want to observe battery level or change settings</li> </ul> </li> </ul> <p>By now if you plug in your controller (or reboot the machine) chances are high that everything already works as expected. If it doesn't, worry not, read on here!</p> Version 1.x.x <p>Obsolete version</p> <p>Version 1 has been deprecated and replaced by version 2, which is not backwards compatible, so study the installations instructions carefully and make sure     you use the versions outlined!</p> <ul> <li>If you want Bluetooth support you need to install BthPS3 first (optional for USB)</li> <li>Grab the release from GitHub</li> <li>Download the attached <code>dshidmini_vX.X.X.X.zip</code> archive to an arbitrary location on your machine</li> <li>Extract the archive (doesn't matter where to, e.g. your Downloads folder)</li> <li>Make sure you know your architecture<ul> <li>On x64 navigate to <code>x64\\dshidmini</code></li> <li>On x86 navigate to <code>x86\\dshidmini</code></li> </ul> </li> <li>Right-click on <code>dshidmini.inf</code> and select Install <ul> <li>If you've never installed great software before \ud83d\ude09 this might show up (hit Install): </li> <li>Should only take a moment until success dialog </li> </ul> </li> <li>Now connect your controller via USB<ul> <li>This will automatically pair it to your Windows Bluetooth host if you have working Bluetooth at the time of plugging it in</li> </ul> </li> <li>With your controller connected by USB, open the DsHidMini Control Utility (the <code>DSHMC.exe</code> file that comes along the driver archive) to see if the controller gets detected<ul> <li>Run it as Administrator to change settings, check the documentation for details</li> <li>It is not required to keep the utility running for the driver to function, only if you want to observe battery level or change settings</li> </ul> </li> </ul> <p>By now if you plug in your controller (or reboot the machine) chances are high that everything already works as expected. If it doesn't, worry not, read on here!</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#updating","title":"Updating","text":"<p>If you want to update, simply follow all the same steps of the installation and overwrite any existing files. Reboot your machine to be extra safe if it didn't work right away.</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#removal","title":"Removal","text":"<p>If you want to remove DsHidMini from your computer you first need to delete it from Windows Driver Store:</p> <ul> <li>Use Driver Store Explorer to remove the <code>dshidmini.inf</code> driver:  The driver will still be loaded for controllers that were using it, so be sure to uninstall them from Device Manager  </li> <li>Plug in your controllers</li> <li>Open Device Manager by pressing Win+X and select it from the menu: </li> <li>Expand <code>Nefarius HID Devices</code></li> <li>For each device under <code>Nefarius HID Devices</code>, right click it and select <code>Uninstall Device</code>, then select <code>Uninstall</code> on the appearing confirmation window </li> </ul> <p>After that, DsHidMini should be fully gone from your computer \ud83d\ude25</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#troubleshooting","title":"Troubleshooting","text":""},{"location":"projects/DsHidMini/v2/How-to-Install/#verifying-if-the-controller-is-loading-the-correct-driver","title":"Verifying if the controller is loading the correct driver","text":"<p>The driver can't do anything if it is not being used, so to check this:</p> <ul> <li>Connect your controller by USB cable</li> <li>Open Device Manager by pressing Win+X and select it from the menu</li> <li>Search for and expand the category <code>Nefarius HID Devices</code>, your controller should appear there. Double click on it to check the driver status: </li> </ul> <p>If the device appears there but the driver status indicates some error (e.g. <code>This device cannot start (Error Code 10)</code>) try pressing the <code>Reset</code> button on the back of your controller and then reconnecting it. Rebooting your computer is also worth a shot.</p> <p>If the controller does not appear under <code>Nefarius HID Devices</code> or if this section doesn't exist at all, you probably have another driver taking priority over DsHidMini. To solve this you need to remove those rogue drivers. See how to do so on the removing conflicting drivers section.</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#removing-conflicting-drivers","title":"Removing conflicting drivers","text":"<p>We need to first determine if any other conflicting device driver is present on the system and remove it so DsHidMini can take over that job. The steps outlined here may or may not be applicable to your system, it entirely depends on your past \ud83d\ude1c and the stuff you potentially installed. Worry not though, together we shall succeed \u2728</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#scptoolkit","title":"ScpToolkit","text":"<p>If you had ScpToolkit installed, you need to purge every remains from your machine. Follow this comprehensive removal guide.</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#official-sony-driver","title":"Official Sony driver","text":"<p>If you have/had PS Now installed, chances are high you have the official Sony <code>sixaxis.sys</code> on your system. Follow this procedure to remove it.</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#fireshock","title":"FireShock","text":"<p>If you've used Shibari before you probably have FireShock installed. Follow this procedure to remove it.</p>"},{"location":"projects/DsHidMini/v2/How-to-Install/#controller-does-not-connect-by-bluetooth","title":"Controller does not connect by Bluetooth","text":"<p>Let's go step-by-step with this:</p> <ul> <li>Open Device Manager by pressing Win+X and select it from the menu</li> <li>Check if your Bluetooth Link Manager spec is supported</li> <li>Check if BthPS3 is correctly installed, its status and if its version is <code>v1.3.108</code> or higher: </li> <li>Connect your controller by USB</li> <li>Open the DsHidMini Control Utility (<code>DSHMC.exe</code> file that comes along the driver archive)</li> <li>Check if your device is correctly paired to the current Bluetooth host address. If it's not, try reconnecting your controller by USB sometimes until the pairing completes successfully </li> <li>If the \"pairing\" check is Ok like in the picture above but the device is still not connecting by Bluetooth, try resetting your controller by pressing the <code>reset</code> button on its back, connecting by USB again to have it re-paired to the current Bluetooth address then trying connecting wireless again. Remember to always confirm in the DsHidMini Control UI Tool if the pairing was successful before trying to connect wireless</li> </ul> <p>If after all those tries the device still fails to connect, then maybe:</p> <ul> <li>Your Bluetooth dongle is somehow faulty/unsupported. Try with another model. Also, try using DsHidMini and BthPS3 in another computer or notebook with Bluetooth support to try your luck</li> <li>You may have a fake, copy-cat DS3 controller that uses insecure connections (unsolvable issue). Be sure to see how to check if this is the case</li> <li>You have a fake/copycat controller that expects some specific PS3 behavior that is not mimicked by DsHidMini. This project is focused on official Sony controllers, so aftermarket controllers may or may not work. As such, if a fake controller does not connect via Bluetooth you are on your own and we kindly ask you to refrain from opening support tickets!</li> </ul>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/","title":"Output Rate Control Explained","text":"<p>TL;DR:</p> <p>This feature is primarily for Bluetooth, it is shipped off on USB by default. Feel free to tinker with it though, the defaults are a recommendation that works for a majority of users, but maybe not for you! Experiment! \ud83e\udd70</p>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/#why","title":"Why","text":"<p>Certain revisions (meaning: the same model has been reworked slightly over time and put into production) of the SIXAXIS/DualShock 3 suffer from being susceptible to \"packet flooding\" over Bluetooth. Depending on the circumstances these controllers can start misbehaving if the host (Windows in this case) sends them packets (so called \"Output Reports\") too fast, which means with a time frame between packets smaller than 150ms. This can cause the controller to \"lock up\", like not responding to rumble request or LED state changes for a few seconds or sometimes even until it is power-cycled. The driver takes these flaws into consideration and applies rate control logic to all outgoing packets if these options are enabled.</p>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/#how","title":"How","text":"<p>Adding artificial delays in between packets seems like an easy fix, but causes a clearly user-noticeable delay to rumble requests for games which trigger a series of small rumble on/off requests per second. Simply dropping packets when the driver is flagged \"busy\" can work too, but runs the risk of e.g. rumble off commands getting discarded on error which causes the controller to rumble longer than intended, or even indefinitely. The following \"intelligent\" mechanisms are available to mitigate the issue as transparent and clever as possible.</p>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/#output-report-rate-control","title":"Output Report Rate Control","text":"<p>This is the big brain one \ud83d\ude01 When the time period between to-be-sent output report requests (like Force Feedback Effects) drops below a user-configurable value (default value is 150ms), the following chain of events will happen:</p> <ul> <li>Instead of being sent, the request packet will be copied to a \"cache\", put aside and not getting sent to the controller</li> <li>The wait-period is calculated (minimum required delay subtracted by actual calculated period)<ul> <li>E.g. if a 2nd packet comes in after 50ms with a configured minimum delay of 150ms, we need to wait for the remaining 100ms</li> </ul> </li> <li>A timer is activated to go off after the calculated delay period</li> <li>If new packets arrive during the timer is active, the last cached packet will be replaced by the current to-be-sent-but-still-to-fast-packet<ul> <li>This prevents the rumble off command getting lost, which typically comes in last after a \"packet burst\"</li> </ul> </li> <li>After the timer wait period has elapsed the most recent cached packet is queued to get sent again with a \"high priority\" flag so it won't get accidentally stuck in a timer delay loop again</li> <li>The timer is finished and reset, the cycle begins again if another flooding condition is detected</li> </ul> <p>This may appear confusing and over-engineered at first but in our tests fixed around 99.9% of all known controller lockup issues so I'd say we did a rather fabulous job \ud83d\ude0a</p> <p>It's recommended to keep the default shipped value, which is on.</p>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/#output-report-deduplication","title":"Output Report Deduplication","text":"<p>This is a simple one. If enabled, a succeeding packet will be memory-compared to the previous one and if identical, will get discarded. This approach is obviously risky as \"bursts\" of rumble on commands can get thrown away by mistake so this option is only really useful for very special cases. Feel free to experiment \ud83d\udc96</p> <p>It's recommended to keep the default shipped value, which is off.</p>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/#affected-controller-models","title":"Affected Controller Models","text":"<p>Work in progress</p> <p>This is a list curated by community member efforts, if you don't see your particular model here, consider reaching out and contribute to extend the list \ud83d\udc96</p> <p>You can check if your own controller is affected from this issue by comparing the model number you can find on the sticker on the back of your device.</p>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/#sixaxis-models","title":"SIXAXIS Models","text":"<p>The original SIXAXIS has no rumble motors so the only property to control are the LEDs.</p> <ul> <li>CECHZC1U</li> </ul>"},{"location":"projects/DsHidMini/v2/Output-Rate-Control-Explained/#dualshock-3-models","title":"DualShock 3 Models","text":"<p>The DualShock 3 offers rumble/vibration effects via two (strong and weak) motors included in the handpiece.</p> <ul> <li>CECHZC2U</li> <li>CECHZC2E A1</li> </ul>"},{"location":"projects/DsHidMini/v2/SCP-XInput-Bridge/","title":"SCP XInput Bridge (Proxy DLL)","text":"<p>DsHidMini ships with a custom <code>XInput1_3.dll</code> you can drop in the game directory and use together with SXS mode to fake an Xbox 360-compatible pad for that particular game. Some games/mods/emulators even support the pressure sensitivity extension (like GInput by Silent and PCSX2 Qt Edition). See the video tutorials below.</p>"},{"location":"projects/DsHidMini/v2/SCP-XInput-Bridge/#latest-downloads","title":"Latest downloads","text":"<p>The DLLs included in the GitHub releases can be outdated, the latest builds from Continuous Integration (build server) can be downloaded here. Those contain the latest features and bugfixes but might still contain unaddressed issues. When in doubt, stick to the GitHub release copies.</p> <p>The DLL architecture has to match your game/emulator or it will result in errors.</p> <ul> <li>x64 (64-Bit Intel/AMD) (most used)</li> <li>x86 (32-Bit Intel/AMD)</li> <li>ARM64 (64-Bit ARM)</li> </ul>"},{"location":"projects/DsHidMini/v2/SCP-XInput-Bridge/#usage-in-games","title":"Usage in games","text":"<p>User feedback is required to expand this article \ud83d\ude43 If you know of any tools or games we could link or explain here, contact us on Discord or open a GitHub issue!</p>"},{"location":"projects/DsHidMini/v2/SCP-XInput-Bridge/#gta-san-andreas","title":"GTA San Andreas","text":""},{"location":"projects/DsHidMini/v2/SCP-XInput-Bridge/#rpcs3-and-pcsx2-qt-edition","title":"RPCS3 and PCSX2 Qt edition","text":""},{"location":"projects/DsHidMini/v2/SIXAXIS.SYS-to-DsHidMini-Guide/","title":"Switch from SIXAXIS.SYS to DsHidMini","text":"<p>If the Sony SIXAXIS.SYS driver is present on your system, it may take priority over DsHidMini (on USB) and you need to manually switch drivers like outlined below:</p> <ul> <li>Plug in your controller</li> <li>Open Device Manager by pressing Win+X and select it from the menu: </li> <li>Expand <code>Human Interface Devices</code> and look for <code>Wireless controller for PLAYSTATION(R)3</code> </li> <li>Right-click it and select <code>Update driver</code> </li> <li>Follow the wizard: </li> <li>Use Driver Store Explorer to remove the <code>sixaxis.inf</code> driver: </li> </ul> <p>Done \ud83c\udf89</p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/","title":"XInput Mode Explained","text":""},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#about","title":"About","text":"<p>DsHidMini ships with \"XInput Mode\" by default, this article explains what that actually means and what to expect when using DsHidMini with modern games instead of emulators. Thoroughly make yourself familiar with this topic, as it avoids confusion and false bug reports about issues that are not within the powers of the driver to change.</p> <p>Click on images to enlarge</p> <p>You can click/tap on each image and it will open in full resolution and become easier to read \u2764\ufe0f</p> <p>Why is this required, shouldn't it just be plug and play?!</p> <p>DsHidMini was never intended for use with modern games to begin with, the main goal was to support (PlayStation) emulators first and foremost. I gave you modern game support nonetheless because that's just how awesome I am \ud83d\ude07 Unfortunately most modern game engines are less awesome under the hood in regards to controller handling. If they would actually use XInput as it was intended, you'd be in the clear and wouldn't read these lines. Most engines are enumerating DirectInput and XInput together in a more or less (mostly less) successful way. This can lead to detection and layout issues with DsHidMini. Worry not though, read on to help yourself play your favorite game nonetheless \u2728</p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#troubleshooting-suggestions","title":"Troubleshooting suggestions","text":""},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#double-check-youre-running-in-the-correct-mode","title":"Double-check you're running in the correct Mode","text":"<p>This may seem obvious but is amongst the most common errors. In <code>DSHMC</code> triple-check on wired and wireless that you're actually in XInput Mode as seen below. If you recently changed it and it appears like nothing happened unplug/disconnect and reconnect the controller for the settings to become active!</p> <p></p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#verify-mode-in-device-manager","title":"Verify Mode in Device Manager","text":"<p>Fire up Device Manager, change the <code>View</code> to <code>Devices by connection</code> to make discovery easier and drill down into the node <code>Nefarius HID Devices</code>. Here you need to find your controller(s) and an additional <code>XINPUT compatible HID device</code> like so:</p> <p></p> <p></p> <p>This is essential, if you don't see the highlighted device, the mode will not work. Check the installation guide again, you might have missed a step \ud83d\udc40</p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#check-controller-functionality-with-test-tools","title":"Check controller functionality with test tools","text":""},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#check-controller-in-joycpl","title":"Check controller in <code>joy.cpl</code>","text":"<p>Press the key combination Win+R and enter <code>joy.cpl</code> to bring up the integrated Joystick test and open your device (name might differ on your end, it doesn't matter):</p> <p></p> <p>Verify that the layout displayed here matches the one you see:</p> <p></p> <p>If it differs, you're in the wrong mode or something else is haunted \ud83d\udc7b</p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#check-controller-in-scpuserexe","title":"Check controller in <code>SCPUser.exe</code>","text":"<p>You can download SCPUser from here. It's a very basic and simple XInput detection and test tool. Your controller(s) should show up like so:</p> <p></p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#check-controller-in-web-browser","title":"Check controller in Web Browser","text":"<p>You can also verify the controllers functionality via the Gamepad Tester Website. You may need to wiggle with the controls a bit before it shows up like so:</p> <p></p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#setting-up-steam","title":"Setting up Steam","text":"<p>This mode will work best with games launched through Steam after you configured controller support like outlined here. Open your Steam Settings:</p> <p></p> <p>Go to <code>Controller</code> / <code>GENERAL CONTROLLER SETTINGS</code>:</p> <p></p> <p>Enable at least Xbox Configuration Support and Generic Gamepad Configuration Support:</p> <p></p> <p>Now after you connected your controller, it should get detected by Steam as an Xbox One Controller like shown below:</p> <p></p>"},{"location":"projects/DsHidMini/v2/XInput-Mode-Explained/#configure-your-steam-games","title":"Configure your Steam Games","text":"<p>Now go into your games <code>Properties...</code>:</p> <p></p> <p>In the upcoming dialog go to <code>CONTROLLER</code> and set the override to <code>Enable Steam Input</code>:</p> <p></p> <p>Once the game is launched, you should see the gamepad being detected in the overlay:</p> <p></p> <p>Here's an example of the controller working like an Xbox Controller in a game with no native support for the DualShock 3 (Road Redemption):</p> <p></p> <p>Don't expect Sony button overlays</p> <p>This should be fairly self-explanatory but we repeat it here nonetheless: since the game \"sees\" only an Xbox One Controller (variant), it will show you the Xbox button layout when navigating, this is expected and can not be altered.</p>"},{"location":"projects/DsHidMini/v3/","title":"Major Version 3 (BETA)","text":""},{"location":"projects/DsHidMini/v3/#before-proceeding","title":"Before proceeding...","text":"<ul> <li>The Beta version of DsHidMini V3 is... well, Beta. This means it's not entirely finished and there may be unresolved issues or features that are not yet implemented<ul> <li>This does not mean that horrible things like you PC catching fire can occur. If it does tho, I recommend having a fire extinguisher at hand.</li> </ul> </li> <li>You can always go back to v2 if the experience is not (yet) to your liking, this is not a one-way-street.</li> <li>Before asking questions about what new features are available or which bugs were fixed check both the open and closed issues and PRs on GitHub first! We know reading can be tedious, but repeatedly answering the same questions is equally frustrating for us.</li> </ul>"},{"location":"projects/DsHidMini/v3/#highlights","title":"Highlights","text":"<p>The following features are considered done and have been tested to the best of the abilities to a two-head development team \ud83d\ude09</p> <ul> <li>Native Xbox One Controller emulation<ul> <li>Test as many modern games in this mode as you like, feedback welcome!</li> </ul> </li> <li>Full Windows 11 compatibility<ul> <li>From now on the driver will be signed by Microsoft</li> </ul> </li> <li>A new configuration tool, which allows you to...:<ul> <li>configure LED behavior</li> <li>change/disable the combo used to turn off the controller when wireless</li> <li>adjust the deadzone of the sticks</li> <li>tweak rumble settings</li> <li>etc</li> </ul> </li> <li>ARM64 builds of the driver<ul> <li>Currently untested, feedback welcome!</li> <li>Appears to work fine on Apple Silicon using Windows 11 on Parallels</li> </ul> </li> <li>To be filled...</li> </ul>"},{"location":"projects/DsHidMini/v3/#installation-removal-and-troubleshooting","title":"Installation, removal and troubleshooting","text":"<p>Check the dedicated V3 BETA installation and removal page</p>"},{"location":"projects/DsHidMini/v3/How-to-Install/","title":"How to Install/Remove","text":"<p>DsHidMini V3 BETA installation page!</p> <p>Version 3 is still in BETA. Although all of our tests indicate things are working smoothly keep in mind that you may encounter unknown issues or features that are missing or yet to be implemented.</p> <p>Make sure to check the intro page for the V3 Beta before continuing!</p>"},{"location":"projects/DsHidMini/v3/How-to-Install/#installation","title":"Installation","text":"<p>STOP trying to use DsHidMini with random controllers</p> <p>Only and only this controller (Sony DualShock 3 a.k.a. PS3 Gamepad) is supported:  Do NOT contact support for any other device, it will not work, no matter how many times you ask!</p> <p>No matter what software you may have preinstalled, this step is always the same \ud83d\ude00</p>"},{"location":"projects/DsHidMini/v3/How-to-Install/#version-3xx","title":"Version 3.x.x","text":"<ul> <li>If you want Bluetooth support you need to install BthPS3 first (optional for USB)</li> </ul> <p>For installation of the Version 3 BETA driver and tools, follow along:</p> <ol> <li>Download and install DsHidMini Version 3 Driver by downloading the latest release marked as Pre-release or any version labeled v3.x.x<ul> <li>For the setup to work correctly Windows UAC needs to be enabled. If in doubt, the following page has instructions on how to check its status: link here</li> </ul> </li> <li>Download and execute the DsHidMini ControlApp, a companion application for configuring DsHidMini controllers<ul> <li>You don't need to have the ControlApp open for DsHidMini to work. Only use it to monitor and configure DsHidMini controllers, so keep it in a convenient location for easy access</li> <li>ControlApp requires the .NET Desktop Runtime 8 to be able to run. To check whether you already have it, simply try opening the ControlApp \u2014 It will either open normally or prompt you to install .NET Desktop Runtime 8</li> </ul> </li> <li>Have fun testing!<ul> <li>By now if you plug in your controller (or reboot the machine) chances are high that everything already works as expected. If it doesn't, worry not, read on here!</li> <li>Under default settings controllers should behave as if they were an \"Xbox\" controller (XInput Device)</li> </ul> </li> </ol> <p></p>"},{"location":"projects/DsHidMini/v3/How-to-Install/#updating","title":"Updating","text":"<p>If you want to update, simply follow the same installation steps and overwrite any existing files. Reboot your machine to be extra safe if it didn't work right away.</p>"},{"location":"projects/DsHidMini/v3/How-to-Install/#removal","title":"Removal","text":"<ol> <li>The main Beta v3 driver can be removed by just uninstalling <code>Nefarius DsHidMini Driver</code> in Windows' Apps &amp; features</li> <li>BthPS3 can also be uninstalled the same way as above via Apps &amp; Features</li> <li>The ControlApp companion application isn\u2019t installed in the traditional sense and can be deleted like any other file</li> </ol> <p>After that, DsHidMini should be fully gone from your computer \ud83d\ude25</p>"},{"location":"projects/DsHidMini/v3/How-to-Install/#troubleshooting","title":"Troubleshooting","text":""},{"location":"projects/DsHidMini/v3/How-to-Install/#removing-conflicting-drivers","title":"Removing conflicting drivers","text":"<p>Always try reinstalling DsHidMini V3 first!</p> <p>You don't need to follow this section manually, just try reinstalling DsHidMini V3 as its installer verifies and removes drivers known to conflict with it.</p> Legacy section on conflicting drivers removal (click to expand) <p>We need to first determine if any other conflicting device driver is present on the system and remove it so DsHidMini can take over that job. The steps outlined here may or may not be applicable to your system, it entirely depends on your past \ud83d\ude1c and the stuff you potentially installed. Worry not though, together we shall succeed \u2728</p> <p>ScpToolkit</p> <p>If you had ScpToolkit installed, you need to purge every remains from your machine. Follow this comprehensive removal guide.</p> <p>Official Sony driver</p> <p>If you have/had PS Now installed, chances are high you have the official Sony <code>sixaxis.sys</code> on your system. Follow this procedure to remove it.</p> <p>FireShock</p> <p>If you've used Shibari before you probably have FireShock installed. Follow this procedure to remove it.</p>"},{"location":"projects/DsHidMini/v3/How-to-Install/#dshmcexe-not-detecting-dshidmini-v3-controllers","title":"DSHMC.exe not detecting DsHidMini V3 controllers","text":"<p>DsHidMini V3 requires the new ControlApp companion tool. Check the installation section on how to get it.</p>"},{"location":"projects/DsHidMini/v3/How-to-Install/#controller-does-not-connect-by-bluetooth","title":"Controller does not connect by Bluetooth","text":"<p>This section is under construction. Meanwhile consult all the other existing FAQ articles on our various project pages.</p>"},{"location":"projects/FireShock/","title":"About FireShock","text":"<p>FireShock was a user-mode driver providing an abstraction layer to support Sony PlayStation 3 Controllers on Windows. It was in development from August 2016 to December 2019 until it got archived in favour of better solutions. Its direct successor is DsHidMini.</p> <p>The driver is a minimal C-port of the C# implementation used in ScpToolkit and therefore replaces the Windows stock HID class drivers with a custom implementation.</p> <p>It requires the .NET companion service Shibari to detect connected controllers and have them translated into virtual Xbox 360 or DualShock 4 devices using the ViGEm Framework.</p> <p>It is not advised to use FireShock due to missing support and potentially remaining issues in design and code.</p>"},{"location":"projects/FireShock/Removal-Guide/","title":"FireShock Removal Guide","text":"<p>Download, extract and run Driver Store Explorer and look for the FireShock driver there, tick it, tick the <code>Force Deletion</code> box and finally hit the <code>Delete Driver(s)</code> button.</p> <p> </p> <p>After that, simply unplug and plugin your controller(s) or reboot the machine and let Windows download the manufacturer drivers. Done! \ud83c\udf89</p>"},{"location":"projects/HidGuardian/","title":"About HidGuardian","text":"<p>HidGuardian was a research project and proof of concept Windows kernel-mode filter driver that allows system-wide hiding of joysticks and gamepads, addressing doubled-input issues in games running with remapping utilities. It achieved this by attaching as an upper filter to every HID device and comparing its Hardware IDs to registry-backed filter lists, failing the open request on \"guarded\" devices. It was never really intended to \"go viral\" and was intentionally quite primitive. Nonetheless it has proven useful over the years.</p> <p>It was in development from late 2016 to 2018 until it got archived in favour of better solutions. Its direct successor is HidHide.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/","title":"Users of HidGuardian","text":"<p>Over its lifespan the project has seen some adoption in the following projects. This list is most probably incomplete, please help expanding it by contributing to it. The projects listed are made by 3rd party individuals, we can not provide any form of warranty or support. Appearance in no particular order.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#x360ce","title":"x360ce","text":"<p>\"Xbox 360 Controller Emulator\" allows your controller (gamepad, joystick, wheel, etc.) to function as an Xbox 360 controller. For example, it lets you play games such as \"Grand Theft Auto\" (GTA) or \"Mafia II\" using a Logitech Wheel.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#xoutput","title":"XOutput","text":"<p>If you have an older or not supported game controller (gamepad, wheel, joystick, etc.), but XBox 360 controllers are supported you can use this software and enjoy gaming with your controller.</p> <p>XOutput is a software that can convert DirectInput into XInput. DirectInput data is read and sent to a virtual XInput (Xbox 360 Controller) device. XInput is the new standard game controller input on windows, and DirectInput can no longer be used with Universal Windows Platform software, but with this tool you can use DirectInput devices as well.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#inputmapper","title":"InputMapper","text":"<p>Input Mapper is designed to bridge the gap between the devices you use and the games you play.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#hidvanguard","title":"HidVanguard","text":"<p>A tool for configuring and automating HidGuardian.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#hider","title":"HIDer","text":"<p>HIDer is an open source application that allows you to manage HidGuardian in order to hide chosen controllers from being seen by games/applications (that are not whitelisted). This is useful when some games/applications have issues with specific controllers that are connected.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#joyshockmapper","title":"JoyShockMapper","text":"<p>The Sony PlayStation DualSense, DualShock 4, Nintendo Switch JoyCons (used in pairs), and Nintendo Switch Pro Controller have much in common. They have many of the features expected of modern game controllers. They also have an incredibly versatile and underutilized input that their biggest rival (Microsoft's Xbox One controller) doesn't have: a 3-axis gyroscope (from here on, \u201cgyro\u201d).</p> <p>My goal with JoyShockMapper is to enable you to play PC games with DS, DS4, JoyCons, and Pro Controllers even better than you can on their respective consoles -- and demonstrate that more games should use these features in these ways.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#joystick-gremlin","title":"Joystick Gremlin","text":"<p>Joystick Gremlin is a program that allows the configuration of joystick like devices, similar to what CH Control Manager and Thrustmaster's T.A.R.G.E.T. do for their respectively supported joysticks. However, Joystick Gremlin works with any device be it from different manufacturers or custom devices that appear as a joystick to Windows. Joystick Gremlin uses the virtual joysticks provided by vJoy to map physical to virtual inputs and apply various other transformations such as response curves to analogue axes. In addition to customizing joysticks, Joystick Gremlin also provides powerful macro functionalities, a flexible mode system, scripting using Python, and many other features.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#betterjoy","title":"BetterJoy","text":"<p>Allows the Nintendo Switch Pro Controller, Joycons and SNES controller to be used with CEMU, Citra, Dolphin, Yuzu and as generic XInput.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#proconxinput","title":"ProconXInput","text":"<p>A Windows user-mode XInput driver for the Switch Pro Controller.</p>"},{"location":"projects/HidGuardian/Hall-of-fame/#auto-whitelister","title":"Auto-Whitelister","text":"<p>This is a solution for stopping games from seeing a DirectInput stick (Basically any stick except Xbox controllers) on your system.</p> <p>For ages we have been able to create virtual controllers and remap a stick to that, but in the past we have not been able to stop the game from seeing the physical stick.</p> <p>Well now we have a proper solution: The HidGuardian / HidCerberus components from ViGEm. HidGuardian is a device driver that you install which can hide sticks from the system. HidCerberus is a windows service that allows you to \"whitelist\" a process (eg your AHK script) so that your script is the ONLY thing on the system that can see through HidGuardian and read the stick. The stick even disappears from the joystick control panel in windows!</p>"},{"location":"projects/HidGuardian/HidGuardian-Gen1-Installation/","title":"HidGuardian (Gen1) Installation","text":"<p>Attention</p> <p>This article covers the installation of the (deprecated) HidGuardian major version 1 (a.k.a. Gen1) driver. Its development has been discontinued yet there's software out there depending on it. Please make sure you need version 1 first before going through this article!</p>"},{"location":"projects/HidGuardian/HidGuardian-Gen1-Installation/#about","title":"About","text":"<p><code>HidGuardian</code> (abridged as <code>HG</code>) v1 is very limited in functionality. It was more of a proof of concept (PoC) than a full blown product. Nonetheless it can still assist you in blocking input devices which is its core intention.</p> <p>Attention</p> <p>If you're a developer starting with a fresh project, please refrain from using <code>HG</code> v1 as it won't receive any new features or fixes, thank you!</p> <p>Some facts about <code>HG</code> v1:</p> <ul> <li>Configured via registry keys and values</li> <li>Can only whitelist processes based on PID (numeric Process ID)</li> <li>Has no real \"official\" API so might break between minor releases</li> </ul>"},{"location":"projects/HidGuardian/HidGuardian-Gen1-Installation/#projects-known-to-depend-on-hg-v1","title":"Projects known to depend on HG v1","text":"<p>Check the Known Users of HidGuardian page for a list of software that make use of HidGuardian. This list is in no way complete as we rely on community/developer feedback.</p>"},{"location":"projects/HidGuardian/HidGuardian-Gen1-Installation/#preparations","title":"Preparations","text":"<p>\ud83d\udc49 Grab the driver archive matching your systems architecture from here and extract them (e.g. to <code>C:\\hg</code>)</p> <p>Hint</p> <p>Some morons/trolls might have told you that you have to put drivers into <code>system32</code> folder. Don't do that, Windows can take care of its drivers by itself, fooling around in your system folders can brick your machine. You have been warned.</p> <p>\ud83d\udc49 Now get the Device Console (devcon) utility and also extract it somewhere (e.g. to <code>C:\\hg</code>)</p> <p>So the folder structure you end up with should look like so:</p> <p></p> <p></p>"},{"location":"projects/HidGuardian/HidGuardian-Gen1-Installation/#driver-installation","title":"Driver installation","text":"<p>Alright, here we go \ud83d\ude0a take one last deep breath and continue reading carefully and nothing will go wrong.</p> <p>Fire up PowerShell as Administrator and insert the following commands one after another:</p> <pre><code>C:\\hg\\devcon\\x64\\devcon.exe install C:\\hg\\x64\\HidGuardian.inf Root\\HidGuardian\n</code></pre> <p>Which is expected to return:</p> <pre><code>Device node created. Install is complete when drivers are installed...\nUpdating drivers for Root\\HidGuardian from C:\\hg\\x64\\HidGuardian.inf.\nDrivers installed successfully.\n</code></pre> <p>Hint</p> <p>This command created a virtual \"dummy device\" so the driver can get loaded.</p> <p>And finally:</p> <pre><code>C:\\hg\\devcon\\x64\\devcon.exe classfilter HIDClass upper -HidGuardian\n</code></pre> <p>Which is expected to return:</p> <pre><code>Class filters changed. Restart the devices or reboot the system to make the change effective.\n    HidGuardian\n</code></pre> <p>Hint</p> <p>This command internally adjusted some registry values causing the driver to get loaded onto every input device automatically.</p> <p>That's it! You're ready to rock \ud83c\udf89</p> <p>Attention</p> <p>You'll either need to unplug and plug in your input devices or reboot the machine for the driver to work!</p> <p></p>"},{"location":"projects/HidGuardian/HidGuardian-Gen1-Installation/#driver-removal","title":"Driver removal","text":"<p>Attention</p> <p>Removing <code>HG</code> requires a special procedure described here or else you could end up with no keyboard/mouse!</p> <p>For removal you don't need the original driver files, you will need <code>devcon</code> though so make sure you got it ready as described earlier.</p> <p>\ud83d\udc49 Then from an elevated PowerShell execute:</p> <pre><code>C:\\hg\\devcon\\x64\\devcon.exe classfilter HIDClass upper !HidGuardian\nC:\\hg\\devcon\\x64\\devcon.exe remove Root\\HidGuardian\n</code></pre> <p>Hint</p> <p>It might have accidentally happened that your system has more than one virtual device. If that's the case, simply execute the two commands multiple times until they're all gone.</p> <p>Now reboot and you're good to go \ud83d\ude04</p>"},{"location":"projects/HidGuardian/HidGuardian-Gen1-Installation/#registry-clean-up","title":"Registry clean-up","text":"<p>Some registry keys and values can be safely removed manually after the driver is gone.</p> <p>In <code>Computer\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\HidGuardian\\Parameters</code> the following values can be removed (if they exist):</p> <ul> <li><code>AffectedDevices</code></li> <li><code>ExcemptedDevices</code></li> <li><code>Force</code></li> </ul> <p>The key <code>Computer\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\HidGuardian\\Parameters\\Whitelist</code> and all sub-keys can be removed as well.</p>"},{"location":"projects/HidGuardian/Taming-HidGuardian-Gen1/","title":"Taming HidGuardian (Gen1)","text":"<p>Is your Xbox/DualShock/Switch Pro/insert gaming peripheral here controller device not detectable by games, Steam or even the entire Windows system (<code>joy.cpl</code>)? Then you might have installed software which in turn placed a driver called HidGuardian on your machine and left its configuration in a state which accidentally permanently hid this device from other processes. Worry not though, with a bit of command line magic outlined below you'll be back in the game in no time!  </p> <p>First, fire up PowerShell as Administrator, then proceed with the outlined steps below. Copy and paste the commands as one line unaltered, hit enter afterwards and observe the returned information.</p> <p>Now, first of all let's see if HidGuardian is even present (because if not, well, hardly can be the culprit then):</p> <p>PowerShell</p> <pre><code>Get-PnpDevice -FriendlyName \"HidGuardian Virtual Device\" -ErrorAction SilentlyContinue\n</code></pre> <p>This may result in no, one or more new lines like so:</p> <p></p> <p>If there is at least one result like shown above chances are high we're on the right track. Next, execute:</p> <p>PowerShell</p> <pre><code>Get-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Class\\{745a17a0-74d3-11d0-b6fe-00a0c90f57da}' -Name 'UpperFilters' -ErrorAction SilentlyContinue\n</code></pre> <p></p> <p>If <code>UpperFilters</code> exists and contains the string <code>HidGuardian</code>, the track has gotten red hot and we're onto something! Keep on reading!</p> <p>Next we check a particular registry value:</p> <p>PowerShell</p> <pre><code>Get-ChildItem 'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\HidGuardian\\Parameters\\AffectedDevices' -ErrorAction SilentlyContinue\n</code></pre> <p>Chances are you might see a similar output. Now we're certain that HidGuardian is at fault hiding the controller. Oh No!</p> <p></p> <p>Let's mitigate the situation by safely removing this value:</p> <p>PowerShell</p> <pre><code>Remove-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\HidGuardian\\Parameters' -Name 'AffectedDevices'\n</code></pre> <p>This command should produce no output upon execution. And you're done! Either reopen the game/tool which didn't work before, unplug and plug back in the controller in question or - to be extra thorough - reboot the computer and try again!</p>"},{"location":"projects/HidHide/","title":"About HidHide","text":"<p>HidHide is an \"input device firewall\" inspired by HidGuardian but designed and written from scratch. It allows for blocking individual applications access to HID and XInput devices, allowing users to re-route and re-map controller inputs as they please.</p> <p>Kaspersky Anti-Virus can interfere with whitelisting feature</p> <p>If you run Kaspersky Anti-Virus chances are you encounter issues with program whitelisting due to Kaspersky transparently breaking the process detection logic of HidHide. This is an issue with Kaspersky, please consult their support or disable it while you want to use HidHide to its full potential \u2764\ufe0f</p>"},{"location":"projects/HidHide/#downloads","title":"Downloads","text":"<p>Get the setup here and follow its instructions. Done!</p>"},{"location":"projects/HidHide/API-Documentation/","title":"API Documentation","text":"<p>Topic intended for developers</p> <p>This topic is intended for developers who'd like to build upon the capabilities of HidHide and alter driver configuration. As an end-user you can simply use the client UI application shipped along with the driver setup.</p> <p>This article describes how an application can interact with the driver to influence which device instances get blocked and which processes get granted access. The steps outlined here are the only supported and safe way (besides the control application shipped along the driver) to interact with the driver and should be read carefully and thoroughly.</p>"},{"location":"projects/HidHide/API-Documentation/#control-device","title":"Control Device","text":"<p>The filter driver uses the common concept of exposing a Control Device which can be opened from any user-land process and used to send I/O Control Commands to. No elevated privileges are required (and thus should be avoided) to access the control device.</p> <p>Use the <code>CreateFile</code> Windows API within the language/framework of your choice and open the path <code>\\\\.\\HidHide</code>. See examples below for .NET or good ol' C/C++:</p> <p>Obtain Control Device handle</p> C#C/C++ <pre><code>// Use e.g. https://github.com/dotnet/pinvoke/\n// Install-Package PInvoke.Kernel32\nusing (var handle = Kernel32.CreateFile(\"\\\\\\\\.\\\\HidHide\",\n    Kernel32.ACCESS_MASK.GenericRight.GENERIC_READ,\n    Kernel32.FileShare.FILE_SHARE_READ | Kernel32.FileShare.FILE_SHARE_WRITE,\n    IntPtr.Zero, Kernel32.CreationDisposition.OPEN_EXISTING,\n    Kernel32.CreateFileFlags.FILE_ATTRIBUTE_NORMAL,\n    Kernel32.SafeObjectHandle.Null\n))\n{\n    // call DeviceIoControl here\n}\n</code></pre> <pre><code>#include &lt;Windows.h&gt;\n\nHANDLE handle = CreateFile(\n    \"\\\\\\\\.\\\\HidHide\", \n    GENERIC_READ, \n    (FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE), \n    NULL, \n    OPEN_EXISTING, \n    FILE_ATTRIBUTE_NORMAL, \n    NULL);\n\n// call DeviceIoControl here\n\nCloseHandle(handle);\n</code></pre> <p>For other frameworks and languages please consult the appropriate documentation.</p> <p>Exclusive handle access enforced</p> <p>Reading and altering the lists of denied/allowed entities is not an atomic operation, therefore only one handle (process) is allowed to open the control device and issue requests at a time. Make sure to close the handle shortly after your operations are done to not block other processes which may want to talk to the driver.</p>"},{"location":"projects/HidHide/API-Documentation/#io-control-commands","title":"I/O Control Commands","text":"<p>Driver behavior is altered entirely through the DeviceIoControl Windows API and outlined below. Arrays of strings are exchanged as a double-null-terminated wide-character-string literal so make sure to apply proper conversion and specify the correct buffer lengths (include all NULL-characters and multiply times <code>sizeof(wchar_t)</code>).</p>"},{"location":"projects/HidHide/API-Documentation/#get-blacklist","title":"Get Blacklist","text":"<p>Retrieves the current blacklist/block-list/deny-list of Device Instance IDs which are currently blocked access to.</p> Parameter Description <code>dwIoControlCode</code> <code>IOCTL_GET_BLACKLIST</code> <code>lpInBuffer</code> <code>NULL</code> <code>nInBufferSize</code> <code>0</code> <code>lpOutBuffer</code> Pre-allocated buffer receiving the current list of blocked (hidden) device instance identifiers as a double-null-terminated wide-character-string literal. <code>nOutBufferSize</code> The size of the buffer in bytes. <code>lpBytesReturned</code> The required buffer size in bytes."},{"location":"projects/HidHide/API-Documentation/#set-blacklist","title":"Set Blacklist","text":"<p>Submits a new blacklist/block-list/deny-list of Device Instance IDs which are then blocked access to.</p> Parameter Description <code>dwIoControlCode</code> <code>IOCTL_SET_BLACKLIST</code> <code>lpInBuffer</code> Buffer containing the new list of blocked (hidden) device instance identifiers as a double-null-terminated wide-character-string literal. <code>nInBufferSize</code> The size of the buffer in bytes. <code>lpOutBuffer</code> <code>NULL</code> <code>nOutBufferSize</code> <code>0</code>"},{"location":"projects/HidHide/API-Documentation/#get-whitelist","title":"Get Whitelist","text":"<p>Retrieves the current whitelist/allow-list of absolute DOS device paths to applications which are currently allowed to see blocked devices.</p> Parameter Description <code>dwIoControlCode</code> <code>IOCTL_GET_WHITELIST</code> <code>lpInBuffer</code> <code>NULL</code> <code>nInBufferSize</code> <code>0</code> <code>lpOutBuffer</code> Pre-allocated buffer receiving the current list of whitelisted (allowed) file paths to processes in DOS device notation as a double-null-terminated wide-character-string literal. <code>nOutBufferSize</code> The size of the buffer in bytes. <code>lpBytesReturned</code> The required buffer size in bytes."},{"location":"projects/HidHide/API-Documentation/#set-whitelist","title":"Set Whitelist","text":"<p>Submits a new whitelist/allow-list of absolute DOS device paths to applications which will then be allowed to see blocked devices.</p> Parameter Description <code>dwIoControlCode</code> <code>IOCTL_SET_WHITELIST</code> <code>lpInBuffer</code> Buffer containing the new list of whitelisted (allowed) file paths to processes in DOS device notation as a double-null-terminated wide-character-string literal. <code>nInBufferSize</code> The size of the buffer in bytes. <code>lpOutBuffer</code> <code>NULL</code> <code>nOutBufferSize</code> <code>0</code>"},{"location":"projects/HidHide/API-Documentation/#get-status","title":"Get Status","text":"<p>Retrieves the current global status of blocking capabilities. Returns a boolean value if the the driver is currently blocking configured devices (<code>true</code>) or on pass-through (<code>false</code>).</p> Parameter Description <code>dwIoControlCode</code> <code>IOCTL_GET_ACTIVE</code> <code>lpInBuffer</code> <code>NULL</code> <code>nInBufferSize</code> <code>0</code> <code>lpOutBuffer</code> Gets the current state of the hiding capabilities (<code>1</code> = device hiding active, <code>0</code> = device hiding inactive). <code>nOutBufferSize</code> <code>sizeof(BOOLEAN)</code> (1 byte)"},{"location":"projects/HidHide/API-Documentation/#set-status","title":"Set Status","text":"<p>Submits the new global status of blocking capabilities. Sets a boolean value if the the driver is currently blocking configured devices (<code>true</code>) or on pass-through (<code>false</code>).</p> Parameter Description <code>dwIoControlCode</code> <code>IOCTL_SET_ACTIVE</code> <code>lpInBuffer</code> Sets the new state of the hiding capabilities (<code>1</code> = device hiding active, <code>0</code> = device hiding inactive). <code>nInBufferSize</code> <code>sizeof(BOOLEAN)</code> (1 byte) <code>lpOutBuffer</code> <code>NULL</code> <code>nOutBufferSize</code> <code>0</code>"},{"location":"projects/HidHide/API-Documentation/#api-wrappers","title":"API wrappers","text":"<p>For .NET an official NuGet is provided as abstractions for the common driver settings.</p>"},{"location":"projects/HidHide/FAQ/","title":"Frequently Asked Questions","text":""},{"location":"projects/HidHide/FAQ/#i-have-a-different-question-how-can-i-reach-you-folks","title":"I have a different question, how can I reach you folks?","text":"<p>Head over to the support page, we prefer Discord.</p>"},{"location":"projects/HidHide/FAQ/#can-it-hide-mice-keyboards-touch-or-trackpads","title":"Can it hide mice, keyboards, touch- or trackpads?","text":"<p>Unfortunately not. Mouse and Keyboard inputs travel through different means and routes through Windows and HidHide's blocking mechanism can not interfere with those in the same fashion as it does with Joysticks and Gamepads.</p> <p>A major redesign would be required to make this a reality, bear in mind that HidHide is a hobby project so the authors can not make any promises as many other tasks in life have priority. If any developer would be interested in this topic, contact us! \ud83d\ude04</p>"},{"location":"projects/HidHide/FAQ/#where-can-i-download-a-windows-78-setup","title":"Where can I download a Windows 7/8 setup?","text":"<p>Thanks to driver signing restrictions we lack the means and motivation to support anything below Windows 10/11 so these are the only OS editions we support.</p>"},{"location":"projects/HidHide/FAQ/#where-can-i-download-a-32-bit-or-arm64-mac-raspi-version","title":"Where can I download a 32-Bit or ARM64 (Mac, RasPi) version?","text":"<p>At this point we only provide a setup for Intel/AMD 64-Bit installations. Follow this issue for potential news about this topic.</p>"},{"location":"projects/HidHide/FAQ/#how-to-fix-this-package-can-only-be-run-from-a-bootstrapper-message","title":"How to fix 'This package can only be run from a bootstrapper' message?","text":"<p>Simply download and run the latest setup, go through the installation again and you're done.</p>"},{"location":"projects/HidHide/Simple-Setup-Guide/","title":"Simple setup guide","text":"<p>HidHide is only supported on 64 bits Windows 10 as for the day this article was written</p>"},{"location":"projects/HidHide/Simple-Setup-Guide/#what-is-hidhide","title":"What is HidHide","text":"<p>HidHide is a filter driver than can \"hide\" Gamepads/joysticks devices, ensuring Windows and other applications stop detecting it as a game controller and allowing only chosen applications to see them. Specially useful when the user is remapping a real controller into an emulated one.</p> <p></p>"},{"location":"projects/HidHide/Simple-Setup-Guide/#why-one-might-need-it","title":"Why one might need it","text":"<p>Imagine the following scenario: you have a generic gamepad that you want to \"convert\" into a XInput Device (a Xbox 360 controller) or DualShock 4, since most games are already pre-configured to these controllers, or maybe your game doesn't even detect your generic one as it is. So you start using a remapping program ( x360ce / XOutput / UCR / etc ) to do so.</p> <p>This put you in a problematic situation: you don't end-up just with the emulated controller that you want to use. No no, you end-up with 2 controllers: the real and the emulated one.</p> <p>If the games you are playing don't even detect your real controller, then all good. The issue starts when the game detects both real and emulated controllers while you only want it to recognize the latter. Since most games auto-detect controllers, the game will think there are 2 separate controllers connected, leading to the famous Double-Input and mis-input issue. Examples:</p> <ul> <li>Rocket league will start 2 player mode randomly</li> <li>Blasphemous will switch randomly between generic and XInput/DS4 button icons</li> <li>Need for Speed: Most Wanted (2012) will keep warning the player an unknown device needs to be setup, interfering with gameplay</li> </ul> <p>This issue can be solved by using HidHide to:</p> <ul> <li>Hide the real controller</li> <li>Only allow the remapping tool of your choice to see the controller, since it needs to pick its input to translate them to the emulated one </li> </ul>"},{"location":"projects/HidHide/Simple-Setup-Guide/#verifying-if-hidguardian-is-installed-and-uninstalling-it","title":"Verifying if HidGuardian is installed and uninstalling it","text":"<p>HidHide and HidGuardian MUST NOT be together on the same system</p> <p>HidHide is HidGuardian's successor and both have the same function. Having the two installed simultaneously can cause confusion at best and actual issues at worst.</p> <p>HidGuardian's installer utility can check if it's installed and correctly uninstall it in case it is, so that's what we are going to use:</p> <ul> <li>Download and extract this archive</li> <li>Inside the extracted folder, run HidGuardianInstaller.exe</li> <li>Check in the text log if HidGuardian is installed. If it is not, you can close the utility and move on to the next section</li> </ul> <p></p> <ul> <li>If HidGuardian is installed, click on the \"Uninstall\" button</li> <li>Wait until the utility finishes uninstalling HidGuardian, keep and eye on the text log to know what its status</li> <li>After the tool finishes uninstalling HidGuardian, close it then reboot your PC</li> </ul>"},{"location":"projects/HidHide/Simple-Setup-Guide/#setting-up-hidhide-quick-guide","title":"Setting up HidHide (quick guide)","text":"<p>Attention!</p> <p>This section is for users who know more or less what they are doing. If you want a more detailed, step-by-step guide, jump to the next section.</p> <ul> <li>Download the Latest release of HidHide (It should be a file called HidHideMSI.msi). Remember to install its prerequisites as written on the page</li> <li>After installation, reboot your computer</li> <li>Open the <code>HidHide Configuration Client</code> in the start menu</li> <li>On the <code>Applications</code> tab, add the applications that should be able to see the devices even when they are hidden</li> <li>On the <code>Devices</code> tab mark the controllers you want to be hidden (a red lock should appear), then mark the <code>Enable device hiding</code> Checkbox</li> <li>Reconnect your controllers to make the changes effective</li> </ul> <p>DONE. Be happy. Still, be sure to give a read on the last sections of this article.</p>"},{"location":"projects/HidHide/Simple-Setup-Guide/#setting-up-hidhide-step-by-step-guide","title":"Setting up HidHide (step-by-step guide)","text":""},{"location":"projects/HidHide/Simple-Setup-Guide/#installing-hidhide","title":"Installing HidHide","text":"<ul> <li>Install HidHide's prerequisites according to your Windows 10 version </li> <li>Download the Latest release of HidHide (it should be a file called <code>HidHideMSI.msi</code>)</li> <li>Open the downloaded file and install HidHide as instructed at default settings (just click <code>Next</code> until it finishes installing)</li> <li>After the installation, reboot your computer</li> </ul>"},{"location":"projects/HidHide/Simple-Setup-Guide/#hiding-the-controller","title":"Hiding the controller","text":"<ul> <li>Open the \"HidHide Configuration Client\" in the start menu </li> <li>On the Configuration Client, click on the <code>Devices</code> tab to show the list of connected controllers</li> <li>Have the controllers you want to hide connected to your computer</li> <li>On your controllers entries, mark the white box before their names. A red lock icon should appear</li> <li>If your controller can connect both via cable and Bluetooth, reconnect your controllers via the other connection method and also mark their new entries</li> <li>Mark the box in the bottom called \"Enable Device Hiding\" to (obviously) activate the hiding of the marked devices</li> </ul>"},{"location":"projects/HidHide/Simple-Setup-Guide/#verifying-if-the-controllers-are-hidden","title":"Verifying if the controllers are hidden","text":"<p>At this point, your controllers should be hidden to everything. To verify, open Windows' <code>joy.cpl</code> by one of the following methods:</p> <ul> <li>Pressing the key combination Win+R and then entering <code>joy.cpl</code> OR</li> <li>Searching and opening on Windows' Start Menu <code>Set up USB Game Controllers</code> </li> </ul> <p>Assuming the hidden controllers are the only ones connected to the system and there are no virtual controllers being emulated, no device should show up in the Game Controller's list. If your real controller is still on the list, try reconnecting them. </p>"},{"location":"projects/HidHide/Simple-Setup-Guide/#allowing-chosen-applications-to-see-hidden-devices","title":"Allowing chosen applications to see hidden devices","text":"<p>Now that it's confirmed your controllers are hidden, you need to select which applications should be able to detect them anyway:</p> <ul> <li>On the Configuration Client, click on the <code>Applications</code> tab</li> <li>Click on the <code>+</code> icon and add the executable file of your application (<code>ApplicationName.exe</code>)  to whitelist it</li> <li>Repeat the step above for each application that should whitelisted</li> <li>After that, fully close then reopen your application (in case it was running) for it to detect the hidden devices. Alternatively, just reconnect your controllers.</li> </ul> <p>From this point, the applications on the list should be able to detect the hidden devices. The image below is an example of the application \"UCR\" being able to see a hidden Controller and emulating a DualShock 4:  </p> <p>Users of DS4Windows: PAY ATTENTION!</p> <p>If you are running DS4Windows under a custom <code>.exe</code> name (look at your DS4Windows' <code>Other</code> tab) then the custom named executable must also be added to the list</p>"},{"location":"projects/HidHide/Simple-Setup-Guide/#what-now","title":"What now?","text":"<p>If you've set everything correctly then all that is left is for you to enjoy! Before you leave, have a quick look in the next section and on the <code>Frequently Asked Questions</code> article on the left side-bar (I mean... if it has already been created).</p>"},{"location":"projects/HidHide/Simple-Setup-Guide/#things-to-keep-in-mind","title":"Things to keep in mind","text":"<p>Common things to know regarding using HidHide with your controllers:</p> <ul> <li>Contrary to HidGuardian, HidHide affects isolated devices instead of device types. This means that if you have (for example) 4 different controllers that are the exact same model, you would still need to mark each one as hidden separately, both on USB and on Bluetooth</li> <li>HidHide whitelists applications based on their location in your computer. This means that if you whitelist \"UCR.exe\" that is on your desktop, but then move it to another folder you will need to whitelist it again on its new location</li> <li>If you think something is wrong and want to disable HidHide to run tests, just open the <code>HidHide Configuration Utility</code>, go into the <code>Devices</code> tab and un-check the <code>Enable Device Hiding</code> checkbox. If this doesn't make the devices visible again, try then reconnecting them</li> <li>Applications may add native support to HidHide in future updates, automating the process by whitelisting themselves and auto-hiding detected controllers</li> </ul>"},{"location":"projects/HidHide/fixing-a-bricked-system/","title":"Fixing an improper removal of HidHide","text":""},{"location":"projects/HidHide/fixing-a-bricked-system/#to-whom-this-guide-applies-to","title":"To whom this guide applies to","text":"<p>This page's objective is to guide the user in how to recover the system from a forced HidHide removal attempt that resulted in XInput and HID Devices (Keyboard, Mouse, Controllers) not working anymore.</p> <p>If your system is working as normal and you just want to uninstall HidHide open Windows' Apps and Features menu and search for HidHide's uninstaller there.</p>"},{"location":"projects/HidHide/fixing-a-bricked-system/#to-whom-this-guide-does-not-apply","title":"To whom this guide does NOT apply","text":"<p>This guide does NOT apply to those that...</p> <ul> <li>have their system working as normal and just want to uninstall HidHide<ul> <li>Just open Windows' Apps and Features menu and search for HidHide's uninstaller there</li> </ul> </li> <li>can use their Keyboard and Mouse as normal in Windows</li> <li>think their controller is not working because of HidHide<ul> <li>There are other more likely causes for this than HidHide being \"broken\". If your keyboard and mouse is working as normal but not your controllers then try the following:<ul> <li>Use the Nefarius' Legacinator tool to check if you have HidGUARDIAN installed and uninstall it in case if positive (reboot after)</li> <li>Disable HidHide by opening its Configuration Client, going into the \"Devices\" tab then just un-marking the \"Enbable device hiding\" checkbox</li> <li>Properly uninstalling HidHide in Windows' Apps and Features menu</li> </ul> </li> </ul> </li> </ul>"},{"location":"projects/HidHide/fixing-a-bricked-system/#my-keyboardmouse-kbm-stopped-working-when-trying-to-remove-hidhide-what-happened","title":"\"My keyboard/mouse (KB+M) stopped working when trying to remove HidHide. What happened?\"","text":"<p>Windows has instructions to \"load\" HidHide into every Human Interface Device (HID) and XInput compatible device, which means basically every USB mouse, keyboard, gamepads etc. If the HidHide driver is forcefully removed without first removing its loading instruction then these devices will fail to start.</p> <p>HidHide's own uninstaller takes care of first removing the loading instructions before actually deleting the driver. 99.9% of the cases in which users had issues when trying to remove HidHide were caused by them forcefully deleting the HidHide driver via Device Manager or other software.</p>"},{"location":"projects/HidHide/fixing-a-bricked-system/#how-do-i-fix-this","title":"\"How do I fix this?\"","text":"<p>To make Windows stop trying to load HidHide it is necessary to edit Windows' Registry and manually remove 3 specific entries, which is made kinda hard since the user has no KB+M to use. To workaround this, users have the following options:</p> <ol> <li>Boot Windows in Recovery Mode, in which KB+M will work as normal, then edit the system's Registry from there</li> <li>\"PS/2\" keyboard and mouses will still work, so if the user has a Desktop PC with these type of motherboard connections they can just use them and them follow the instructions below<ol> <li>Jump to the \"Part 4\" of this guide once they boot into Windows as normal and ignore the steps involving \"_TempSYSTEM\" since the proper registry is already loaded</li> <li>Reboot once they delete the 3 <code>UpperFilters / HidHide</code> entries as instructed in the guide</li> </ol> </li> </ol> <p>Because most users don't have PS/2 devices anymore the guide here will be focused on editing the registry from recovery mode.</p>"},{"location":"projects/HidHide/fixing-a-bricked-system/#part-1-boot-windows-in-recovery-mode","title":"Part 1: Boot Windows in Recovery Mode","text":"<p>Since the user has no KB+M, they can't use Windows' option to reboot directly into recovery, so we'll need to force it to appear by making Windows fail to start 3 times.</p> <ol> <li>Reboot your system and every time it reaches the black loading screen (with the blue Windows logo) force-restart or shutdown your computer 3 times<ul> <li>If possible, wait for the white dots to start spinning before force-restarting</li> </ul> </li> <li>When the message \"Preparing Automatic Repair\" appears then that means Windows will enter recovery mode</li> </ol> <p></p> <p></p>"},{"location":"projects/HidHide/fixing-a-bricked-system/#part-2-opening-the-registry-editor","title":"Part 2: Opening the Registry Editor","text":"<p>Now that you are in recovery mode, navigate the menu as the following:</p> <ol> <li>Advanced options</li> <li>Troubleshoot</li> <li>Advanced options (again)</li> <li>Command Prompt</li> <li>In the Command Prompt blue menu, login into your account if asked to do so</li> <li>When the actual Command Prompt appears (black window), type <code>regedit</code> then press <code>Enter</code></li> </ol> Step 1Step 2Step 3Step 4Step 5.1Step 5.2Step 6 <p></p> <p></p> <p></p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"projects/HidHide/fixing-a-bricked-system/#part-3-loading-your-systems-registry-file","title":"Part 3: Loading your system's registry file","text":"<p>Now, this Registry that appears does not contain your system's actual registry entries for now, so...:</p> <ol> <li>Click in the <code>HKEY_LOCAL_MACHINE</code> entry so it's highlighted in blue</li> <li>Now, in the top of the Registry Editor Window, select the [View] tab then select [Load Hive...]</li> <li>Select \"This PC\" button on the left, then find and open the Disk in which your Windows system is installed<ul> <li>It is usually the \"D\" disk, but may vary from system to system</li> </ul> </li> <li>Navigate to the following location: <code>D:\\Windows\\System32\\config</code><ul> <li>May be different than disk \"D\" depending on which disk/partition Windows is installed</li> </ul> </li> <li>Select the \"SYSTEM\" file that has no file extension</li> <li>Click in the [Open] button. When prompted enter <code>_TempSYSTEM</code> as a key name and click [OK] button</li> </ol> Step 1 and 2End of steps 3-5Step 6 <p> </p> <p> </p> <p> </p>"},{"location":"projects/HidHide/fixing-a-bricked-system/#part-4-finding-and-deleting-the-correct-hidhide-entries","title":"Part 4: Finding and deleting the correct HidHide entries","text":"<p>In this step we'll search for and delete ONLY the HidHide entries related to the \"Class UpperFilter\".</p> <ol> <li>Highlight, by clicking on it, the <code>_TempSYSTEM</code> entry that now appears under <code>HKEY_LOCAL_MACHINE</code></li> <li>Press <code>Ctrl + F</code> to open the Search menu, then write <code>HidHide</code> in the search box</li> <li>Use the [Find Next] to search throughout the registry for the <code>UpperFilter</code> entries that have <code>HidHide</code> as their DATA. Once you confirm you have the correct item, delete them (double check if you have the correct item by looking at the images below)<ul> <li>You MUST NOT delete the whole folder nor any other entries (please, check the images)</li> <li>The entries that need to be deleted are...:<ul> <li>the <code>UpperFilter / HidHide</code> entry in the same list as the <code>Class / XboxComposite</code> entry</li> <li>the <code>UpperFilter / HidHide</code> entry in the same list as the <code>Class / HIDClass</code> entry</li> <li>the <code>UpperFilter / HidHide</code> entry in the same list as the <code>Class /XnaComposite</code> entry</li> </ul> </li> <li>Remember that:<ul> <li>You can always re-open the search box by pressing <code>Ctrl + F</code></li> <li>If you accidentally miss one of them, just keep hitting the [Find Next] button in the search box and it will keep cycling over the registry</li> </ul> </li> </ul> </li> </ol> Step 1 and 2Step 3 - XboxCompositeStep 3 - HIDClassStep 3 - XnaComposite <p> </p> <p> </p> <p> </p> <p></p> Full address of where the entries reside <p>The full registry locations for where the entries with [ Name: UpperFilter / Data: HidHide ] are located are:</p> <ul> <li>XboxComposite: <code>Computer\\HKEY_LOCAL_MACHINE\\_TempSYSTEM\\ControlSet001\\Control\\Class\\{05f5cfe2-4733-4950-a6bb-07aad01a3a84}</code></li> <li>HIDClass: <code>Computer\\HKEY_LOCAL_MACHINE\\_TempSYSTEM\\ControlSet001\\Control\\Class\\{745a17a0-74d3-11d0-b6fe-00a0c90f57da}</code></li> <li>XnaComposite: <code>Computer\\HKEY_LOCAL_MACHINE\\_TempSYSTEM\\ControlSet001\\Control\\Class\\{d61ca365-5af4-4486-998b-9db4734c6ca3}</code></li> </ul>"},{"location":"projects/HidHide/fixing-a-bricked-system/#part-5-finishing-steps","title":"Part 5: Finishing steps","text":"<ol> <li>On the left side, look again for the <code>_TempSYSTEM</code> item/folder then select it so it stays highlighted/marked</li> <li>On the top of the Registry Editor window, click on the [File] tab then [Unload hive]<ul> <li>If for some reason there is a \"access denied\" message when attempting to unload the hive, then do the following:<ol> <li>close the Registry Editor window and then close the Command Prompt</li> <li>open again the command prompt then type \"regedit\" to open the registry editor once more</li> <li>Highlight the _TempSYSTEM folder inside the HKEY_LOCAL_MACHINE and then attempt to unload the hive again</li> </ol> </li> </ul> </li> <li>Confirm that the <code>_TempSYSTEM</code> item vanished, then close the Registry Editor and then the Command Prompt (black window)</li> <li>Boot again into Windows by using the [Continue / Exit and continue to Windows] option or any other reboot option then test your Keyboard/Mouse</li> </ol> Step 1 and 2Step 3Step 4"},{"location":"projects/HidHide/fixing-a-bricked-system/#credits-and-sources","title":"Credits and sources","text":"<ul> <li>Guide adapted from x360ce's HidGuardian page</li> </ul>"},{"location":"projects/Identinator/","title":"About Nefarius' Identinator","text":"<p>This is advanced software that won't hold your hand</p> <p>The core feature of this software is intentionally powerful and alters essential components of how the Windows PnP subsystem detects devices and loads drivers for them. You can definitely screw up your system and/or devices if you don't know what you're doing. This is entirely YOUR responsibility, you have been warned.</p> <p>The Identinator allows the user to alter (rewrite, masquerade) Device ID, Hardware ID and Compatible ID properties of any USB device (Bluetooth support in the works) on a Microsoft Windows system. The solution consist of a bus filter driver (<code>nssidswap.sys</code>) and .NET UI tool to configure said driver. The changes can be applied during runtime and are instantaneous (within a few milliseconds) which can be used to \"on-the-fly\" swap out the function driver for e.g. HID devices.</p> <p>This is NOT a firmware flash utility</p> <p>Identinator does not flash any device, the changes happen at driver level, are temporary and only apply to the machine where Identinator is installed and configured. No changes are made to any EEPROM, flash or other potentially reprogrammable sections of any USB device. This tool does not alter device or configuration descriptors.</p>"},{"location":"projects/Identinator/#why","title":"Why","text":"<p>While working on the new DS4Windows fork with a team of volunteer developers we brainstormed about various ideas on how to make the issue of device hiding a more smooth and less error-prone experience. Yes, we've got HidHide integration but that project has its own weaknesses (simply due to how device stacks operate in Windows) which can't really be addressed unless you consider a serious redesign or extension of the existing design. We were reminded on how SCP shipped around that: by brute-force just completely replacing the function driver of the device with WinUSB. This approach is not a simple undertaking, especially if you support more than one device you didn't manufacture and have no control over its firmware or driver packages. While there are automated solutions available to on-the-fly craft custom driver packages (INF file for WinUSB and self-signed catalogue file) they are in danger of becoming obsolete with tightening restrictions on driver signatures in future versions of Windows. Hot-swapping drivers of HID devices is always a gamble simply due to the fact that most will have open handles during their lifetime and the unloading of the current driver may simple be not possible without a reboot.</p> <p>But then I remembered a product that actually could pull off runtime driver swapping for quite some time with ease: VMware Workstations USB pass-through feature! For those who do not know: VMware Workstation on Windows (potentially other OS'es, haven't checked) can \"mount\" USB devices into the Virtual Machine where it is then exclusively available for said machine. The switch from host (the system running Workstation) to guest (the Virtual Machine) and vice versa typically only takes a second or two and is a nice seamless experience. So what we were after was definitely possible, just needed to figure out how VMware does it and model a new filter driver after it! Easy, right?</p>"},{"location":"projects/Identinator/#how","title":"How","text":"<p>Let's start with understanding how VMware pulls off the smooth transition from host to VM. First the device of interest needs to be \"hidden\" from the host machine since only one system at a time is allowed to have authority over said device and send requests to it. This is achieved by swapping the primary (function) driver from whatever default to <code>vmusb.sys</code> (similar to <code>WinUSB.sys</code>), effectively handing over control to VMware's processes. Now VMware tools can spawn a virtual replica of the USB device within the VM and traffic to (and from) this device will be passed to the real physical device on the host. Sounds simple enough, right? Well, in reality we face a few problems. Most USB devices (predominantly HID devices) can not hot-swap their function driver because of open handles and other drivers higher up in the stack, so after wasting a couple of seconds this procedure would most probably error out because the driver swap and necessary device restart couldn't finish successfully during runtime. So we need to pull another trick which restarts the device and somehow alters it in a way which causes the PnP subsystem into loading <code>vmusb.sys</code> instead.</p> <p>Another driver enters the scene: <code>vmci.sys</code>. This one acts as a bus filter driver for USB host controllers and hubs and does something very smart. When instructed by VMware's processes, it swaps the Hardware ID of the USB device from whatever original value to <code>USB\\Vid_0E0F&amp;Pid_0001</code> and power-cycles (port reset) the device which causes <code>vmusb.sys</code> to load onto it. <code>vmci.sys</code> intercepts IRP_MJ_PNP requests made to the USB bus and alters the reported hardware ID string, therefore causing the PnP manager to look for the custom function driver instead. To pull the swap off in seconds the following sequence happens:</p> <ul> <li>User chose device (e.g. a USB joystick) to get forwarded into VM</li> <li><code>vmci.sys</code> gets instructed to power-cycle the joystick by sending a port reset to the parent hub device</li> <li>USB devices are \"surprise removal\" capable, meaning they have to expect to be unplugged at anytime, a port reset is basically a quick \"reboot\" of the device</li> <li>When the device comes online this time <code>vmci.sys</code> alters the hardware ID to <code>USB\\Vid_0E0F&amp;Pid_0001</code> which causes Windows to match and load <code>vmusb.sys</code> as the new function driver</li> <li>Now that <code>vmusb.sys</code> is in charge of our joystick, packets can be exchanged with the VM and the host system can no longer \"see\" a joystick but a custom vendor-defined USB device</li> </ul> <p>The same trick is pulled off by Identinator by utilizing the <code>nssidswap.sys</code> bus filter driver which basically performs a subset of tasks like <code>vmci.sys</code> and rewrites Device ID, Hardware ID(s) and Compatible ID(s) in a way that the OS-shipped <code>WinUSB.sys</code> gets loaded instead of the original function driver.</p> <p>With these quick-switch capabilities we're now able to switch to and from WinUSB during runtime without any delay or locked devices and communicate with the device directly in our software!</p>"},{"location":"projects/Identinator/#ui-overview","title":"UI overview","text":""},{"location":"projects/Identinator/#usb-devices-tab","title":"\"USB Devices\" tab","text":"<p>The primary view of the tool. Hosts the list of host controllers, hubs and connected devices. Upon device selection, the details panel gets populated and rewrite settings can be examined.</p> <p> </p> <p>Each device may have additional status indicators next to their name:</p> <ul> <li>An orange cog: rewrite settings exist for this device</li> <li>A red circled checkmark: the device is currently rewritten</li> </ul> <p></p> <p></p> <p>Rewriting for all devices gets disabled on each reboot</p> <p>As a safety mechanism the global rewriting switch gets turned off automatically on each reboot. This is by design and ensures that the system is in its original state on a fresh boot, should something catastrophic happen while rewrite is active (loss of mouse and keyboard, BSOD due to incompatible driver etc.)!</p>"},{"location":"projects/Identinator/#filter-driver-tab","title":"\"Filter Driver\" tab","text":"<p>Driver version and less important settings an be reviewed here. The filter driver can be (re-)installed or uninstalled from here.</p> <p></p>"},{"location":"projects/Identinator/#about-tab","title":"\"About\" tab","text":"<p>This tab lists copyright and license information.</p>"},{"location":"projects/Identinator/#rewrite-example","title":"Rewrite Example","text":"<p>Let's take the Sony DualShock 4 Rev2 for example; by default it is represented by a composite device. This branches off into two child devices: the \"USB Input Device\" which represents the HID interface which in turn gets presented as \"HID-compliant game controller\" and a multimedia device (named \"Wireless Controller\") which in turn exposes a microphone and speaker device:</p> <p></p> <p>Examining the \"USB Input Device\" we can look at the default Hardware and Compatible IDs which get built by the Windows driver stack based on information extracted from the USB Device Descriptor:</p> <p></p> <p></p> <p>After applying rewrite settings, the changes can be observed:</p> <p></p> <p>The second Wireless Controller shown...</p> <p>...is a Sony DualShock 4 Rev1 that was also connected and rewritten, it is completely independent from the Rev2.</p> <p></p> <p></p> <p>Due to the compatible IDs the stock WinUSB drivers got loaded, so the device can be directly accessed with whatever software the tinkerer sees fit. If we'd used some well-known Vendor and Product IDs a potentially incompatible driver could load onto the device and react in unforeseen ways. Using WinUSB is generally \"safe\" as it's a generic USB driver that ships with the operating system.</p>"},{"location":"projects/ScpToolkit/","title":"About ScpToolkit","text":"<p>ScpToolkit (successor of \"XInput Wrapper for DS3 and Play.com USB Dual DS2 Controller\" a.k.a. ScpServer by Scarlet.Crush) was the defacto-standard tool in the early 2010s if you wanted to use your Sony DualShock 3 wired and wireless on a Microsoft Windows PC. It consisted of multiple .NET applications which took care about swapping the stock drivers of controllers and Bluetooth dongles with libusbK (later WinUSB) to directly take over communication. The inputs read from the controllers were then transformed and fed into ScpVBus (a WDM-based Xbox 360 Controller emulation driver) which made them available to a wide range of PC games.</p> <p>SCP technically isn't a driver (although it shares many traits) but a huge C# program that closely mimicked what device drivers do.</p> <p>It was in development from July 2015 to roughly June 2017 and got finally archived two years later in favour of focussing on successor solutions. Its direct successors are BthPS3 and DsHidMini.</p>"},{"location":"projects/ScpToolkit/History/","title":"History of SCP","text":"<p>Back to the future</p> <p>My little attempt to piece together a rough timeline of SCPs progression through history \ud83d\ude05</p>"},{"location":"projects/ScpToolkit/History/#august-2011","title":"August 2011","text":"<p>Birth of ScpServer Saga.</p> <p>The Epoch moment! A mysterious and to this day anonymous user of the nickname Scarlet.Crush has started publishing and documenting work to tackle the issue of the DualShock 3 not behaving properly with Windows stock drivers. This solution also evolved heavily over time, had seen different components and strategies come and go and is a treasure chest of reverse engineering information.</p>"},{"location":"projects/ScpToolkit/History/#may-2014","title":"May 2014","text":"<p>Scarlet.Crush last post.</p> <p>A saddening point in history where Scarlet.Crush was last seen alive. Probably gotten consumed by wolves in the wild while going on a hike. Or a potentially less dramatic explanation of simply becoming tired of community support and moving on with life. Might have even gotten married or finally retired the Sony controllers and gave into the dark side purchasing an Xbox 360 controller. One can only speculate!</p>"},{"location":"projects/ScpToolkit/History/#july-2015","title":"July 2015","text":"<p>Nefarius enters the stage.</p> <p>A young, naive, inexperienced and slightly less cynical individual enters the stage. I've stumbled upon this project after buying a Sony DualShock 3 controller in a local electronics market on accident for the sole purpose of playing on Windows (in Nintendo emulators to be precise). As I've never owned a game console myself before (PC/Microsoft fanboy \ud83d\ude07) I simply assumed that any controller with the trusty familiar Bluetooth logo on the packaging implicitly means that Windows will eat it up just fine. Oh boy, was I wrong! But being the curious (and lazy) soul I was instead of returning it for an Xbox controller I started a little web search and found the - now abandoned yet risen in popularity - SCP Server project. Intrigued by the fact that the author also left the full source code behind and it being C# (a language I was fairly familiar with back in the days) I tried my spin on it to answer the cries for updates and fixes, especially with Windows 10 on the rise and making the project work in this new OS version. From that point in time it's been code, test, code, read, code, revert, read, code, study, test, support, reply, code, read, code, support, ... you get the idea \ud83d\ude05</p>"},{"location":"projects/ScpToolkit/History/#august-2015","title":"August 2015","text":"<p>New Thread announcement.</p> <p>Time to move! The crowd had accepted me as their new lord and saviour (narcissist much?) so I decided to move to my own fresh thread for the now re-branded \"ScpToolkit\" - a name chosen simply because of the sheer amount of sub-projects within the solution for all the various tasks (driver installer, service, stand-alone server, tray application, troubleshooter component, etc.). I had no idea how popular it would become so I simply kept the \"SCP\" prefix, which is not related to the SCP Foundation but simply stands for \"Scarlet.Crush Productions\", a fictitious company name chosen by our vanished predecessor.</p> <p>New Thread created.</p> <p>From now on, most of the communication (change-log snippets, exchanged ideas, support inquiries, etc.) happens here as more and more users hop onto the ScpToolkit train.</p>"},{"location":"projects/ScpToolkit/History/#january-2016","title":"January 2016","text":"<p>Last stable release.</p> <p>Time flies and we come close to the realization that SCP as a ginormous C# project isn't really sustainable and maintainable in the long run. SCP did everything a device driver (or set of) should have done in user-land. It was insane. It worked but was still insane. Things had to change. And they did.</p>"},{"location":"projects/ScpToolkit/History/#april-2016","title":"April 2016","text":"<p>Last Beta release</p> <p>One last attempt to learn from past mistakes, a polished release with a new overhauled driver installer wizard holding the hands of the user but limiting their freedom to tinker in comparison to version 1.6. It should never see another (stable) update \ud83d\ude27</p> <p>This was also the time where the first experiments with the ViGEm Bus Driver arose in secrecy.</p>"},{"location":"projects/ScpToolkit/History/#june-2017","title":"June 2017","text":"<p>Last commits fizzle out.</p> <p>As an overwhelming amount of feature and support requests kept pouring in, basically obstructing any meaningful push towards a new update, the last attempts to keep motivation up started to dry up. SCP got killed by too high of a demand and too little of the FOSS spirit: contributions. I had to pull the plug or I would've lost my hopes in open-source software and coding in general entirely as I've been forced into the position of a help desk operator. Not something I enjoy to spend my free time with \ud83d\ude42 Working on ViGEm's early designs was far more challenging and interesting than babysitting people flooding the issue tracker with duplicates, off-topic content and an overall disgusting trend towards entitlement for something they received for absolutely free. Go figure! So in a sense, the (grown rather big) portion of the user-base of entitled crybabies is what killed SCP in the long run \ud83d\udd25</p>"},{"location":"projects/ScpToolkit/History/#january-2018","title":"January 2018","text":"<p>Last commit cleaning the issue tracker.</p> <p>Not gonna lie, this was a fun task to pull of. I grabbed all the open issue IDs through the GitHub API and crafted one last apocalyptic commit triggering GitHub's automation to close all remaining issues so the project could be archived on a clean slate. After that, the project got archived for good. So long \ud83d\udd96</p>"},{"location":"projects/ScpToolkit/History/#january-2019","title":"January 2019","text":"<p>Official death announcement.</p> <p>As other projects had started to take priority in my life I left SCP bubble around (especially the threads on the PCSX2 forums which received the most traffic, still) and finally a year later made the official statement in those places, that the ride had indeed ended and people needed to move on.</p> <p>The end \u2764\ufe0f</p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/","title":"Manual removal of ScpToolkit residue","text":"<p>\ud83d\udea8 There's a tool available to automate driver removal \ud83d\udea8</p> <p>To quickly get rid of the drivers shipped with SCP you can use the Legacinator in addition to this guide!</p> <p>This article will walk you through the process of removing any traces of various versions of ScpToolkit from your machine \ud83d\ude0a</p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#how-to-determine-scptoolkit-version","title":"How to determine ScpToolkit version","text":"<p>If you're not sure if you're either running version 1.6.x or 1.7.x you can check this by going to Programs and Features and inspect the version column like demonstrated below:</p> <p></p> <p>In this case, version 1.6.x is installed and the according removal procedures apply.</p> <p>Don't worry if it's not there</p> <p>If you don't find this entry because your installation is damaged or partially removed, don't worry, just read on and try all the steps provided in this guide!</p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#stop-processes-remove-the-service","title":"Stop processes, remove the service","text":"<p>Administrative permissions required</p> <p>Make sure to run the following commands in an administrative prompt!</p> <p>These instructions terminate all SCP components that might currently run:</p> <p>CMD</p> <pre><code>taskkill /F /IM ScpServer.exe\ntaskkill /F /IM ScpMonitor.exe\ntaskkill /F /IM ScpTrayApp.exe\n</code></pre> <p>Should look similar to this output (notice that the server wasn't running, therefore displaying an error):</p> <p></p> <p>If none were running, that's perfectly fine, just continue.</p> <p>Now let's stop and delete the background service:</p> <p>CMD</p> <pre><code>sc stop Ds3Service\nsc delete Ds3Service\n</code></pre> <p>Resulting in:</p> <p></p> <p>Errors can be ignored</p> <p>Depending on your installation, the service might not be installed. In that case, just ignore reported errors.</p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#remove-drivers-from-v16","title":"Remove drivers from v1.6","text":"<p>Connect all your devices</p> <p>For this procedure to work properly make sure you've got your controller(s) and Bluetooth dongle(s) connected. If you don't have enough USB ports just repeat the described steps for each device, plugging it in one after another.</p> <p>Download and run the DriverStore Explorer tool. We'll use this to safely remove the driver files from the system. Make sure to run it with administrative permissions!</p> <p>You'll be presented with a list of drivers found on your machine:</p> <p></p> <p>The highlighted entries belong to the toolkit installation. Select those, tick the <code>Force Deletion</code> box on the right and then click <code>Delete Package</code>:</p> <p></p> <p>Confirm the, uhm, confirmation \ud83d\ude03</p> <p></p> <p>A few moments later they shall be gone:</p> <p></p> <p>Sweet! Now we need to instruct Windows to revert the devices to their default drivers. Open Device Manager and look for a node titled <code>libusbK USB Devices</code>:</p> <p></p> <p>Expanding said node shall reveal the devices running under SCP's drivers:</p> <p></p> <p>Right-click on each of those and select <code>Uninstall</code>:</p> <p></p> <p>We're sure we wanna do that \ud83d\ude0b</p> <p></p> <p>Same goes for the Bluetooth host:</p> <p></p> <p>Alternatively the section and device names may differ, depending on your specific case, like so:</p> <p></p> <p>There's a catch</p> <p>You might think that you're done now but there's a twist! A copy of the driver can still remain in memory and therefore won't be deleted. I strongly recommend you re-plug all devices and check if they are still running under the SCP drivers!</p> <p>If your controller or Bluetooth dongle is still showing up in the <code>libusbK</code> node, right-click, uninstall and re-plug until it's gone for good  </p> <p></p> <p>Observe and repeat carefully or you'll be left with unusable devices </p> <p>If you've done well, this is how your devices should pop up as again:</p> <p></p> <p>Great! Now there's the Bluetooth dongle back running the default Windows drivers and the controller is under Human Interface Devices where it belongs </p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#remove-drivers-from-v17","title":"Remove drivers from v1.7","text":"<p>The procedure for 1.7 is very similar to the steps described for 1.6 above, except that the node you'll find the devices under is called <code>Universal Serial Bus devices</code>:</p> <p></p> <p>In Driver Store Explorer, things will pop up slightly different, nevertheless select and force removal:</p> <p></p> <p>Then, in Device Manager go through the same \"right-click, Uninstall\" procedure:</p> <p></p> <p>Rinse and repeat until the devices won't show up under this node anymore.</p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#remove-scp-virtual-bus-driver","title":"Remove SCP Virtual Bus driver","text":"<p>While still in Device Manager, expand the <code>System devices</code> node:</p> <p></p> <p>Locate the device named <code>Scp Virtual Bus Driver</code>:</p> <p></p> <p>Same deal here; right-click, select <code>Uninstall</code> and confirm:</p> <p></p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#but-are-the-drivers-really-gone-though","title":"But are the drivers really gone though?","text":"<p>Not sure if everything's cleaned up like it should?   Devices still not showing up normally or behaving funny?  How about this:</p> <ul> <li>Get the free tool DevManView from Nir Sofer (download link at the bottom of the page)</li> <li>Extract it somewhere</li> <li>Launch the <code>DevManView.exe</code> executable (you'll be prompted to give administrative consent)</li> <li>Look for entries with <code>Device Name</code> like<ul> <li><code>Scp Virtual Bus Driver</code></li> <li><code>Bluetooth Host (ScpToolkit)</code></li> <li><code>DualShock 3 Controller (ScpToolkit)</code></li> <li><code>DualShock 4 Controller (ScpToolkit)</code></li> </ul> </li> </ul> <p>Example of some ScpToolkit v1.7.x residue:</p> <p> </p> <p>If that's the case scroll back up and have a go at it again  </p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#remove-program-files","title":"Remove program files","text":"<p>As a last step you can now safely delete the ScpToolkit installation directory, typically <code>C:\\Program Files\\Nefarius Software Solutions\\ScpToolkit</code> (may be subject to change depending on your installation, consult your brain memory to find the correct path  )</p>"},{"location":"projects/ScpToolkit/ScpToolkit-Removal-Guide/#congratulate-yourself-and-reboot","title":"Congratulate yourself and reboot","text":"<p>You've done it!  You escaped the curse! Give yourself a pat on the back and reboot your PC, just to be sure </p>"},{"location":"projects/Shibari/","title":"About Shibari","text":"<p>Shibari was an intermediate test platform for gaming input peripherals written in C#. It acted as a remapping middleware between ViGEmBus for outputs and some emerging driver projects of the past (FireShock, AirBender, BthPS3) relaying input reports and vibration commands between devices. It briefly served as a mini-replacement for ScpToolkit while the arising driver components were still in a research and early development phase. C# was chosen as it allowed for rapid prototyping.</p> <p>It was in development from October 2017 to February 2021 until it got archived in favour of better solutions. Its direct successors are BthPS3 and DsHidMini.</p>"},{"location":"projects/ViGEm/","title":"About ViGEm","text":"<p>ViGEm or more commonly known as ViGEmBus was a redistributable framework for Windows, consisting of a kernel driver and user-mode library for C/C++, .NET and various other community-provided bindings. Its purpose was to provide the developer with a software-equivalent of the popular Microsoft\u2122 Xbox 360 and Sony\u2122 DualShock 4 Controller and feed their inputs via an API. This enabled pretty much any application to emulate commonly known virtual game controller devices for whatever purpose envisioned by the author.</p> <p>It was in development from August 2017 to August 2023 until it got archived due to a trademark conflict.</p>"},{"location":"projects/ViGEm/End-of-Life/","title":"End of Life Statement","text":"<p>In May 2023 a conflict with a registered trademark by ViGEM GmbH was discovered, leading to a mutual agreement between Nefarius Software Solutions e.U. and ViGEM GmbH to enter a transition phase starting July 2023 and ending approximately December 2023. As a result of the agreement, all usage of the phrase \"ViGEm\" (ViGEmBus etc.) and the Domain <code>vigem.org</code> will be retired and archived permanently over the agreed upon time span.</p> <p>As a direct result the ViGEmBus (and client libraries) project will no longer receive any updates and has been archived/retired.</p> <p>This has no impact on existing installations except for the updater components: their auto-updaters need to be adjusted to prevent a potential security risk! (More info on the next section)</p> <p>So long, everyone, it was fun while it lasted \ud83d\ude04</p>"},{"location":"projects/ViGEm/End-of-Life/#about-the-update-warnings","title":"About the update warnings","text":"<p>Software like ViGEmBus, HidHide and older versions of BthPS3 got shipped with an auto-updater service that currently communicates with a server domains that won't belong to us anymore after the end of 2023. Because of this, the configuration of the updaters need to be adjust so they contact our new server domain from now on.</p> <p>If the updaters are not adjusted, they will continue to contact the old domain, which could lead to your public IP address getting leaked to whoever has the ownership of the domain starting from 2024.</p> <p>Once the updaters are adjusted the security issue will be prevented and the \"critical\" warnings will stop.</p>"},{"location":"projects/ViGEm/End-of-Life/#adjusting-the-automatic-updater-configuration","title":"Adjusting the Automatic Updater Configuration","text":"<p>There are two ways of adjusting the updaters:</p> <ol> <li>Using the Legacinator tool to automatically update them. Quick and easy!</li> <li>Manually adjusting the configuration file for each updater</li> </ol>"},{"location":"projects/ViGEm/End-of-Life/#semi-automatic-method-legacinator","title":"Semi-automatic method (Legacinator)","text":"<ol> <li>Download and execute the latest version of the Legacinator tool</li> <li>Look for the \"Outdated XXXXXXX Updater Configuration found\" option<ul> <li>There can be up to 3 of them: one for the ViGEmBus, another for HidHide and the last one for BthPS3 </li> </ul> </li> <li>Select the options regarding the outdated configuration<ul> <li>Newer versions of the tool will run this automatically so you don't need to do anything!</li> </ul> </li> <li>Done! Updaters configuration adjusted!</li> <li>Close the Legacinator window and the updater popup will close as well</li> </ol>"},{"location":"projects/ViGEm/End-of-Life/#manual-methods","title":"Manual methods","text":"Adjusting the ViGEmBus updater (for Windows 10 and 11) <p>This is the recommended action if you're running Windows 10/11</p> <p>If you're running ViGEm Bus Driver v1.21.442 or older the following section applies to you and is highly recommended to follow until software updates become available (if ever).</p> <p>Navigate to the path <code>C:\\Program Files\\Nefarius Software Solutions\\ViGEm Bus Driver</code> and edit the file <code>ViGEmBus_Updater.ini</code> with a text editor of your choice (you will need Administrator permissions to edit). Find the following line:</p> <pre><code>URL=https://updates.vigem.org/api/github/ViGEm/ViGEmBus/updates\n</code></pre> <p>Change it to:</p> <pre><code>URL=https://aiu.api.nefarius.systems/api/github/ViGEm/ViGEmBus/updates\n</code></pre> <p>Save it an you're done! From now on the updater agent will contact the new server to check for software updates.</p> Adjusting the ViGEmBus updater (for Windows 7 and 8/8.1) <p>This is the recommended action if you're running Windows 7/8/8.1</p> <p>If you're running ViGEm Bus Driver v1.16.116 or older the following section applies to you and is highly recommended to follow as there won't be any new updates made available.</p> <p>Find and open \"Task Scheduler\", select <code>Task Scheduler Library</code> on the left-hand side, select the <code>ViGEmBusUpdater</code> entry in the center panel, right-click it and select <code>Delete</code>:</p> <p></p> <p>Confirm and you're done!</p> <p></p> <p>From now on your PC will no longer check for updates and no update pop-ups will nag you ever again!</p> Adjusting the HidHide updater <p>This is the recommended action if you're running Windows 10/11</p> <p>If you're running HidHide v1.2.128 or older the following section applies to you and is highly recommended to follow until software updates become available (if ever).</p> <p>Navigate to the path <code>C:\\Program Files\\Nefarius Software Solutions\\HidHide</code> and edit the file <code>HidHide_Updater.ini</code> with a text editor of your choice (you will need Administrator permissions to edit). Find the following line:</p> <pre><code>URL=https://updates.vigem.org/api/github/ViGEm/HidHide/updates\n</code></pre> <p>Change it to:</p> <pre><code>URL=https://aiu.api.nefarius.systems/api/github/ViGEm/HidHide/updates\n</code></pre> <p>Save it an you're done! From now on the updater agent will contact the new server to check for software updates.</p> Removing the BthPS3 updater <p>This is the recommended action if you're on an older version</p> <p>If you're running BthPS3 drivers v1.2.4 or older the following section applies to you and is highly recommended to follow as there won't be any new updates made available via this mechanism.</p> <p>Find and open \"Task Scheduler\", select <code>Task Scheduler Library</code> on the left-hand side, select the <code>BthPS3Updater</code> entry in the center panel, right-click it and select <code>Delete</code>:</p> <p></p> <p>Confirm and you're done!</p> <p></p> <p>From now on your PC will no longer check for updates and no update pop-ups will nag you ever again!</p>"},{"location":"projects/ViGEm/End-of-Life/#uninstall-applications","title":"Uninstall Applications","text":"<p>If you're not using any software relying on either ViGEmBus or HidHide you can simply uninstall them via \"Apps &amp; Features\". Same can be achieved by the old \"Programs and Features\" section in the Control Panel.</p> Uninstall ViGEm Bus Driver <p>Search for <code>ViGEm</code> and uninstall:</p> <p></p> Uninstall HidHide <p>Search for <code>HidHide</code> and uninstall:</p> <p></p> Uninstall BthPS3 <p>Search for <code>BthPS3</code> and uninstall:</p> <p></p> <p>Alternatively via <code>Programs and Features</code> panel:</p> <p></p> <p>Right-click the entry and select <code>Uninstall</code>. Follow the steps and you're done.</p>"},{"location":"projects/ViGEm/End-of-Life/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"projects/ViGEm/End-of-Life/#what-is-any-of-this-why-were-these-things-installed-on-my-pc-why-are-these-warning-appearing-how-do-i-make-them-stop","title":"What is any of this? Why were these things installed on my PC? Why are these warning appearing? How do I make them stop?","text":"<p>At some point, you (or someone who uses your computer) directly installed one of our products, or maybe used another software that automatically installed them for you.</p> <p>These products are legit and harmless, used along gamepads/game controllers related apps. The ones related to the warnings are:</p> <ul> <li>ViGEmBus is used for creating virtual gamepads</li> <li>HidHide is used for hiding physical/real gamepads, usually to prevent them from conflicting with virtual gamepads</li> <li>BthPS3 allows connecting PlayStation\u2122 3 controllers via Bluetooth to Windows</li> </ul> <p>If you make use of these products and want to keep them on the system, check the \"About the update warnings\" section for more info on the current situation and what to do.</p> <p>If you really don't know what any of these are, or think that you or any apps in your PC don't make use of them, you can follow the instructions on the \"Uninstall applications\" section above to get rid of them.</p>"},{"location":"projects/ViGEm/End-of-Life/#can-i-trust-this","title":"Can I trust this?","text":"<p>This site, the software, drivers and other products mentioned here and their updaters are all under the Nefarius brand, from the developer named Benjamin H\u00f6glinger-Stelzer, A.K.A. Nefarius. You can check his github profile link here. The warning in the updaters are legit if they match what is being described in this page.</p>"},{"location":"projects/ViGEm/End-of-Life/#do-i-need-to-care-about-adjusting-the-updaters-if-i-dont-care-about-updates","title":"Do I need to care about adjusting the updaters if I don't care about updates?","text":"<p>It's highly recommended to do so in order to prevent the security risk described in the \"About the update warnings\" section.</p>"},{"location":"projects/ViGEm/End-of-Life/#why-does-this-update-look-and-feel-a-bit-sketchy","title":"Why does this update look and feel a bit sketchy?","text":"<p>The updater agent is a 3rd party product, there were only very limited options available in attempting to turn it into an \"important news delivery tool\". The end result was as good as we could make it \ud83d\ude05</p>"},{"location":"projects/ViGEm/End-of-Life/#this-update-is-taking-forever-the-progress-doesnt-finish","title":"This update is taking forever, the progress doesn't finish","text":"<p>The update will finish once the Legacinator window is closed. Make sure to follow the steps, skipping step 1 if Legacinator is already open, in the Semi-automatic method section (Legacinator)</p>"},{"location":"projects/ViGEm/End-of-Life/#what-will-happen-to-the-vigembus-and-related-products","title":"What will happen to the ViGEmBus and related products?","text":"<p>All archived/discontinued projects will remain available and the actively maintained ones will continue being supported, but now under the Nefarius brand name.</p>"},{"location":"projects/ViGEm/End-of-Life/#where-can-i-find-even-more-information-about-this","title":"Where can I find (even) more information about this?","text":"<p>On my Mastodon, here you go \ud83d\ude00</p>"},{"location":"projects/ViGEm/End-of-Life/#why-didnt-you-simply-rebrand-and-keep-it-going-why-pull-the-plug","title":"Why didn't you simply rebrand and keep it going? Why pull the plug?","text":"<p>I simply don't have that kind of time, plus I've moved on working on other things. This deprecation incident alone took weeks to prepare and think through, I don't need any more of it \ud83d\ude09 Also I've been soloing the project for roughly 7 years, people had enough time to chime in and participate. They didn't, so this is the only logical outcome \ud83d\udd96</p>"},{"location":"projects/ViGEm/End-of-Life/#how-to-fix-error-the-filename-directory-name-or-volume-label-syntax-is-incorrect-update-error","title":"How to fix 'Error: The filename, directory name, or volume label syntax is incorrect' update error?","text":"<p>If you receive this error and it doesn't go away either...</p> <ul> <li>...install the latest setup provided on GitHub manually (which rips out the updater) or...</li> <li>...use the manual steps outlined above to manually delete the updater job from Task Scheduler.</li> </ul> <p>The source of the error is unknown and can not be rectified as it is part of a 3rd party product.</p>"},{"location":"projects/ViGEm/End-of-Life/#when-will-the-domain-vigemorg-be-handed-over","title":"When will the domain <code>vigem.org</code> be handed over?","text":"<p>The domain transfer has been initiated on the 21st of December 2023 and finished on the 26th of December 2023. This effectively means that from this date onwards Nefarius Software Solutions e.U. no longer has any influence over the content served by the domain. All instances of use of the domain have been removed or replaced on a best-effort-basis wherever I've had permissions to do so.</p>"},{"location":"projects/ViGEm/How-to-Install/","title":"How to Install/Remove","text":"<p>There is no GUI</p> <p>ViGEmBus is a low-level emulator library (framework) for USB game controllers, it doesn't have a user interface. You need software building upon ViGEmBus to make things happen \ud83d\ude09 If you don't know what that means, you're in the wrong place and most probably shouldn't install it \ud83d\ude18</p>"},{"location":"projects/ViGEm/How-to-Install/#installation","title":"Installation","text":"<ul> <li>Download the latest setup of ViGEmBus matching your system architecture. It's a file named <code>ViGEmBusSetup_xXX.msi</code></li> <li>Run the setup and follow the instructions</li> </ul> <p>Congratulations! That was it, ViGEmBus is now ready to use.</p> <p>In case you are experiencing issues, have a look at the troubleshooting section.</p>"},{"location":"projects/ViGEm/How-to-Install/#updating","title":"Updating","text":"<p>Updating simply involves downloading the latest setup and following the exact same steps.</p>"},{"location":"projects/ViGEm/How-to-Install/#removal","title":"Removal","text":"<p>This depends on the software you use</p> <p>Some programs \"bundle\" ViGEmBus with it (e.g. silently install a copy on their own), either with or without the users consent. This method is out of our reach; please contact the distributor of said software, we can't aid in this case.</p>"},{"location":"projects/ViGEm/How-to-Install/#apps-and-features-method","title":"Apps and Features method","text":"<p>The usual way consists in using its built-in uninstaller:</p> <ul> <li>Open Windows 10's <code>Apps and Features</code> by pressing Win+X and selecting it from the menu</li> <li>Use the search box in the center to look for <code>Emulation</code> or <code>Nefarius</code></li> <li>Click on <code>Nefarius Virtual Gamepad Emulation Bus Driver</code> and select <code>Uninstall</code> </li> <li>Follow the uninstaller's instructions</li> <li>Done. If you get prompted to reboot, do so and that's it!</li> </ul>"},{"location":"projects/ViGEm/How-to-Install/#msi-installer-method","title":".msi installer method","text":"<p>This method is useful when the ViGEmBus entry doesn't appear in the Windows' Apps lists at <code>Apps and Features</code>:</p> <ul> <li>Just follow the same steps of the installation section, but choose the <code>remove</code> when it appears </li> <li>Done. If you get prompted to reboot, do so and that's it!</li> </ul> <p>That should do the trick. If you want to be absolutely sure that there are no traces left of the ViGEmBus on your system, have a look at the troubleshooting section</p>"},{"location":"projects/ViGEm/How-to-Install/#troubleshooting","title":"Troubleshooting","text":"<p>Section based on the latest version!</p> <p>The whole troubleshooting section is based on top of the latest version of ViGEmBus. If you are using or trying to install an older version, then your experience will greatly differ and following this section may actually cause more issues. Use common sense \ud83d\ude42</p>"},{"location":"projects/ViGEm/How-to-Install/#general-health-checks","title":"General health checks","text":"<p>The ViGEmBus has no user interface, but don't worry, it's easy to verify if everything is working as expected when you know where to look:</p> <ul> <li>Open Device Manager by pressing Win+X and selecting it from the menu: </li> <li>Click on the <code>View</code> tab at the top and change the view type to <code>Devices by connection</code></li> <li>Look for entries named <code>Nefarius Virtual Gamepad Emulation Bus</code> or <code>Virtual Gamepad Emulation Bus</code></li> </ul> <p>If more than one entry appears, you might have multiple version of ViGEmBus installed which may cause conflicts. Follow the full clean section.</p> <p>If you have only one entry and it is the one starting with <code>Nefarius</code> then continue following this section:</p> <ul> <li>Right click on the <code>Nefarius Virtual Gamepad Emulation Bus</code> then select <code>Properties</code></li> <li>At the <code>General</code> tab, its status should be <code>working properly</code></li> <li>At the <code>Driver</code> tab the <code>Driver Version</code> should match the latest version you downloaded and installed </li> </ul> <p>If everything matches the instructions, then things should work as expected. A special case is when the user has a laptop from the HP Omen Gaming line. If this is your case, have a look at the ViGEmBus issues in HP Omen laptops section.</p>"},{"location":"projects/ViGEm/How-to-Install/#vigembus-issues-in-hp-omen-laptops","title":"ViGEmBus issues in HP Omen laptops","text":"<p>HP's line of Omen gaming Laptops/Desktops come pre-installed with a modified (forked) version of the ViGEmBus driver (from 2018). Apps trying to locate the latest ViGEmBus may end up detecting the modified HP driver instead, causing all sorts of issue since it is based on an outdated version.</p> <p>If this is your situation, follow the guide outlined here.</p>"},{"location":"projects/ViGEm/How-to-Install/#purging-every-trace-of-vigembus","title":"Purging every trace of ViGEmBus","text":"<p>If you are facing issues and/or have multiple ViGEmBus entries in your Device Manager it's best to remove every trace of it from your system to start clean again:</p> <ul> <li>First, follow the removal section to uninstall ViGEmBus via the normal way so we can tackle things in order</li> <li>After uninstalling ViGEmBus by using its uninstaller, reboot your computer</li> <li>Open Device Manager by pressing Win+X and selecting it from the menu</li> <li>Click on the <code>View</code> tab at the top and select <code>Devices by connection</code></li> <li>For each entry that exists with the name of <code>Nefarius Virtual Gamepad Emulation Bus</code> or <code>Virtual Gamepad Emulation Bus</code>, right click on them and select <code>Uninstall</code> then give confirmation when asked to</li> </ul> <p>Having no ViGEmBus entries left at the Device Manager does not mean your system is fully rid of it, so let's continue:</p> <ul> <li>Download and open the Driver Store Explorer</li> <li>On its interface, click at the <code>INF</code> bar at the top left side so the list gets ordered by name</li> <li>Scroll to the <code>V</code> letter section and mark every entry of <code>vigembus.inf</code>. BE CAREFUL TO NOT MARK ANYTHING ELSE! After that, on the right side, mark the <code>Force Deletion</code> checkbox and then click on <code>Delete Driver</code></li> <li>Reboot your computer</li> <li>Verify again on the Driver Store Explorer if there are no entries left of <code>vigembus.inf</code> and if there are no entries left of <code>(Nefarius) Virtual Gamepad Emulation Bus</code> on the Device Manager. If there are, repeat this section</li> </ul> <p>And done, no ViGEmBus left anywhere! Now it's safe to try re-installing the latest version according to the installation section.</p>"},{"location":"projects/ViGEm/How-to-Install/#other-issues","title":"Other issues","text":"<p>This guide should cover all known issues regarding the ViGEmBus setup, so give it a good read.</p> <p>If you are facing another issue that is not covered here, feel free to reach us through the proper means.</p>"},{"location":"projects/Vicius/","title":"About V\u012bc\u012dus","text":"<p>Nefarius' n\u014fv\u012bc\u012dus (or just vicius for short) is a universal software updater agent for Windows. It's a self-contained executable that can be shipped alongside your software product(s) and takes care of keeping them up-to-date out in the field. It requires only minimal configuration and backend server capabilities (any static web server will do) while offering enough flexibility and optional features to the more adventurous users.</p> <p>On this site you can find the extended documentation teaching you how to get it up and running in a few moments.</p>"},{"location":"projects/Vicius/#architecture","title":"Architecture","text":"<p>The only requirement you need to at least fulfil is to provide a web server providing the remote update configuration file. The Server Discovery describes in detail how this is achieved.</p> <p>The updater is meant to be distributed alongside the product it will watch over, e.g. via a setup package created with WiX, Inno Setup, Advanced Installer and alike. Once placed on the client machine, it requires very little effort to be ready to run. It will be run periodically by Task Scheduler and contact the pre-configured server for the latest remote update configuration file and makes decisions based on its content.</p>"},{"location":"projects/Vicius/#workflow","title":"Workflow","text":"<p>Once the updater is run (either by the user or automatically) it will check if the local product installation is outdated and if so, offers the user a simple notification window with choices on next steps. The user can then decide to check out the update summary (a free text that should be used as a list of changes) and start downloading and running the update. Alternatively the update can be postponed or help resources displayed, if configured.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/","title":"Command Line Arguments","text":"<p>The default behaviour of the updater if invoked without any CLI arguments is to display the main window if updates are found or message dialogs in case of errors. The following CLI switches are supposed to be used for setting up the updater on the consumer system and customizing it.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#common","title":"Common","text":""},{"location":"projects/Vicius/Command-Line-Arguments/#-install","title":"<code>--install</code>","text":"<p>Typically called with only once when the bundled product gets installed. Performs self-registration in current users' autostart and daily runs via Task Scheduler. Errors will be logged but the user will not be actively notified. Check the exit code for potential error cases.</p> <p>Beware of the target directory permissions</p> <p>If your updater instance gets deployed into a restricted directory (like <code>Program Files</code>) this command needs to be invoked with administrative privileges or some steps requiring write-permissions will fail.</p> <p>Prerequisite for self-updating feature</p> <p>The install routine must be run at least once or the self-update feature will not be available.</p> <p>Beware of parent path changes</p> <p>If the updater executable is moved to a different location, this command needs to be issued again at least once.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-no-scheduled-task","title":"<code>--no-scheduled-task</code>","text":"<p>Can be used in conjunction with the <code>--install</code> switch to skip the creation of the Scheduled Task. Useful if you rather wish to invoke the updater via your own mechanism, like a button in your product or whatever event works best for you.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-no-autostart","title":"<code>--no-autostart</code>","text":"<p>Can be used in conjunction with the <code>--install</code> switch to skip registering in the current users autostart. Useful if you rather wish to invoke the updater via your own mechanism, like a button in your product or whatever event works best for you.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-override-success-code-code","title":"<code>--override-success-code &lt;code&gt;</code>","text":"<p>Can be used in conjunction with the <code>--install</code> and <code>--uninstall</code> switch to override the default success exit code with the user-specified value. Useful if the calling process can not be configured to treat any other value than e.g. 0 as a success.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-uninstall","title":"<code>--uninstall</code>","text":"<p>Removes the autostart registration and deletes the scheduled task job. The process will exit after these tasks finished successfully or on error.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-skip-self-update","title":"<code>--skip-self-update</code>","text":"<p>Skips the self-update procedure, even if a newer version is available.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-silent","title":"<code>--silent</code>","text":"<p>Suppresses any UI interaction, even when updates are found.</p> <p>Check the app exit code for status details.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-silent-update","title":"<code>--silent-update</code>","text":"<p>Suppresses any UI, downloads and invokes the latest release found and exits afterwards.</p> <p>Does nothing if the product is already up to date.</p> <p>Check exit codes for success or errors</p> <p>This flag is most useful if you decide to trigger updates directly from your own application. Make sure to check the exit code to react to possible errors during the update procedure.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-ignore-busy-state","title":"<code>--ignore-busy-state</code>","text":"<p>Ignores if the user session is busy and displays the main window if updates were found.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-log-level-value","title":"<code>--log-level &lt;value&gt;</code>","text":"<p>Alters the default logging level (<code>info</code>) to the provided <code>&lt;value&gt;</code>.</p> <p>Possible values are: <code>trace</code>, <code>debug</code>, <code>info</code>, <code>warn</code>, <code>err</code>, <code>critical</code> or <code>off</code>.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-log-to-file-value","title":"<code>--log-to-file &lt;value&gt;</code>","text":"<p>Logs to the file specified in <code>&lt;value&gt;</code> in addition to the default debug sink.</p> <p>Ensure the target path is writable</p> <p>Bear in mind that the log file path needs to be writable for the user executing the updater. It will fail silently if it couldn't write to the specified file. See Logging article for more details.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-server-url","title":"<code>--server-url</code>","text":"<p>Only available in DEBUG builds</p> <p>This switch is intended to only work with DEBUG builds as it opens up a huge security problem if distributed to production systems. Any malicious process could attempt to direct the updater to a malignant server trying to then download and execute a payload that might further infect the target machine.</p> <p>Overrides all other Server Discovery methods. Useful to quickly switch to different update configurations while testing the local debug build. The value is ignored in RELEASE builds, if set.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-channel-value","title":"<code>--channel &lt;value&gt;</code>","text":"<p>Specifies an alternate update channel to use. This value will be inserted into the server URL template e.g. <code>manufacturer/product/channel</code> which allows the caller to switch between remote updater configurations when invoking the updater manually. This can be used to deliver different update mechanisms for Beta or VIP users etc.</p> Remarks for v1.8.876 and below <p>In versions above v1.8.876, there is no validation of this parameter; server-side validation is assumed to be sufficient.</p> <p>In v1.8.876 and below, the value can be any alphanumeric string excluding the following characters:</p> <ul> <li><code>'/'</code> (forward slash)</li> <li><code>'\\'</code> (backslash)</li> <li><code>' '</code>\u00a0(space)</li> <li><code>.</code> (period)</li> <li><code>2</code> (the number 2)</li> </ul> <p>Server-side path validation should still be used with earlier versions of the client.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-add-header-namevalue","title":"<code>--add-header &lt;name=value&gt;</code>","text":"<p>Allows for adding one or more additional HTTP headers to be added to the update server request. This can be used in conjunction with a backend application server to influence delivery of the remote configuration based on certain custom client parameters.</p> <p>This parameter can be specified multiple times with different name-value-pairs. For example:</p> <pre><code>--add-header CustomerId=rZnZzZu9wH --add-header ProcessorVendor=AMD --add-header IsVIP=true\n</code></pre>"},{"location":"projects/Vicius/Command-Line-Arguments/#-ignore-postpone","title":"<code>--ignore-postpone</code>","text":"<p>Ignores the check if we are in an active postpone period, if specified. Does nothing if there is no active postpone period.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-purge-postpone","title":"<code>--purge-postpone</code>","text":"<p>Deletes the registry-backed postpone data, if present.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-terminate-process-before-update-handle","title":"<code>--terminate-process-before-update &lt;handle&gt;</code>","text":"<p>An optional handle to a process object to terminate before the update starts. See this article for details.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-local-version-version","title":"<code>--local-version &lt;version&gt;</code>","text":"<p>Overrides the detected local product version if no detection method was specified in either the local or server-provided configuration.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-force-local-version-version","title":"<code>--force-local-version &lt;version&gt;</code>","text":"<p>Overrides the detected local product version. This value trumps any product detection method specified in either local or server-provided configuration.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#internal","title":"Internal","text":"<p>Beware of altering</p> <p>The following arguments are set or removed by other common commands and should not be altered by the user.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-autostart","title":"<code>--autostart</code>","text":"<p>Performs tasks on user logon like checking self-integrity and searching for updates.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-background","title":"<code>--background</code>","text":"<p>Tells the updater it's run by Task Scheduler. It will not display any UI except when an update has been found. Errors will be logged but the user will not be actively notified.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-temporary","title":"<code>--temporary</code>","text":"<p>Tells the updater it's run as a temporary child process to avoid blocking an in-progress setup procedure by locking the origin file. If this flag is present, certain commands (like <code>--install</code>) are ignored.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#self-updater","title":"Self-Updater","text":"<p>The following parameters are passed from the main updater process to the self-updater module.</p> <p>They can not be altered by the user.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-pid","title":"<code>--pid</code>","text":"<p>The Process ID of the parent updater process that invoked the self-update module.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-url","title":"<code>--url</code>","text":"<p>The download URL of the latest updater executable. Redirects are supported.</p>"},{"location":"projects/Vicius/Command-Line-Arguments/#-path","title":"<code>--path</code>","text":"<p>The absolute path to the local updater executable.</p>"},{"location":"projects/Vicius/Common-Errors/","title":"Common Errors","text":"<p>The updater will try its best to not disturb the user unless absolutely necessary. Some errors can not be recovered from, though, so check out what you can do below.</p>"},{"location":"projects/Vicius/Common-Errors/#requests-blocked-by-firewall","title":"Requests blocked by firewall","text":"<p>Typically on vanilla Windows the Windows Firewall does not block any outgoing request so everything should be fine.</p> <p>However if 3rd party software firewalls (like simplewall) are used, users might get a notification like...</p> <p></p> <p>...and would need to accept the outgoing connection for the core functionality to work.</p> <p>If the connection is blocked, an error message similar to...</p> <p></p> <p>...might appear and needs to be rectified by the user (or the setup package the updater is bundled with).</p> <p>If the source of the update setup file is blocked, you will end up with a view similar to this after the retries and timeouts have been exhausted:</p> <p></p>"},{"location":"projects/Vicius/Common-Errors/#invalid-detection-method","title":"Invalid detection method","text":"<p>This error can pop up when the updater is run without any silent switches and neither the server nor the local configuration file provided any details on how to detect the version of the product it watches over.</p>"},{"location":"projects/Vicius/Common-Errors/#updater-process-module-hash-mismatch","title":"Updater process module hash mismatch","text":"<p>This error indicates that the updater was called with the <code>--temporary</code> flag outside of supported operation. I told you to not fiddle with it and that's what you get for being nosey \ud83d\ude06</p>"},{"location":"projects/Vicius/Emergency-Feature/","title":"Emergency Feature","text":"<p>Sometimes pushing a regular update isn't gonna cut it. Maybe a serious security incident happened that can not be rectified immediately via software. Maybe the core maintainer is going to jail. Maybe the end of the world is nigh. Whatever the reason; if something has happened that needs the attention of your user base quickly and reliably you can use the emergency feature.</p>"},{"location":"projects/Vicius/Emergency-Feature/#how","title":"How","text":"<p>In your server-side configuration add the following snippet with a URL of your choice that should open on the clients' machine next time the updater runs:</p> <p>Example JSON snippet</p> <pre><code>{\n    \"instance\": {\n        \"emergencyUrl\": \"https://docs.nefarius.at/projects/Vicius/Emergency-Feature/\"\n    }\n}\n</code></pre> <p>No matter if the local software is up to date; if the <code>emergencyUrl</code> value is set on the server, it will get opened on the client as soon as the next check-cycle is run via Task Scheduler (or during user logon).</p> <p>This is a powerful mechanism, do not abuse it!</p> <p>Obviously your users will not shower you with praise if you push a random URL on them every day; only set this value if you have a good, unavoidable reason to do so! You have been warned \u2764</p>"},{"location":"projects/Vicius/Exit-Codes/","title":"Possible Exit Codes","text":"<p>Various success or error states can be inferred from the process exit code.</p>"},{"location":"projects/Vicius/Exit-Codes/#success-states","title":"Success states","text":"<p>Can be overridden</p> <p>Some of those can be overridden with <code>--override-success-code</code> switch.</p> Code Description <code>200</code> The <code>--install</code>/<code>--uninstall</code> command finished successfully. <code>201</code> The self-updater process started successfully. <code>202</code> The installed product is up to date. <code>203</code> The update got installed successfully. <code>204</code> The user chose to postpone the update right now. <code>205</code> The user postponed the update and 24 hours since then haven't yet passed. <code>206</code> The <code>--purge-postpone</code> command finished successfully. <code>207</code> A new updater process was successfully created from a temporary location. <code>208</code> The updater process was closed while a setup operation was still in progress."},{"location":"projects/Vicius/Exit-Codes/#error-conditions","title":"Error conditions","text":"Code Description <code>100</code> Failed to parse command line arguments. <code>101</code> Failed to register autostart entry. <code>102</code> Failed to (re-)create scheduled task. <code>103</code> Failed to extract self-updater component. <code>104</code> Failed to request or process update server response. <code>105</code> Failed to detect installed product version. <code>106</code> The user is currently running a game or other full-screen applications. <code>107</code> The release download failed and the user aborted the update. <code>108</code> The setup launch failed and the user aborted the update. <code>109</code> The setup execution finished with a non-success exit code and the user aborted the update. <code>110</code> The <code>--purge-postpone</code> command didn't succeed. There might be no active postpone period. <code>111</code> Failed to terminate the process specified via <code>--terminate-process-before-update</code>. <code>112</code> Two or more specified command line arguments were incompatible with each other. <code>113</code> The updater file name contains some invalid sequences."},{"location":"projects/Vicius/Inja-Templates/","title":"Inja Templates","text":"<p>The Inja template engine is used for every field which involved specifying or resolving a file path on the local machine. This allows the user to specify any number of more or less complex lookups in dynamically building paths that might differ on each system.</p> <p>For example hard-coding the absolute path <code>C:\\Windows\\System32\\drivers\\HidHide.sys</code> comes with some more or less obvious downsides; the users' Windows installation might not be located under the iconic <code>C:\\</code> drive and the lookup would fail. Instead we can query for the system directory dynamically with a template like <code>{{ envar(windir) }}\\System32\\drivers\\{{ product }}.sys</code> with the following data:</p> <pre><code>\"data\": {\n    \"windir\": \"WINDIR\",\n    \"product\": \"HidHide\"\n}\n</code></pre> <p>To fully understand the syntax and usage please get familiar with the official tutorial first, then continue this article to learn the product-specific extensions.</p>"},{"location":"projects/Vicius/Inja-Templates/#extension-functions","title":"Extension functions","text":"<p>In addition to the built-in functions, the following custom extensions are provided.</p>"},{"location":"projects/Vicius/Inja-Templates/#envar","title":"<code>envar</code>","text":"<p>Expands/resolves an environment variable by name.</p> Parameter Pos. Description Mandatory 1 The name of the environment variable to query. Yes 2 The optional fallback value to use if the variable couldn't be read or doesn't exist. No"},{"location":"projects/Vicius/Inja-Templates/#regval","title":"<code>regval</code>","text":"<p>Queries a registry value.</p> Parameter Pos. Description Mandatory 1 The Alternate Registry View to use if a 32-Bit updater process needs to read a 64-Bit key and vice versa. Only useful if the updater architecture differs from the installed product architecture (e.g. the product is a 32-Bit installation and the updater is a 64-Bit build). In most cases it should be avoided to mix architectures and simply use the value <code>Default</code>. Possible values are: <ul><li><code>Default</code> - Doesn't alter default behaviour.</li><li><code>WOW64_64KEY</code> - Access a 64-bit key from either a 32-bit or 64-bit application.</li><li><code>WOW64_32KEY</code> - Access a 32-bit key from either a 32-bit or 64-bit application.</li></ul> Yes 2 The hive to search in. Possible values are: <ul><li><code>HKCU</code> for <code>HKEY_CURRENT_USER</code></li><li><code>HKLM</code> for <code>HKEY_LOCAL_MACHINE</code></li><li><code>HKCR</code> for <code>HKEY_CLASSES_ROOT</code></li></ul> Yes 3 The sub-key path under the specified hive. For example <code>SOFTWARE\\Nefarius Software Solutions e.U.\\HidHide</code>. Yes 4 The value name to query. Type gets auto-detected. Supported value types are: <ul><li><code>REG_BINARY</code> - Read as a byte array. Gets returned as a JSON array string.</li><li><code>REG_DWORD</code> - A 32-bit number. Gets returned as a string.</li><li><code>REG_EXPAND_SZ</code> - A null-terminated string that contains references to environment variables, for example, %PATH%. Gets returned with its environment variables expanded.</li><li><code>REG_MULTI_SZ</code> - A sequence of null-terminated strings, terminated by an empty string (\\0). Gets returned as a JSON array string.</li><li><code>REG_QWORD</code> - A 64-bit number. Gets returned as a string.</li><li><code>REG_SZ</code> - A null-terminated string.</li></ul> Yes 5 The fallback value to return on error, if provided. An empty string by default. No"},{"location":"projects/Vicius/Inja-Templates/#inival","title":"<code>inival</code>","text":"<p>Reads a value from a section of an INI file.</p> Parameter Pos. Description Mandatory 1 The path to the INI file to read. Yes 2 The section to search the key in. Yes 3 The key name to read. Yes 4 The fallback value to return on error, if provided. An empty string by default. No"},{"location":"projects/Vicius/Inja-Templates/#productby","title":"<code>productBy</code>","text":"<p>Searches for an installed products' details based on provided regular expression.</p> Parameter Pos. Description Mandatory 1 The Uninstall Registry value name (e.g. <code>DisplayName</code>) to query. Yes 2 The regular expression to apply to the queried value. Yes <p>Query and response example</p> <p>The example query <code>{% set query=productBy(parameters.value, parameters.product) %}</code> with data <pre><code>\"data\": {\n    \"value\": \"Publisher\",\n    \"product\": \"Blackmagic\"\n}\n</code></pre> will result in the following content of the <code>query</code> variable: <pre><code>{\n    \"count\": \"5\",\n    \"results\": [\n        {\n            \"displayName\": \"Fairlight Audio Accelerator Utility\",\n            \"displayVersion\": \"1.0.13\",\n            \"installDate\": \"20211215\",\n            \"installLocation\": \"C:\\\\Program Files\\\\Blackmagic Design\\\\DaVinci Resolve\\\\audio\\\\Fairlight Audio Accelerator\\\\\",\n            \"publisher\": \"Blackmagic Design\",\n            \"uninstallString\": \"\\\"C:\\\\Program Files\\\\Blackmagic Design\\\\DaVinci Resolve\\\\audio\\\\Fairlight Audio Accelerator\\\\unins000.exe\\\"\"\n        },\n        {\n            \"displayName\": \"DaVinci Resolve Keyboards\",\n            \"displayVersion\": \"1.0.0.0\",\n            \"installDate\": \"20191118\",\n            \"installLocation\": \"\",\n            \"installSource\": \"C:\\\\Users\\\\nefar\\\\AppData\\\\Local\\\\Temp\\\\{0F99ED6C-B74F-4761-B400-1E60209F202C}\\\\\",\n            \"language\": \"1033\",\n            \"publisher\": \"Blackmagic Design\",\n            \"uninstallString\": \"MsiExec.exe /X{04F776FB-37A2-4116-84F2-6CF3D731999D}\"\n        },\n        {\n            \"displayName\": \"DaVinci Resolve Control Panels\",\n            \"displayVersion\": \"2.0.1.0\",\n            \"installDate\": \"20211210\",\n            \"installLocation\": \"\",\n            \"installSource\": \"C:\\\\Users\\\\nefar\\\\AppData\\\\Local\\\\Temp\\\\{6B2CFC86-11E0-48D2-966E-54D9E47D1BBB}\\\\\",\n            \"language\": \"1033\",\n            \"publisher\": \"Blackmagic Design\",\n            \"uninstallString\": \"MsiExec.exe /X{7667C543-084F-47F7-BC60-175FC25E9D6F}\"\n        },\n        {\n            \"displayName\": \"DaVinci Resolve\",\n            \"displayVersion\": \"17.4.20009\",\n            \"installDate\": \"20211215\",\n            \"installLocation\": \"\",\n            \"installSource\": \"C:\\\\Users\\\\nefar\\\\AppData\\\\Local\\\\Temp\\\\7zS41876E80\\\\\",\n            \"language\": \"1033\",\n            \"publisher\": \"Blackmagic Design\",\n            \"uninstallString\": \"MsiExec.exe /X{D407791D-9F95-4731-89BB-1BE70CB8A25F}\"\n        },\n        {\n            \"displayName\": \"Blackmagic RAW Common Components\",\n            \"displayVersion\": \"2.1\",\n            \"installDate\": \"20210321\",\n            \"installLocation\": \"\",\n            \"installSource\": \"C:\\\\Users\\\\nefar\\\\AppData\\\\Local\\\\Temp\\\\{66175DB2-488F-4AEA-B383-442619210E33}\\\\\",\n            \"language\": \"1033\",\n            \"publisher\": \"Blackmagic Design\",\n            \"uninstallString\": \"MsiExec.exe /I{FC105F36-D90B-4135-B954-F50CDCFACA3D}\"\n        }\n    ]\n}\n</code></pre></p>"},{"location":"projects/Vicius/Inja-Templates/#versioneq","title":"<code>versionEq</code>","text":"<p>Compares two version values (<code>X.X.X</code> and <code>X.X.X.X</code> formats supported).</p> <p>Returns true if both version match.</p> Parameter Pos. Description Mandatory 1 The left-hand-side version value to compare. Yes 2 The right-hand-side version value to compare. Yes"},{"location":"projects/Vicius/Inja-Templates/#versiongt","title":"<code>versionGt</code>","text":"<p>Compares two version values (<code>X.X.X</code> and <code>X.X.X.X</code> formats supported).</p> <p>Returns true if the left-hand-side version is greater than the right-hand-side version.</p> Parameter Pos. Description Mandatory 1 The left-hand-side version value to compare. Yes 2 The right-hand-side version value to compare. Yes"},{"location":"projects/Vicius/Inja-Templates/#versionlt","title":"<code>versionLt</code>","text":"<p>Compares two version values (<code>X.X.X</code> and <code>X.X.X.X</code> formats supported).</p> <p>Returns true if the left-hand-side version is lower than the right-hand-side version.</p> Parameter Pos. Description Mandatory 1 The left-hand-side version value to compare. Yes 2 The right-hand-side version value to compare. Yes"},{"location":"projects/Vicius/Inja-Templates/#exists","title":"<code>exists</code>","text":"<p>Checks if a give file (path) exists.</p> <p>Returns true if it exists, false otherwise.</p> Parameter Pos. Description Mandatory 1 The file path to check. Yes"},{"location":"projects/Vicius/Integrations/","title":"Integrations","text":""},{"location":"projects/Vicius/Integrations/#advanced-installer","title":"Advanced Installer","text":"<p>Add the updater executable to your setup file structure:</p> <p></p> <p>Add a <code>Launch installed file</code> Custom Action to the installation pipeline, provide the command line <code>--install --override-success-code 0</code> and deselect <code>Uninstall</code> and <code>Maintenance</code> conditions:</p> <p></p> <p>Add a <code>Launch installed file</code> Custom Action to the removal pipeline, provide the command line <code>--uninstall --override-success-code 0</code> and deselect <code>Install</code> and <code>Maintenance</code> conditions:</p> <p></p> <p>Now the updater will be part of the delivered product and get (de-)registered properly during the setup stage.</p>"},{"location":"projects/Vicius/Local-Configuration/","title":"Local Configuration","text":"<p>The local configuration can optionally be provided by shipping a <code>.json</code> file alongside the updater executable and simply giving it the same name as the executable.</p> <p>For example, having our updater called <code>nefarius_HidHide_Updater.exe</code> it will look for <code>nefarius_HidHide_Updater.json</code> within the same directory.</p> <p>Can be disabled on build</p> <p>The local configuration file is completely ignored if the updater has been built with <code>NV_FLAGS_NO_CONFIG_FILE</code> set in <code>CustomizeMe.h</code>!</p>"},{"location":"projects/Vicius/Local-Configuration/#authority-field","title":"<code>Authority</code> field","text":"<p>By default the update server holds a lot of power over the instance configuration. If you want shared values only to be read and applied from the provided local configuration you can set it to <code>Local</code>:</p> <pre><code>{\n    \"instance\": {\n        \"authority\": \"Local\" // the default value is \"Remote\", if omitted\n    }\n}\n</code></pre> <p>Now only values in the local <code>shared</code> section will apply and server-provided fields of the same name will be ignored.</p> <p>Carefully consider your design before altering this</p> <p>If you set the authority to <code>Local</code>, you will not be able to push corrections of the affected values later on the server-side. If you made a mistake in the configuration file shipped to the end-users, it will remain stuck until you e.g. publish an update that also delivers a new, corrected configuration file.</p>"},{"location":"projects/Vicius/Local-Configuration/#examples","title":"Examples","text":""},{"location":"projects/Vicius/Local-Configuration/#example-nefarius_hidhide_updaterjson-file","title":"Example <code>nefarius_HidHide_Updater.json</code> file","text":"<pre><code>{\n   \"instance\": {\n      \"serverUrlTemplate\": \"https://vicius.api.nefarius.systems/api/nefarius/HidHide/updates.json\",\n      \"authority\": \"Remote\"\n   },\n   \"shared\": {\n      \"windowTitle\": \"HidHide Updater\",\n      \"productName\": \"Nefarius HidHide\",\n      \"detectionMethod\": \"RegistryValue\",\n      \"detection\": {\n         \"hive\": \"HKLM\",\n         \"key\": \"SOFTWARE\\\\Nefarius Software Solutions e.U.\\\\HidHide\",\n         \"value\": \"Version\"\n      }\n   }\n}\n</code></pre>"},{"location":"projects/Vicius/Logging/","title":"Logging","text":"<p>Anything that can go wrong will at some point go wrong. When that happens, the updater provides you with a ton of information via debug logging, which is always on by default (can be disabled on compilation though; set <code>NV_FLAGS_NO_LOGGING</code> in <code>CustomizeMe.h</code>).</p> <p>To observe the live logs I recommend using the tool DebugView++ since it offers some nice filtering options and other convenience features.</p> <p>Alternatively, you can also enable logging to file or raise the log level to get even more details.</p>"},{"location":"projects/Vicius/Logging/#examples","title":"Examples","text":""},{"location":"projects/Vicius/Product-Detection/","title":"Product Detection","text":"<p>Besides the Server Discovery the 2nd most important mandatory configuration block is how the updater can detect the local product it governs and how to determine if it is outdated or not. These settings can be provided either by the local or remote configuration. The following detection mechanisms are currently implemented.</p>"},{"location":"projects/Vicius/Product-Detection/#detection-methods","title":"Detection methods","text":""},{"location":"projects/Vicius/Product-Detection/#registryvalue","title":"<code>RegistryValue</code>","text":"<p>The product version is queried from a Registry location.</p> <p>The value to query must be a string of of type <code>REG_SZ</code>.</p> Field Description Mandatory <code>view</code> The Alternate Registry View to use if a 32-Bit updater process needs to read a 64-Bit key and vice versa. Only useful if the updater architecture differs from the installed product architecture (e.g. the product is a 32-Bit installation and the updater is a 64-Bit build). In most cases it should be avoided to mix architectures and simply use the value <code>Default</code>. Possible values are: <ul><li><code>Default</code> - Doesn't alter default behaviour.</li><li><code>WOW64_64KEY</code> - Access a 64-bit key from either a 32-bit or 64-bit application.</li><li><code>WOW64_32KEY</code> - Access a 32-bit key from either a 32-bit or 64-bit application.</li></ul> Yes <code>hive</code> The hive to search in. Possible values are: <ul><li><code>HKCU</code> for <code>HKEY_CURRENT_USER</code></li><li><code>HKLM</code> for <code>HKEY_LOCAL_MACHINE</code></li><li><code>HKCR</code> for <code>HKEY_CLASSES_ROOT</code></li></ul> Yes <code>key</code> The sub-key path under the specified hive. For example <code>SOFTWARE\\Nefarius Software Solutions e.U.\\HidHide</code>. Yes <code>value</code> The <code>REG_SZ</code> (string) value to read. For example <code>Version</code>. Yes"},{"location":"projects/Vicius/Product-Detection/#fileversion","title":"<code>FileVersion</code>","text":"<p>Reads the VERSIONINFO resource of a given file where the <code>FileVersion</code> (or <code>ProductVersion</code>) will get compared to the release's <code>detectionVersion</code> field provided by the server.</p> Field Description Mandatory <code>input</code> The absolute path or the inja template resolve the path to the client file to read. Yes <code>statement</code> The version resource statement to read. Possible values are: <ul><li><code>FILEVERSION</code> - The binary version number for the file.</li><li><code>PRODUCTVERSION</code> - The binary version number for the product with which the file is distributed. This is the default, if omitted.</li></ul> No <code>data</code> A dictionary/map of the data used in the template. No"},{"location":"projects/Vicius/Product-Detection/#filesize","title":"<code>FileSize</code>","text":"<p>Reads a file's size (in bytes) and compares it to the release's <code>detectionSize</code> field provided by the server. If the local size doesn't match the release size the product is flagged as outdated.</p> Field Description Mandatory <code>input</code> The absolute path or the inja template resolve the path to the client file to read. Yes <code>data</code> A dictionary/map of the data used in the template. No"},{"location":"projects/Vicius/Product-Detection/#filechecksum","title":"<code>FileChecksum</code>","text":"<p>Computes a file's hash/checksum via the algorithm specified in the release and compares it to the <code>detectionChecksum.checksum</code> field. If the locally computed hash doesn't match the release hash (case-insensitive) the product is flagged as outdated.</p> Field Description Mandatory <code>input</code> The absolute path or the inja template resolve the path to the client file to read. Yes <code>data</code> A dictionary/map of the data used in the template. No"},{"location":"projects/Vicius/Product-Detection/#customexpression","title":"<code>CustomExpression</code>","text":"<p>Evaluates a custom inja expression to determine the state.</p> <p>Returning <code>true</code> indicates the product is considered outdated, return <code>false</code> otherwise.</p> Field Description Mandatory <code>input</code> The inja template to evaluate on the client. Yes <code>data</code> A dictionary/map of the data used in the template. No <p>Access to data in your expression</p> <p>You can use three pre-defined variables in your template/expression: - <code>merged</code> holds the shared configuration state of the client - <code>remote</code> holds the server response and - <code>parameters</code> holds what the server provided in the <code>data</code> field.</p>"},{"location":"projects/Vicius/Product-Detection/#fixedversion","title":"<code>FixedVersion</code>","text":"<p>Overrides the detected version with a fixed version string.</p> Field Description Mandatory <code>version</code> The version string. Yes"},{"location":"projects/Vicius/Remote-Configuration/","title":"Remote Configuration","text":"<p>The updater expects a JSON response from the update server; you can find various implementation details and examples below. The updater as a client is quite resilient; every property/field marked as optional/nullable can be omitted entirely in the response. In theory you don't even need to provide any releases in the response, just make it an empty array and you're good to go.</p>"},{"location":"projects/Vicius/Remote-Configuration/#json-schema","title":"JSON Schema","text":"<p>The current master branch update response schema is provided here.</p>"},{"location":"projects/Vicius/Remote-Configuration/#c-poco","title":"C# POCO","text":"<p>The response types (classes, enums) are available via the example server implementation.</p>"},{"location":"projects/Vicius/Remote-Configuration/#c-models","title":"C++ models","text":"<p>You can find the C++ types used here.</p>"},{"location":"projects/Vicius/Remote-Configuration/#swagger-api-documentation","title":"Swagger API documentation","text":"<p>Check out the Swagger documentation for the example implementations.</p>"},{"location":"projects/Vicius/Remote-Configuration/#hosted-examples","title":"Hosted examples","text":"<p>An ever growing collection of example configurations is hosted here.</p>"},{"location":"projects/Vicius/Server-Discovery/","title":"Server Discovery","text":"<p>The single most important setting that at least needs to be customized is the URL to your web server which delivers the update configuration file. The following possibilities are offered to you to choose from.</p>"},{"location":"projects/Vicius/Server-Discovery/#configuration-options","title":"Configuration options","text":""},{"location":"projects/Vicius/Server-Discovery/#make-your-own-custom-build","title":"Make your own custom build","text":"<p>Check out the projects source code, edit the <code>NV_API_URL_TEMPLATE</code> value in <code>CustomizeMe.h</code> and build your very own copy of the updater. Done!</p> <p>Consider signing your executable</p> <p>Consider signing the resulting binary with your (company's) code signing certificate.</p>"},{"location":"projects/Vicius/Server-Discovery/#provide-and-ship-a-configuration-file","title":"Provide and ship a configuration file","text":"<p>Assuming your final updater executable name being <code>nefarius_HidHide_Updater.exe</code> you can create and package a JSON file called <code>nefarius_HidHide_Updater.json</code> to be delivered alongside your product setup. As long as the file contents are valid JSON and the name matches the updater executable, that's all you need to do!</p> <p>Minimal nefarius_HidHide_Updater.json example</p> <pre><code>{\n    \"instance\": {\n        \"serverUrlTemplate\": \"https://vicius.api.nefarius.systems/api/example/updates.json\"\n    }\n}\n</code></pre> <p>Protect the JSON file properly</p> <p>Make sure to deliver both the executable and the configuration file to a location on the target machine that is not writable to non-elevated users (e.g. some sub-directory of <code>Program Files</code> or similar). Bear in mind that any other (malicious) process running in the user context can edit the configuration file if you place the updater in e.g. the <code>%LOCALAPPDATA%</code> folder.</p>"},{"location":"projects/Vicius/Server-Discovery/#edit-the-string-table-resource","title":"Edit the string table resource","text":"<p>Can be disabled during build</p> <p>This method will not work if the updater binary is built with <code>NV_FLAGS_NO_SERVER_URL_RESOURCE</code> set in <code>CustomizeMe.h</code>!</p> <p>If you wish to both avoid compiling your own binary and shipping a configuration file, you can use Resource Hacker on the updater executable and edit the string table entry <code>105</code> as seen below:</p> <p></p> <p>Doing so will break the executable signature</p> <p>If you use this method, beware that this will invalidate the signature of the executable. Consider re-signing the resulting binary, if possible or avoid this method altogether.</p>"},{"location":"projects/Vicius/Terminate-Process-before-Update/","title":"Process Termination on Update","text":"<p>If the user chooses to install an update, the updater will terminate the specified process if <code>--terminate-process-before-update &lt;handle&gt;</code> is passed on the command line; this is intended for when the updater is launched by the product that is being updated.</p> <p>This handle:</p> <ul> <li>MUST be a Win32 <code>HANDLE</code></li> <li>MUST have <code>PROCESS_TERMINATE | PROCESS_QUERY_LIMITED_INFORMATION</code> permissions</li> <li>MUST be inheritable, and owned by the updaters' parent process</li> <li>MUST NOT be a pseudo-handle, e.g. you can not directly use the return value of <code>GetCurrentProcess()</code></li> </ul> <p>For example, you can create the handle with:</p> <pre><code>HANDLE handle {};\nDuplicateHandle(\n    GetCurrentProcess(),\n    GetCurrentProcess(),\n    GetCurrentProcess(),\n    &amp;handle,\n    PROCESS_TERMINATE | PROCESS_QUERY_LIMITED_INFORMATION,\n    /* inheritable = */ true,\n    /* flags = */ 0);\n</code></pre> <p>You must also specify that handles are inherited when calling <code>CreateProcess()</code> to launch the updater.</p>"},{"location":"projects/Vicius/ZIP-Archives/","title":"ZIP Archives","text":"<p>ZIP archive updates are intended for 'portable' software, which you extract and run without an installer. If your software has an installer, it is strongly recommended that you package your updates as an installer too.</p>"},{"location":"projects/Vicius/ZIP-Archives/#usage-and-requirements","title":"Usage and Requirements","text":"<p>To use, just put the ZIP address as the <code>downloadUrl</code> in your configuration.</p> <p>The ZIP file:</p> <ul> <li>must be an actual ZIP file, i.e. not 7-zip, tarball, WinRAR, etc.</li> <li>will be extracted verbatim in the same folder as your executable; this means that <code>foo.zip</code> should contain <code>foo.exe</code> in its' root, not <code>foo/foo.exe</code></li> </ul> <p>By default:</p> <ul> <li>files that are not in the ZIP will not be modified</li> <li>files that already exist will be overwritten by the version in the ZIP</li> </ul> <p>See Customizing Behavior for how to change to change this.</p>"},{"location":"projects/Vicius/ZIP-Archives/#warnings","title":"Warnings","text":"<p>If you launch the updater from your executable, you will probably want to use the <code>--terminate-process-before-update</code> option.</p> <p>If you include the updater in your zip, you will need to handle updating the updater; there are two ways to do this:</p> <ul> <li>Recommended: set the <code>runAsTemporaryCopy</code> option to <code>true</code></li> <li>set the updater disposition to <code>CreateIfAbsent</code> (see below)</li> </ul> <p>If you do not do either, installing your update will fail when attempting to replace the updater, as the file will be in use.</p>"},{"location":"projects/Vicius/ZIP-Archives/#customizing-behavior","title":"Customizing Behavior","text":"<p>By default:</p> <ul> <li>files that are not in the ZIP will not be modified</li> <li>files that already exist will be overwritten by the version in the ZIP</li> </ul> <p>For both the default and individual paths, you can choose between:</p> <ul> <li><code>CreateOrReplace</code>: the path is always created/updated</li> <li><code>CreateIfAbsent</code>: the path is created if not present, but left alone if it's already there</li> <li><code>DeleteIfPresent</code>: the path is deleted if present; there is no error if it is absent</li> </ul> <p>You can change the default with the <code>zipExtractDefaultFileDisposition</code> configuration option, or change it for specific paths with the <code>zipExtractFileDispositionOverrides</code> key; for example:</p> <pre><code>{\n    \"releases\": [\n        {\n            \"name\": \"My Tool\",\n            \"version\": \"2024.7.18\",\n            \"summary\": \"Blah blah blah\",\n            \"publishedAt\": \"2024-07-18T13:15:35Z\",\n            \"downloadUrl\": \"https://example.com/example.zip\",\n            \"zipExtractDefaultFileDisposition\": \"CreateOrReplace\",\n            \"zipExtractFileDispositionOverrides\": {\n                \"My-Obsolete-Helper.exe\": \"DeleteIfPresent\",\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"projects/Vicius/Examples/Help-Page/","title":"Help Page","text":"<p>To be continued...</p>"},{"location":"projects/Vicius/Examples/Landing-Page/","title":"Example Landing Page","text":"<p>Hello there! If you're wondering why this page just opened in your face; you've probably run a demo-build of the V\u012bc\u012dus Updater Project \ud83d\ude00</p> <p>The configuration fetched by it is instructed to display this page on start-up!</p> <p>If you have no idea what any of this means; just delete the executable you just ran and close the browser window \ud83d\udc4b</p> <p>If you're a developer being curious about the V\u012bc\u012dus Updater Project; you came to the right place, keep on reading this documentation! Cya around \ud83c\udfc3\u200d\u2640\ufe0f</p>"},{"location":"projects/VirtuaLED/","title":"About VirtuaLED","text":"<p>April Fools' Joke</p> <p>This article was published as an April Fools' Joke of 2024, it does not cover a real product.</p> <p>Windows device driver and control software for virtual RGB LEDs.</p>"},{"location":"projects/VirtuaLED/#problem","title":"Problem","text":"<p>It is a well known fact that gamers like customizable RGB lights since they have been scientifically proven to boost FPS by up to 15 frames and help with your shooter aim skills by 4 to 12 percent. Your gaming buddies might even label you gloomy or narrow-minded if you aren't part of the shiny rainbow desktop gang so it boosts social standing as well.</p> <p>But what to do if there's no rainbow-capable hardware in your budget or you simply do not want to replace perfectly good, yet dated and non-RGB gaming hardware? Accept the shaming of society? Simply lie to your friends and hope they will never leave their basement and visit in person? Maybe the next pandemic is around the corner and you can use it as an excuse to hide your gaming rig from your buddies to avoid heckling? Stand your grounds and claim RGB is \"gay\" as an excuse for your dark PC interior? We both know you couldn't handle the backlash and social pressure coming from it, you'd rather prefer a technical solution.</p>"},{"location":"projects/VirtuaLED/#solution","title":"Solution","text":"<p>Worry not though; this is where VirtuaLED is here to help! VirtuaLED is a software package consisting of a kernel driver and a GUI application for Microsoft Windows that provides the user with a configurable amount of virtual RGB LEDs. No need to purchase new RGB-enabled RAM modules, new flickering CPU fans or other desktop tower internals; the software got you covered! The virtual LEDs it creates can then be configured with any of the popular RGB control tools out there, including:</p> <ul> <li>Corsair iCUE</li> <li>Kingston Fury Ctrl</li> <li>Signal RGB</li> <li>Open RGB</li> <li>RGB Fusion 2.0</li> <li>JackNet RGB Sync</li> <li>MSI Mystic Light</li> <li>Razer Chroma RGB</li> <li>ASRock Polychrome Sync</li> <li>Logitech G Hub</li> <li>HyperX NGENUITY</li> <li>EVGA Precision X1</li> </ul> <p>and more as the project matures! Any combination of color, on duration and temperature is supported. Now you can outshine your gaming buddies! VirtuaLED is freeware so no need to worry about additional spending.</p>"},{"location":"projects/VirtuaLED/#release","title":"Release","text":"<p>The global availability of VirtuaLED is planned for the 1st of April 2025.</p>"},{"location":"projects/VirtualPad/","title":"About Nefarius VirtualPad Framework","text":"<p>Nefarius VirtualPad is a commercial framework for gaming peripherals emulation available to business partners of Nefarius Software Solutions e.U.</p>"},{"location":"projects/VirtualPad/Runtime/","title":"About Nefarius VirtualPad Runtime","text":"<p>TBD</p>"},{"location":"projects/VirtualPad/Runtime/Changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"projects/VirtualPad/Runtime/Changelog/#unreleased","title":"Unreleased","text":"<p>None.</p>"},{"location":"projects/VirtualPad/Runtime/Changelog/#21160-2024-06-17","title":"2.116.0 - 2024-06-17","text":""},{"location":"projects/VirtualPad/Runtime/Changelog/#changed","title":"Changed","text":"<ul> <li>Removed some helper executables from the installer that got false-flagged by some anti-virus garbage solutions for some users.<ul> <li>VirusTotal report (it's clean, IDK what it hallucinates about \ud83d\ude44)</li> </ul> </li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#21140-2024-04-17","title":"2.114.0 - 2024-04-17","text":""},{"location":"projects/VirtualPad/Runtime/Changelog/#changed_1","title":"Changed","text":"<ul> <li>Updated all dependencies in setup, service and notification components to their respective latest versions.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#21120-2024-02-14","title":"2.112.0 - 2024-02-14","text":""},{"location":"projects/VirtualPad/Runtime/Changelog/#changed_2","title":"Changed","text":"<ul> <li>Updated all dependencies in setup, driver, runtime, service and notification components to their respective latest versions.</li> <li>Introduced some DRM improvements to further reduce the potential for service interruptions.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#21100-2024-01-14","title":"2.110.0 - 2024-01-14","text":""},{"location":"projects/VirtualPad/Runtime/Changelog/#changed_3","title":"Changed","text":"<ul> <li>Switched server services to be provided from single VPS over to Kubernetes Cluster.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#21090-2023-12-30","title":"2.109.0 - 2023-12-30","text":""},{"location":"projects/VirtualPad/Runtime/Changelog/#changed_4","title":"Changed","text":"<ul> <li>Updated all installer dependencies to their respective latest version.</li> <li>Introduced a fallback HTTP client to use in the installer if the resilience logic failed for some reason.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#fixed","title":"Fixed","text":"<ul> <li>A bug that could halt the setup if a pre-existing service binary was somehow corrupted.</li> <li>A bug that could halt the setup if loading the EULA text failed.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#21030-2023-12-11","title":"2.103.0 - 2023-12-11","text":""},{"location":"projects/VirtualPad/Runtime/Changelog/#added","title":"Added","text":"<ul> <li>Driver and runtime version <code>2.48.0</code>.</li> <li>New API to submit custom USB Control Request Responses via SDK (currently used to customize the serial number a virtual Xbox 360 device reports).</li> <li>Async overloads for device creating in the managed .NET SDK.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#changed_5","title":"Changed","text":"<ul> <li>State-machine for keeping track of virtual devices got rewritten and streamlined for simpler debugging and better stability.</li> <li>Introduced usage of non-executable non-pagable kernel memory on supported systems.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Changelog/#fixed_1","title":"Fixed","text":"<ul> <li>A bug that could lead to a system crash (BSOD) when switching between emulated devices due to improper reference counting.</li> <li>A bug that could lead to a system crash (BSOD) when Driver Verifier with Handle Tracking was enabled on the affected machine.</li> <li>A bug that could lead to a system crash (BSOD) when formatting a string that was missing enough space for the NULL terminator.</li> </ul>"},{"location":"projects/VirtualPad/Runtime/Collecting-Traces/","title":"Collecting Runtime Trace Logs","text":""},{"location":"projects/VirtualPad/Runtime/Collecting-Traces/#preparations","title":"Preparations","text":"<p>Only necessary once</p> <p>If you've performed this step once before on this PC, you can skip it!</p> <p>Download the file <code>nssvpd_debugging.reg</code> to some arbitrary location on your PC and execute it. Confirm the upcoming dialogs and reboot once (important)!</p>"},{"location":"projects/VirtualPad/Runtime/Collecting-Traces/#remote-collection-driver-and-runtime","title":"Remote Collection, Driver and Runtime","text":"<p>Open a PowerShell/Windows Terminal as Administrator. If unsure how to do: consult a search engine of your choice \ud83d\ude09</p> <p>Now copy and paste the following lines verbatim into the shell and press Enter:</p> <pre><code>New-EtwTraceSession -Name VPadRuntime -LogFileMode 0x8100 -FlushTimer 1 -LocalFilePath \"C:\\VPadRuntime.etl\" 2&gt;&amp;1 | Out-Null\nAdd-EtwTraceProvider -SessionName VPadRuntime -Guid '{021B2C3C-9DD6-4C0A-A53A-6183F1BE11A0}' -MatchAnyKeyword 0x0FFFFFFFFFFFFFFF -Level 0xFF -Property 0x40 2&gt;&amp;1 | Out-Null\nAdd-EtwTraceProvider -SessionName VPadRuntime -Guid '{AFEBAD70-D5DB-4A74-BDA2-764D2A875AAF}' -MatchAnyKeyword 0x0FFFFFFFFFFFFFFF -Level 0xFF -Property 0x40 2&gt;&amp;1 | Out-Null\n</code></pre> <p>These commands don't return anything!</p> <p>You will not get any output when entering the commands, that is on purpose and fine, not an error.</p> <p>\ud83d\udc49 You can now perform the action which causes the problem!</p> <p>When done, in the same shell window, copy and paste the following with an additional Enter key press:</p> <pre><code>Remove-EtwTraceSession -Name VPadRuntime 2&gt;&amp;1 | Out-Null\n</code></pre> <p>Now compress (7zip, WinRAR, ...) the generated file <code>C:\\VPadRuntime.etl</code> and send it to support personnel!</p>"},{"location":"projects/VirtualPad/Runtime/FAQ/","title":"Frequently Asked Questions","text":"<p>An ever growing collection of frequently asked questions and their respective answers \ud83d\ude43</p>"},{"location":"projects/VirtualPad/Runtime/FAQ/#where-to-find-error-details-if-the-installation-failed","title":"Where to find error details if the installation failed?","text":"<p>Open the <code>Event Viewer</code> application. You can find it by e.g. a start menu search like seen here:</p> <p></p> <p>Next, expand the node <code>Windows Logs</code> and select the <code>Application</code> log.</p> <p>By default, there is way too much information displayed we do not need, so select <code>Filter Current Log...</code> on the right-side panel:</p> <p></p> <p>On the upcoming dialog, expand the <code>Event sources</code> box and check every element prefixed with <code>Nefarius Virtual...</code>:</p> <p></p> <p>Click the <code>Critical</code> and <code>Error</code> event levels so we get less noise:</p> <p></p> <p>Now the list should have shrunk down significantly. Now on the right-side panel select <code>Save Filtered Log File As...</code>:</p> <p></p> <p>Select a location where to store the export file to and when asked about the Display Information, make sure to select <code>English</code> languages (may be one or two entries only):</p> <p></p> <p>You can now share the generated <code>.evtx</code> file and <code>LocaleMetaData</code> directory with support personnel. It's best to compress them using e.g. 7zip or WinRAR or similar to have one single file to share.</p> <p>If the resulting file is too big to be shared on Discord, upload it here and share the link instead.</p> <p>Good luck!</p>"},{"location":"projects/VirtualPad/Runtime/Live-View-Traces/","title":"Live View","text":""},{"location":"projects/VirtualPad/Runtime/Live-View-Traces/#runtime-only","title":"Runtime only","text":"<p>This topic is for developers</p> <p>If you've been sent this link, chances are that you do not need to follow this article!</p> <p>Download and install TraceView Plus and launch it as Administrator.</p> <p>Open the <code>Session</code> menu and select <code>Trace Provider...</code>:</p> <p></p> <p>In the upcoming dialog, choose <code>Add Provider</code>:</p> <p></p> <p>In the presented list, select the <code>Nefarius VirtualPad Runtime</code> entry and click OK:</p> <p></p> <p>Clock OK again:</p> <p></p> <p>Now click the little green \"Plus\" icon on top:</p> <p></p> <p>You should now see <code>Starting trace session.</code> in the lower panel:</p> <p></p> <p>Now the trace is running and collecting events from the runtime, example below:</p> <p></p>"},{"location":"projects/WireShock/","title":"About WireShock","text":"<p>WireShock was a kernel-mode USB driver providing a custom Bluetooth stack for USB Bluetooth dongles to support Sony PlayStation 3 Controllers on Windows. It was in development from May 2018 to October 2018 until it got archived in favour of better solutions. Its direct successor is BthPS3.</p> <p>The driver is a C-port of the C# implementation used in ScpToolkit and therefore \"occupies\" an entire Bluetooth dongle (radio) to function, making it impossible to use with conventional Bluetooth device (headphones, mice, ...) until uninstalled.</p> <p>It is not advised to use WireShock due to missing support and potentially remaining issues in design and code. No stable or pre-release binaries have ever been released or signed.</p>"},{"location":"research/","title":"Research area","text":"<p>Hello! \ud83d\udc4b</p> <p>This is a general-purpose section where mixed content ends up that doesn't really fall into a specific category. Think of it as a very chaotic wiki/knowledge-base for stuff you probably never need \ud83d\ude01</p>"},{"location":"research/ASUS-PG278Q-Monitor-on-Linux/","title":"ASUS PG278Q Monitor on Linux","text":"<p>The action in this article have been conducted under the following conditions:</p> Property Value Date March 2024 Kernel 5.15.0-101-generic Distribution Linux Mint 21.3 Virginia"},{"location":"research/ASUS-PG278Q-Monitor-on-Linux/#problem","title":"Problem","text":"<p>I am running a dual-monitor setup with the ASUS ROG Swift 27\" 1440P Gaming Monitor (PG278Q) as my primary display and have been quite satisfied with it for many years. In a recent adventure of installing Linux Mint 21.3 I suddenly was confronted with a couple of problems. First I tried it on my AMD Radeon 6900 XT on different DisplayPort connectors, and each time it was detected as an \"Unknown Display\" and could only display a meek 640x480 and 60Hz. I also temporarily tried an NVIDIA Quadro K2200, which didn't even produce any display at all. After some brief web searches I found some fellow sufferers reporting the same issue and a proposed solution. In short, some component in the Linux kernel (graphics driver, firmware?) isn't able to read the EDID of the monitor, so the system doesn't know the modes supported by the plugged in device. The post is unfortunately incomplete and misleading, hence the need for this article.</p>"},{"location":"research/ASUS-PG278Q-Monitor-on-Linux/#solution","title":"Solution","text":"<p>Thankfully we can assist the kernel by providing the EDID binary blob ourselves! The following steps are tailored towards users of GRUB2 so depending on your distribution they might not apply 1:1.</p>"},{"location":"research/ASUS-PG278Q-Monitor-on-Linux/#add-edid-to-boot-image","title":"Add EDID to boot image","text":"<p>We need to make sure that the EDID content (which would normally be queried directly from the monitor) is available to the kernel during boot.</p> <ul> <li>Download the PG278Q.bin and copy it to <code>/usr/lib/firmware/edid</code>   (you might need to create the directory first)</li> <li>Create a new shell script at <code>/etc/initramfs-tools/hooks/edid</code> with the following content: <pre><code>#!/bin/sh\nif [ -d /lib/firmware/edid ]; then\n  cp -r --parents /lib/firmware/edid ${DESTDIR}\nfi\n</code></pre></li> <li>Make it executable: <pre><code>sudo chmod +x /etc/initramfs-tools/hooks/edid\n</code></pre></li> <li>Update the boot image (this will make the EDID file available during boot): <pre><code>sudo update-initramfs -u\n</code></pre></li> </ul>"},{"location":"research/ASUS-PG278Q-Monitor-on-Linux/#configure-displayport-to-use-edid-file","title":"Configure DisplayPort to use EDID file","text":"<p>Now for the tricky part; how to configure the correct DisplayPort connector to use the EDID file. This sounds simple in practice but can get rather tricky, especially in multi-GPU setups. Online resources simply recommend to use <code>xrandr</code> to look for the port with only the one <code>640x480</code> available mode (for example on <code>DisplayPort-0</code>). These names and indices do not necessarily correspond to the connector name we need to configure kernel parameters with though!</p> <p>Here's a reliable way to find the correct connector:</p> <ul> <li>Unplug the monitor (if you do not have a 2nd monitor, you can run these steps via SSH as well)</li> <li>Get a list of all ports and their status: <pre><code>find /sys/devices -name \"edid\" | awk -F/ -vOFS=/ 'NF-=1' | xargs -I{} sh -c 'echo -n {}:\" \" &amp;&amp; cat \"{}\"/status'\n</code></pre><ul> <li>This might produce output similar to: <pre><code>/sys/devices/pci0000:00/0000:00:03.2/0000:0d:00.0/drm/card0/card0-HDMI-A-1: disconnected\n/sys/devices/pci0000:00/0000:00:03.2/0000:0d:00.0/drm/card0/card0-DP-2: connected\n/sys/devices/pci0000:00/0000:00:03.2/0000:0d:00.0/drm/card0/card0-DP-3: disconnected\n/sys/devices/pci0000:00/0000:00:03.2/0000:0d:00.0/drm/card0/card0-DP-1: disconnected\n</code></pre></li> </ul> </li> <li>Now plug in the monitor and run the snippet again. You should now see one of the entries (e.g. <code>card0-DP-1</code>) change from <code>disconnected</code> to <code>connected</code>, so <code>DP-1</code> is the value we need!</li> <li>Armed with that knowledge edit <code>/etc/default/grub</code>, modify the line <code>GRUB_CMDLINE_LINUX_DEFAULT</code> and append <code>drm.edid_firmware=DP-1:edid/PG278Q.bin video=DP-1:e\"</code> where DP-1 matches whatever your particular connector name is.</li> <li>Update GRUB: <pre><code>sudo update-grub\n</code></pre></li> </ul> <p>Now time for a reboot and you should be able to enjoy the full set of 1440p @ 144Hz again!</p>"},{"location":"research/CORSAIR-GLAIVE-RGB-native-HID-Report-Descriptor/","title":"CORSAIR GLAIVE RGB native HID Report Descriptor","text":"<p>Byte array</p> <pre><code>0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)\n0x09, 0x02,        // Usage (Mouse)\n0xA1, 0x01,        // Collection (Application)\n0x85, 0x01,        //   Report ID (1)\n0x09, 0x01,        //   Usage (Pointer)\n0xA1, 0x00,        //   Collection (Physical)\n0x05, 0x09,        //     Usage Page (Button)\n0x19, 0x01,        //     Usage Minimum (0x01)\n0x29, 0x20,        //     Usage Maximum (0x20)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x95, 0x20,        //     Report Count (32)\n0x75, 0x01,        //     Report Size (1)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x30,        //     Usage (X)\n0x09, 0x31,        //     Usage (Y)\n0x16, 0x01, 0x80,  //     Logical Minimum (-32767)\n0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x02,        //     Report Count (2)\n0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x38,        //     Usage (Wheel)\n0x15, 0x81,        //     Logical Minimum (-127)\n0x25, 0x7F,        //     Logical Maximum (127)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              //   End Collection\n0xC0,              // End Collection\n0x05, 0x0C,        // Usage Page (Consumer)\n0x09, 0x01,        // Usage (Consumer Control)\n0xA1, 0x01,        // Collection (Application)\n0x85, 0x02,        //   Report ID (2)\n0x05, 0x0C,        //   Usage Page (Consumer)\n0x19, 0x00,        //   Usage Minimum (Unassigned)\n0x2A, 0x3C, 0x02,  //   Usage Maximum (AC Format)\n0x15, 0x00,        //   Logical Minimum (0)\n0x26, 0xFF, 0x0F,  //   Logical Maximum (4095)\n0x75, 0x10,        //   Report Size (16)\n0x95, 0x02,        //   Report Count (2)\n0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              // End Collection\n0x06, 0xC1, 0xFF,  // Usage Page (Vendor Defined 0xFFC1)\n0x09, 0x02,        // Usage (0x02)\n0xA1, 0x01,        // Collection (Application)\n0x85, 0x03,        //   Report ID (3)\n0x15, 0x00,        //   Logical Minimum (0)\n0x26, 0xFF, 0x00,  //   Logical Maximum (255)\n0x09, 0x02,        //   Usage (0x02)\n0x95, 0x3F,        //   Report Count (63)\n0x75, 0x08,        //   Report Size (8)\n0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              // End Collection\n0x06, 0xC2, 0xFF,  // Usage Page (Vendor Defined 0xFFC2)\n0x09, 0x03,        // Usage (0x03)\n0xA1, 0x01,        // Collection (Application)\n0x85, 0x0E,        //   Report ID (14)\n0x15, 0x00,        //   Logical Minimum (0)\n0x26, 0xFF, 0x00,  //   Logical Maximum (255)\n0x95, 0x3F,        //   Report Count (63)\n0x75, 0x08,        //   Report Size (8)\n0x09, 0x03,        //   Usage (0x03)\n0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              // End Collection\n0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)\n0x09, 0x06,        // Usage (Keyboard)\n0xA1, 0x01,        // Collection (Application)\n0x85, 0x10,        //   Report ID (16)\n0x05, 0x07,        //   Usage Page (Kbrd/Keypad)\n0x19, 0xE0,        //   Usage Minimum (0xE0)\n0x29, 0xE7,        //   Usage Maximum (0xE7)\n0x15, 0x00,        //   Logical Minimum (0)\n0x25, 0x01,        //   Logical Maximum (1)\n0x75, 0x01,        //   Report Size (1)\n0x95, 0x08,        //   Report Count (8)\n0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x19, 0x00,        //   Usage Minimum (0x00)\n0x29, 0x97,        //   Usage Maximum (0x97)\n0x15, 0x00,        //   Logical Minimum (0)\n0x25, 0x01,        //   Logical Maximum (1)\n0x75, 0x01,        //   Report Size (1)\n0x95, 0x98,        //   Report Count (-104)\n0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              // End Collection\n\n// 172 bytes\n</code></pre>"},{"location":"research/How-to-check-architecture/","title":"How to check which architecture I'm running","text":"<p>Press the key combination Win+R enter <code>msinfo32</code> in the upcoming box and hit enter. Check out the System Type item:</p> <p></p> <p>X64-based means you need the 64-Bit (x64) variants of a driver, X86-based means 32-Bit (x86) is applicable. You can not mix these up, it will result in all sorts of errors.</p>"},{"location":"research/PDB-in-WinDbg-Session/","title":"Fix Symbol loading for Kernel Driver minidump analysis","text":""},{"location":"research/PDB-in-WinDbg-Session/#preparations","title":"Preparations","text":"<p>You need to have the exact same version of the driver binary (<code>.sys</code> file) and the debug information file (PDB) ready on the machine running the WinDbg session.</p>"},{"location":"research/PDB-in-WinDbg-Session/#debugging-session","title":"Debugging session","text":"<p>First, triple-check that you've got a local symbol cache configured and have the Microsoft Symbol Server referenced in the session:</p> <pre><code>.sympath cache*D:\\symbols;srv*https://msdl.microsoft.com/download/symbols\n</code></pre> <p>In this example, my local path where symbols get stored and looked up from is <code>D:\\symbols</code>, adjust to your system accordingly. Symbol loading can be sped up tremendously if you keep the same local cache path in between debugging sessions. Then turn on \"noisy symbol loading\" to get vital details about the symbol loading process:</p> <pre><code>!sym noisy\n</code></pre> <p>All set, now force reloading all symbols, this will spit out a great deal of diagnostics:</p> <pre><code>.reload /n /f\n</code></pre> <p>Once done, look for the first occurrence of a line similar to the following:</p> <pre><code>SYMSRV:  UNC: d:\\symbols\\mydriver.sys\\620F6CF740000\\mydriver.sys - path not found\n</code></pre> <p>Where <code>mydriver.sys</code> is replaced with the driver you're debugging. Create the directory structure <code>d:\\symbols\\mydriver.sys\\620F6CF740000\\</code> with PowerShell:</p> <pre><code>New-Item -Type Directory -Path \"d:\\symbols\\mydriver.sys\\620F6CF740000\\\"\n</code></pre> <p>Put the driver binary file <code>mydriver.sys</code> in this directory.</p> <p>Now we'll determine the location where the debugger will expect the PDB. We can get this information with the <code>symchk</code> tool (included in the Windows Driver SDK, typical location: <code>C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\x64</code>) in PowerShell:</p> <pre><code>[System.Environment]::SetEnvironmentVariable('_NT_SYMBOL_PATH','cache*D:\\symbols;srv*https://msdl.microsoft.com/download/symbols')\nsymchk /v /os \"D:\\symbols\\mydriver.sys\\620F6CF740000\\mydriver.sys\"\n</code></pre> <p>Look for the first occurrence of this line:</p> <pre><code>SYMSRV:  UNC: D:\\symbols\\mydriver.pdb\\BBFF36A8FA374D1DAD904AD5AFDD8B441\\mydriver.pdb - file not found\n</code></pre> <p>Yet again back in PowerShell, create this directory structure:</p> <pre><code>New-Item -Type Directory -Path \"D:\\symbols\\mydriver.pdb\\BBFF36A8FA374D1DAD904AD5AFDD8B441\\\"\n</code></pre> <p>Finally, place the PDB file in this directory.</p> <p>If you now run the <code>symchk</code> command again, the output should have changed to:</p> <pre><code>SYMSRV:  PATH: D:\\symbols\\mydriver.pdb\\BBFF36A8FA374D1DAD904AD5AFDD8B441\\mydriver.pdb\nSYMSRV:  RESULT: 0x00000000\n</code></pre> <p>Watch out for mismatched pdb</p> <p>If you also get a line similar to <pre><code>DBGHELP: D:\\symbols\\mydriver.pdb\\BBFF36A8FA374D1DAD904AD5AFDD8B441\\mydriver.pdb - mismatched pdb\n</code></pre> the PDB file used is the wrong version, most probably from a newer or older build and must be replaced with the correct one!</p> <p>Finally back in WinDbg we can invoke another symbol loading:</p> <pre><code>.reload /n /f\n</code></pre> <p>After these steps, the items in the call stack should be resolved to proper function names:</p> <pre><code>9: kd&gt; kc\n # Call Site\n00 nt!KeBugCheckEx\n01 Wdf01000!Mx::MxBugCheckEx\n02 Wdf01000!FxVerifierBugCheckWorker\n03 Wdf01000!FxVerifierNullBugCheck\n04 Wdf01000!imp_WdfObjectGetTypedContextWorker\n05 mydriver!WdfObjectGetTypedContextWorker\n06 mydriver!DeviceRequestContextGet\n07 mydriver!EvtRequestCompletionTimer\n08 Wdf01000!FxTimer::TimerHandler\n09 Wdf01000!FxTimer::_FxTimerWorkItemCallback\n0a Wdf01000!FxSystemWorkItem::WorkItemHandler\n0b Wdf01000!FxSystemWorkItem::_WorkItemThunk\n0c nt!IopProcessWorkItem\n0d nt!ExpWorkerThread\n0e nt!PspSystemThreadStartup\n0f nt!KiStartSystemThread\n</code></pre>"},{"location":"research/PDB-in-WinDbg-Session/#3rd-party-sources","title":"3rd party sources","text":"<ul> <li>PDB files out of the debugger</li> </ul>"},{"location":"research/SIXAXIS-native-HID-Report-Descriptor/","title":"SIXAXIS/DualShock 3 native HID Report Descriptor","text":"<p>A.k.a. the broken one that's in the firmware  </p> <p>Byte array</p> <pre><code>0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)\n0x09, 0x04,        // Usage (Joystick)\n0xA1, 0x01,        // Collection (Physical)\n0xA1, 0x02,        //   Collection (Application)\n0x85, 0x01,        //     Report ID (1)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n                   //     NOTE: reserved byte\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x13,        //     Report Count (19)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x01,        //     Physical Maximum (1)\n0x05, 0x09,        //     Usage Page (Button)\n0x19, 0x01,        //     Usage Minimum (0x01)\n0x29, 0x13,        //     Usage Maximum (0x13)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x0D,        //     Report Count (13)\n0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n                   //     NOTE: 32 bit integer, where 0:18 are buttons and 19:31 are reserved\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x01,        //     Usage (Pointer)\n0xA1, 0x00,        //     Collection (Undefined)\n0x75, 0x08,        //       Report Size (8)\n0x95, 0x04,        //       Report Count (4)\n0x35, 0x00,        //       Physical Minimum (0)\n0x46, 0xFF, 0x00,  //       Physical Maximum (255)\n0x09, 0x30,        //       Usage (X)\n0x09, 0x31,        //       Usage (Y)\n0x09, 0x32,        //       Usage (Z)\n0x09, 0x35,        //       Usage (Rz)\n0x81, 0x02,        //       Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n                   //       NOTE: four joysticks\n0xC0,              //     End Collection\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x27,        //     Report Count (39)\n0x09, 0x01,        //     Usage (Pointer)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xA1, 0x02,        //   Collection (Application)\n0x85, 0x02,        //     Report ID (2)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xA1, 0x02,        //   Collection (Application)\n0x85, 0xEE,        //     Report ID (238)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xA1, 0x02,        //   Collection (Application)\n0x85, 0xEF,        //     Report ID (239)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xC0,              // End Collection\n\n// 148 bytes\n</code></pre> <p>Source</p>"},{"location":"research/SIXAXIS-native-HID-Report-Descriptor/#sixaxissys","title":"SIXAXIS.SYS","text":""},{"location":"research/SIXAXIS-native-HID-Report-Descriptor/#hid-report-descriptor-1","title":"HID Report Descriptor #1","text":"<p>Byte array</p> <pre><code>0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)\n0x09, 0x04,        // Usage (Joystick)\n0xA1, 0x01,        // Collection (Application)\n0x09, 0x01,        //   Usage (Pointer)\n0xA1, 0x00,        //   Collection (Physical)\n0x05, 0x09,        //     Usage Page (Button)\n0x19, 0x01,        //     Usage Minimum (0x01)\n0x29, 0x18,        //     Usage Maximum (0x18)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x01,        //     Physical Maximum (1)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x18,        //     Report Count (24)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x39,        //     Usage (Hat switch)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x07,        //     Logical Maximum (7)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0x3B, 0x01,  //     Physical Maximum (315)\n0x65, 0x14,        //     Unit (System: English Rotation, Length: Centimeter)\n0x75, 0x04,        //     Report Size (4)\n0x95, 0x01,        //     Report Count (1)\n0x81, 0x42,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x04,        //     Report Count (4)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x30,        //     Usage (X)\n0x09, 0x31,        //     Usage (Y)\n0x09, 0x32,        //     Usage (Z)\n0x09, 0x35,        //     Usage (Rz)\n0x09, 0x36,        //     Usage (Slider)\n0x09, 0x36,        //     Usage (Slider)\n0x09, 0x33,        //     Usage (Rx)\n0x09, 0x34,        //     Usage (Ry)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x08,        //     Report Count (8)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)\n0x09, 0x01,        //     Usage (0x01)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)\n0x09, 0x01,        //     Usage (0x01)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x31,        //     Report Count (49)\n0xB1, 0x00,        //     Feature (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xC0,              // End Collection\n\n// 120 bytes\n</code></pre>"},{"location":"research/SIXAXIS-native-HID-Report-Descriptor/#hid-report-descriptor-2","title":"HID Report Descriptor #2","text":"<p>Byte array</p> <pre><code>0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)\n0x09, 0x04,        // Usage (Joystick)\n0xA1, 0x01,        // Collection (Application)\n0x09, 0x01,        //   Usage (Pointer)\n0xA1, 0x00,        //   Collection (Physical)\n0x05, 0x09,        //     Usage Page (Button)\n0x19, 0x01,        //     Usage Minimum (0x01)\n0x29, 0x0D,        //     Usage Maximum (0x0D)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x01,        //     Physical Maximum (1)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x0D,        //     Report Count (13)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x03,        //     Report Count (3)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x39,        //     Usage (Hat switch)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x07,        //     Logical Maximum (7)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0x3B, 0x01,  //     Physical Maximum (315)\n0x65, 0x14,        //     Unit (System: English Rotation, Length: Centimeter)\n0x75, 0x04,        //     Report Size (4)\n0x95, 0x01,        //     Report Count (1)\n0x81, 0x42,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x04,        //     Report Count (4)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x30,        //     Usage (X)\n0x09, 0x31,        //     Usage (Y)\n0x09, 0x32,        //     Usage (Z)\n0x09, 0x35,        //     Usage (Rz)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x66, 0x00, 0x00,  //     Unit (None)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x04,        //     Report Count (4)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x36,        //     Usage (Slider)\n0x09, 0x36,        //     Usage (Slider)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x02,        //     Report Count (2)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)\n0x09, 0x01,        //     Usage (0x01)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)\n0x09, 0x01,        //     Usage (0x01)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x31,        //     Report Count (49)\n0xB1, 0x00,        //     Feature (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xC0,              // End Collection\n\n// 141 bytes\n</code></pre>"},{"location":"research/SIXAXIS-native-HID-Report-Descriptor/#ps3-move-navigation-controller-native-hid-report-descriptor","title":"PS3 Move Navigation Controller native HID Report Descriptor","text":"<p>A.k.a. the broken one that's in the firmware  </p> <p>Byte array</p> <pre><code>0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)\n0x09, 0x04,        // Usage (Joystick)\n0xA1, 0x01,        // Collection (Application)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x01,        //     Report ID (1)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x13,        //     Report Count (19)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x01,        //     Physical Maximum (1)\n0x05, 0x09,        //     Usage Page (Button)\n0x19, 0x01,        //     Usage Minimum (0x01)\n0x29, 0x13,        //     Usage Maximum (0x13)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x0D,        //     Report Count (13)\n0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x01,        //     Usage (Pointer)\n0xA1, 0x00,        //     Collection (Physical)\n0x75, 0x08,        //       Report Size (8)\n0x95, 0x04,        //       Report Count (4)\n0x35, 0x00,        //       Physical Minimum (0)\n0x46, 0xFF, 0x00,  //       Physical Maximum (255)\n0x09, 0x30,        //       Usage (X)\n0x09, 0x31,        //       Usage (Y)\n0x09, 0x32,        //       Usage (Z)\n0x09, 0x35,        //       Usage (Rz)\n0x81, 0x02,        //       Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              //     End Collection\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x27,        //     Report Count (39)\n0x09, 0x01,        //     Usage (Pointer)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x02,        //     Report ID (2)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0xEE,        //     Report ID (-18)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0xEF,        //     Report ID (-17)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x30,        //     Report Count (48)\n0x09, 0x01,        //     Usage (Pointer)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xC0,              // End Collection\n\n// 148 bytes\n</code></pre> <p>Captured with USBPcap. Beautified with USB Descriptor and Request Parser.</p>"},{"location":"research/Sign-dotnet-assemblies-on-build/","title":"Sign .NET assemblies during build","text":"<p>Create a new file named <code>Directory.Build.props</code> next to your <code>.sln</code> file with the following content:</p> <pre><code>&lt;Project&gt;\n  &lt;Target Name=\"SignIntermediateAssembly\" BeforeTargets=\"GetCopyToOutputDirectoryItems\" Condition=\"'$(SignAssemblies)' == 'True'\"&gt;\n    &lt;Exec Command=\"signtool.exe sign /v /n &amp;quot;Nefarius Software Solutions e.U.&amp;quot; /tr http://timestamp.digicert.com /fd sha256 /td sha256 &amp;quot;%(IntermediateAssembly.FullPath)&amp;quot;\" /&gt;\n  &lt;/Target&gt;\n&lt;/Project&gt;\n</code></pre> <p>Add <code>/p:SignAssemblies=True</code> to your build/publish command, e.g.:</p> <pre><code>dotnet build -c Release /p:Platform=\"Any CPU\" /p:SignAssemblies=True\n</code></pre>"},{"location":"research/Virtual-VID-PID-used-by-NSS/","title":"Vendor and Product IDs used by NSS drivers","text":""},{"location":"research/Virtual-VID-PID-used-by-NSS/#vid-0x7331","title":"VID <code>0x7331</code>","text":"<p>This fake/unused Vendor ID is used by various projects when there's a need to not spoof any existing hardware IDs. Documented here to avoid duplicates.</p>"},{"location":"research/Virtual-VID-PID-used-by-NSS/#pid-0x0001","title":"PID <code>0x0001</code>","text":"<p>Custom vendor-defined HID device mode of DsHidMini used for DS4Windows compatibility.</p>"},{"location":"research/Virtual-VID-PID-used-by-NSS/#pid-0x0002","title":"PID <code>0x0002</code>","text":"<p>Custom <code>xinputhid.sys</code>-compatible XInput device mode of DsHidMini.</p>"},{"location":"research/Virtual-VID-PID-used-by-NSS/#pid-0x000a","title":"PID <code>0x000A</code>","text":"<p>Emulated vJoy-compatible Joystick in VirtualPad.</p>"},{"location":"research/nmake-in-PowerShell/","title":"Have MSBuild/nmake available in PowerShell","text":"<p>The following guide will modify all new PowerShell instances to run the required preparations to invoke MSBuild/nmake.</p> <p>Open (or create) the profile file <code>$PROFILE</code> and add the following content:</p>"},{"location":"research/vJoy-HID-Report-Descriptor/","title":"vJoy HID Report Descriptor","text":"<p>Just a dump of the full descriptor for future reference. Taken from the binaries of the last official commit and sniffed from the compiled binary.</p> <p>Byte array</p> <pre><code>0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)\n0x15, 0x00,        // Logical Minimum (0)\n0x09, 0x04,        // Usage (Joystick)\n0xA1, 0x01,        // Collection (Application)\n0x05, 0x01,        //   Usage Page (Generic Desktop Ctrls)\n0x85, 0x01,        //   Report ID (1)\n0x09, 0x01,        //   Usage (Pointer)\n0x15, 0x00,        //   Logical Minimum (0)\n0x26, 0xFF, 0x7F,  //   Logical Maximum (32767)\n0x75, 0x20,        //   Report Size (32)\n0x95, 0x01,        //   Report Count (1)\n0xA1, 0x00,        //   Collection (Physical)\n0x09, 0x30,        //     Usage (X)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x31,        //     Usage (Y)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x32,        //     Usage (Z)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x33,        //     Usage (Rx)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x34,        //     Usage (Ry)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x35,        //     Usage (Rz)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x36,        //     Usage (Slider)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x37,        //     Usage (Dial)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              //   End Collection\n0x75, 0x20,        //   Report Size (32)\n0x95, 0x04,        //   Report Count (4)\n0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x05, 0x09,        //   Usage Page (Button)\n0x15, 0x00,        //   Logical Minimum (0)\n0x25, 0x01,        //   Logical Maximum (1)\n0x55, 0x00,        //   Unit Exponent (0)\n0x65, 0x00,        //   Unit (None)\n0x19, 0x00,        //   Usage Minimum (0x00)\n0x29, 0x00,        //   Usage Maximum (0x00)\n0x75, 0x01,        //   Report Size (1)\n0x95, 0x00,        //   Report Count (0)\n0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x75, 0x80,        //   Report Size (-128)\n0x95, 0x01,        //   Report Count (1)\n0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x05, 0x0F,        //   Usage Page (PID Page)\n0x09, 0x92,        //   Usage (0x92)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x12,        //     Report ID (18)\n0x09, 0x9F,        //     Usage (0x9F)\n0x09, 0xA0,        //     Usage (0xA0)\n0x09, 0xA4,        //     Usage (0xA4)\n0x09, 0xA5,        //     Usage (0xA5)\n0x09, 0xA6,        //     Usage (0xA6)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x01,        //     Physical Maximum (1)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x05,        //     Report Count (5)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x95, 0x03,        //     Report Count (3)\n0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x94,        //     Usage (0x94)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x01,        //     Physical Maximum (1)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x01,        //     Report Count (1)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x07,        //     Report Size (7)\n0x95, 0x01,        //     Report Count (1)\n0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n0xC0,              //   End Collection\n0x09, 0x21,        //   Usage (0x21)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x11,        //     Report ID (17)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x25,        //     Usage (0x25)\n0xA1, 0x02,        //     Collection (Logical)\n0x09, 0x26,        //       Usage (0x26)\n0x09, 0x27,        //       Usage (0x27)\n0x09, 0x30,        //       Usage (0x30)\n0x09, 0x31,        //       Usage (0x31)\n0x09, 0x32,        //       Usage (0x32)\n0x09, 0x33,        //       Usage (0x33)\n0x09, 0x34,        //       Usage (0x34)\n0x09, 0x40,        //       Usage (0x40)\n0x09, 0x41,        //       Usage (0x41)\n0x09, 0x42,        //       Usage (0x42)\n0x09, 0x43,        //       Usage (0x43)\n0x09, 0x29,        //       Usage (0x29)\n0x25, 0x0C,        //       Logical Maximum (12)\n0x15, 0x01,        //       Logical Minimum (1)\n0x35, 0x01,        //       Physical Minimum (1)\n0x45, 0x0C,        //       Physical Maximum (12)\n0x75, 0x08,        //       Report Size (8)\n0x95, 0x01,        //       Report Count (1)\n0x91, 0x00,        //       Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //     End Collection\n0x09, 0x50,        //     Usage (0x50)\n0x09, 0x54,        //     Usage (0x54)\n0x09, 0x51,        //     Usage (0x51)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x7F,  //     Physical Maximum (32767)\n0x66, 0x03, 0x10,  //     Unit (System: English Linear, Time: Seconds)\n0x55, 0xFD,        //     Unit Exponent\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x03,        //     Report Count (3)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x55, 0x00,        //     Unit Exponent (0)\n0x66, 0x00, 0x00,  //     Unit (None)\n0x09, 0x52,        //     Usage (0x52)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x53,        //     Usage (0x53)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x08,        //     Logical Maximum (8)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x08,        //     Physical Maximum (8)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x55,        //     Usage (0x55)\n0xA1, 0x02,        //     Collection (Logical)\n0x05, 0x01,        //       Usage Page (Generic Desktop Ctrls)\n0x09, 0x30,        //       Usage (X)\n0x09, 0x31,        //       Usage (Y)\n0x15, 0x00,        //       Logical Minimum (0)\n0x25, 0x01,        //       Logical Maximum (1)\n0x75, 0x01,        //       Report Size (1)\n0x95, 0x02,        //       Report Count (2)\n0x91, 0x02,        //       Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //     End Collection\n0x05, 0x0F,        //     Usage Page (PID Page)\n0x09, 0x56,        //     Usage (0x56)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x95, 0x05,        //     Report Count (5)\n0x91, 0x03,        //     Output (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x57,        //     Usage (0x57)\n0xA1, 0x02,        //     Collection (Logical)\n0x0B, 0x01, 0x00, 0x0A, 0x00,  //       Usage (0x0A0001)\n0x0B, 0x02, 0x00, 0x0A, 0x00,  //       Usage (0x0A0002)\n0x66, 0x14, 0x00,  //       Unit (System: English Rotation, Length: Centimeter)\n0x55, 0xFE,        //       Unit Exponent\n0x15, 0x00,        //       Logical Minimum (0)\n0x26, 0xFF, 0x00,  //       Logical Maximum (255)\n0x35, 0x00,        //       Physical Minimum (0)\n0x47, 0xA0, 0x8C, 0x00, 0x00,  //       Physical Maximum (35999)\n0x66, 0x00, 0x00,  //       Unit (None)\n0x75, 0x08,        //       Report Size (8)\n0x95, 0x02,        //       Report Count (2)\n0x91, 0x02,        //       Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x55, 0x00,        //       Unit Exponent (0)\n0x66, 0x00, 0x00,  //       Unit (None)\n0xC0,              //     End Collection\n0x05, 0x0F,        //     Usage Page (PID Page)\n0x09, 0x58,        //     Usage (0x58)\n0xA1, 0x02,        //     Collection (Logical)\n0x0B, 0x01, 0x00, 0x0A, 0x00,  //       Usage (0x0A0001)\n0x0B, 0x02, 0x00, 0x0A, 0x00,  //       Usage (0x0A0002)\n0x26, 0xFD, 0x7F,  //       Logical Maximum (32765)\n0x75, 0x10,        //       Report Size (16)\n0x95, 0x02,        //       Report Count (2)\n0x91, 0x02,        //       Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //     End Collection\n0xC0,              //   End Collection\n0x09, 0x5A,        //   Usage (0x5A)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x12,        //     Report ID (18)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x5B,        //     Usage (0x5B)\n0x09, 0x5D,        //     Usage (0x5D)\n0x16, 0x00, 0x00,  //     Logical Minimum (0)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0x00, 0x00,  //     Physical Minimum (0)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x02,        //     Report Count (2)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x5C,        //     Usage (0x5C)\n0x09, 0x5E,        //     Usage (0x5E)\n0x66, 0x03, 0x10,  //     Unit (System: English Linear, Time: Seconds)\n0x55, 0xFD,        //     Unit Exponent\n0x27, 0xFF, 0x7F, 0x00, 0x00,  //     Logical Maximum (32766)\n0x47, 0xFF, 0x7F, 0x00, 0x00,  //     Physical Maximum (32766)\n0x75, 0x20,        //     Report Size (32)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x45, 0x00,        //     Physical Maximum (0)\n0x66, 0x00, 0x00,  //     Unit (None)\n0x55, 0x00,        //     Unit Exponent (0)\n0xC0,              //   End Collection\n0x09, 0x5F,        //   Usage (0x5F)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x13,        //     Report ID (19)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x23,        //     Usage (0x23)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x03,        //     Logical Maximum (3)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x03,        //     Physical Maximum (3)\n0x75, 0x04,        //     Report Size (4)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x58,        //     Usage (0x58)\n0xA1, 0x02,        //     Collection (Logical)\n0x0B, 0x01, 0x00, 0x0A, 0x00,  //       Usage (0x0A0001)\n0x0B, 0x02, 0x00, 0x0A, 0x00,  //       Usage (0x0A0002)\n0x75, 0x02,        //       Report Size (2)\n0x95, 0x02,        //       Report Count (2)\n0x91, 0x02,        //       Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //     End Collection\n0x16, 0xF0, 0xD8,  //     Logical Minimum (-10000)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0xF0, 0xD8,  //     Physical Minimum (-10000)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x09, 0x60,        //     Usage (0x60)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x36, 0xF0, 0xD8,  //     Physical Minimum (-10000)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x09, 0x61,        //     Usage (0x61)\n0x09, 0x62,        //     Usage (0x62)\n0x95, 0x02,        //     Report Count (2)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x16, 0x00, 0x00,  //     Logical Minimum (0)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0x00, 0x00,  //     Physical Minimum (0)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x09, 0x63,        //     Usage (0x63)\n0x09, 0x64,        //     Usage (0x64)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x02,        //     Report Count (2)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x65,        //     Usage (0x65)\n0x16, 0x00, 0x00,  //     Logical Minimum (0)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0x00, 0x00,  //     Physical Minimum (0)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x6E,        //   Usage (0x6E)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x14,        //     Report ID (20)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x70,        //     Usage (0x70)\n0x16, 0x00, 0x00,  //     Logical Minimum (0)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0x00, 0x00,  //     Physical Minimum (0)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x6F,        //     Usage (0x6F)\n0x16, 0xF0, 0xD8,  //     Logical Minimum (-10000)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0xF0, 0xD8,  //     Physical Minimum (-10000)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x95, 0x01,        //     Report Count (1)\n0x75, 0x10,        //     Report Size (16)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x71,        //     Usage (0x71)\n0x66, 0x14, 0x00,  //     Unit (System: English Rotation, Length: Centimeter)\n0x55, 0xFE,        //     Unit Exponent\n0x15, 0x00,        //     Logical Minimum (0)\n0x27, 0x9F, 0x8C, 0x00, 0x00,  //     Logical Maximum (35998)\n0x35, 0x00,        //     Physical Minimum (0)\n0x47, 0x9F, 0x8C, 0x00, 0x00,  //     Physical Maximum (35998)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x72,        //     Usage (0x72)\n0x15, 0x00,        //     Logical Minimum (0)\n0x27, 0xFF, 0x7F, 0x00, 0x00,  //     Logical Maximum (32766)\n0x35, 0x00,        //     Physical Minimum (0)\n0x47, 0xFF, 0x7F, 0x00, 0x00,  //     Physical Maximum (32766)\n0x66, 0x03, 0x10,  //     Unit (System: English Linear, Time: Seconds)\n0x55, 0xFD,        //     Unit Exponent\n0x75, 0x20,        //     Report Size (32)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x66, 0x00, 0x00,  //     Unit (None)\n0x55, 0x00,        //     Unit Exponent (0)\n0xC0,              //   End Collection\n0x09, 0x73,        //   Usage (0x73)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x15,        //     Report ID (21)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x70,        //     Usage (0x70)\n0x16, 0xF0, 0xD8,  //     Logical Minimum (-10000)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0xF0, 0xD8,  //     Physical Minimum (-10000)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x74,        //   Usage (0x74)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x16,        //     Report ID (22)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x75,        //     Usage (0x75)\n0x09, 0x76,        //     Usage (0x76)\n0x16, 0xF0, 0xD8,  //     Logical Minimum (-10000)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x36, 0xF0, 0xD8,  //     Physical Minimum (-10000)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x02,        //     Report Count (2)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x68,        //   Usage (0x68)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x17,        //     Report ID (23)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x6C,        //     Usage (0x6C)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0x10, 0x27,  //     Logical Maximum (10000)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x69,        //     Usage (0x69)\n0x15, 0x81,        //     Logical Minimum (-127)\n0x25, 0x7F,        //     Logical Maximum (127)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x0C,        //     Report Count (12)\n0x92, 0x02, 0x01,  //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile,Buffered Bytes)\n0xC0,              //   End Collection\n0x09, 0x66,        //   Usage (0x66)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x18,        //     Report ID (24)\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x30,        //     Usage (X)\n0x09, 0x31,        //     Usage (Y)\n0x15, 0x81,        //     Logical Minimum (-127)\n0x25, 0x7F,        //     Logical Maximum (127)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x02,        //     Report Count (2)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x05, 0x0F,        //   Usage Page (PID Page)\n0x09, 0x77,        //   Usage (0x77)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x1A,        //     Report ID (26)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x78,        //     Usage (0x78)\n0xA1, 0x02,        //     Collection (Logical)\n0x09, 0x79,        //       Usage (0x79)\n0x09, 0x7A,        //       Usage (0x7A)\n0x09, 0x7B,        //       Usage (0x7B)\n0x15, 0x01,        //       Logical Minimum (1)\n0x25, 0x03,        //       Logical Maximum (3)\n0x75, 0x08,        //       Report Size (8)\n0x95, 0x01,        //       Report Count (1)\n0x91, 0x00,        //       Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //     End Collection\n0x09, 0x7C,        //     Usage (0x7C)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x90,        //   Usage (0x90)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x1B,        //     Report ID (27)\n0x09, 0x22,        //     Usage (0x22)\n0x25, 0x28,        //     Logical Maximum (40)\n0x15, 0x01,        //     Logical Minimum (1)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x96,        //   Usage (0x96)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x1C,        //     Report ID (28)\n0x09, 0x97,        //     Usage (0x97)\n0x09, 0x98,        //     Usage (0x98)\n0x09, 0x99,        //     Usage (0x99)\n0x09, 0x9A,        //     Usage (0x9A)\n0x09, 0x9B,        //     Usage (0x9B)\n0x09, 0x9C,        //     Usage (0x9C)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x06,        //     Logical Maximum (6)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x00,        //     Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x7D,        //   Usage (0x7D)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x1D,        //     Report ID (29)\n0x09, 0x7E,        //     Usage (0x7E)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0x10, 0x27,  //     Physical Maximum (10000)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x6B,        //   Usage (0x6B)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x1E,        //     Report ID (30)\n0x09, 0x22,        //     Usage (0x22)\n0x15, 0x01,        //     Logical Minimum (1)\n0x25, 0x28,        //     Logical Maximum (40)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x6D,        //     Usage (0x6D)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x51,        //     Usage (0x51)\n0x66, 0x03, 0x10,  //     Unit (System: English Linear, Time: Seconds)\n0x55, 0xFD,        //     Unit Exponent\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x7F,  //     Physical Maximum (32767)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x55, 0x00,        //     Unit Exponent (0)\n0x66, 0x00, 0x00,  //     Unit (None)\n0xC0,              //   End Collection\n0x09, 0xAB,        //   Usage (0xAB)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x11,        //     Report ID (17)\n0x09, 0x25,        //     Usage (0x25)\n0xA1, 0x02,        //     Collection (Logical)\n0x09, 0x26,        //       Usage (0x26)\n0x09, 0x27,        //       Usage (0x27)\n0x09, 0x30,        //       Usage (0x30)\n0x09, 0x31,        //       Usage (0x31)\n0x09, 0x32,        //       Usage (0x32)\n0x09, 0x33,        //       Usage (0x33)\n0x09, 0x34,        //       Usage (0x34)\n0x09, 0x40,        //       Usage (0x40)\n0x09, 0x41,        //       Usage (0x41)\n0x09, 0x42,        //       Usage (0x42)\n0x09, 0x43,        //       Usage (0x43)\n0x09, 0x29,        //       Usage (0x29)\n0x25, 0x0C,        //       Logical Maximum (12)\n0x15, 0x01,        //       Logical Minimum (1)\n0x35, 0x01,        //       Physical Minimum (1)\n0x45, 0x0C,        //       Physical Maximum (12)\n0x75, 0x08,        //       Report Size (8)\n0x95, 0x01,        //       Report Count (1)\n0xB1, 0x00,        //       Feature (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //     End Collection\n0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)\n0x09, 0x3B,        //     Usage (Byte Count)\n0x15, 0x00,        //     Logical Minimum (0)\n0x26, 0xFF, 0x01,  //     Logical Maximum (511)\n0x35, 0x00,        //     Physical Minimum (0)\n0x46, 0xFF, 0x01,  //     Physical Maximum (511)\n0x75, 0x0A,        //     Report Size (10)\n0x95, 0x01,        //     Report Count (1)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x75, 0x06,        //     Report Size (6)\n0xB1, 0x01,        //     Feature (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x05, 0x0F,        //   Usage Page (PID Page)\n0x09, 0x89,        //   Usage (0x89)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x12,        //     Report ID (18)\n0x09, 0x22,        //     Usage (0x22)\n0x25, 0x28,        //     Logical Maximum (40)\n0x15, 0x01,        //     Logical Minimum (1)\n0x35, 0x01,        //     Physical Minimum (1)\n0x45, 0x28,        //     Physical Maximum (40)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x8B,        //     Usage (0x8B)\n0xA1, 0x02,        //     Collection (Logical)\n0x09, 0x8C,        //       Usage (0x8C)\n0x09, 0x8D,        //       Usage (0x8D)\n0x09, 0x8E,        //       Usage (0x8E)\n0x25, 0x03,        //       Logical Maximum (3)\n0x15, 0x01,        //       Logical Minimum (1)\n0x35, 0x01,        //       Physical Minimum (1)\n0x45, 0x03,        //       Physical Maximum (3)\n0x75, 0x08,        //       Report Size (8)\n0x95, 0x01,        //       Report Count (1)\n0xB1, 0x00,        //       Feature (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //     End Collection\n0x09, 0xAC,        //     Usage (0xAC)\n0x15, 0x00,        //     Logical Minimum (0)\n0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)\n0x35, 0x00,        //     Physical Minimum (0)\n0x47, 0xFF, 0xFF, 0x00, 0x00,  //     Physical Maximum (65534)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0xB1, 0x00,        //     Feature (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0x09, 0x7F,        //   Usage (0x7F)\n0xA1, 0x02,        //   Collection (Logical)\n0x85, 0x13,        //     Report ID (19)\n0x09, 0x80,        //     Usage (0x80)\n0x75, 0x10,        //     Report Size (16)\n0x95, 0x01,        //     Report Count (1)\n0x15, 0x00,        //     Logical Minimum (0)\n0x35, 0x00,        //     Physical Minimum (0)\n0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)\n0x47, 0xFF, 0xFF, 0x00, 0x00,  //     Physical Maximum (65534)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0x83,        //     Usage (0x83)\n0x26, 0xFF, 0x00,  //     Logical Maximum (255)\n0x46, 0xFF, 0x00,  //     Physical Maximum (255)\n0x75, 0x08,        //     Report Size (8)\n0x95, 0x01,        //     Report Count (1)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x09, 0xA9,        //     Usage (0xA9)\n0x09, 0xAA,        //     Usage (0xAA)\n0x75, 0x01,        //     Report Size (1)\n0x95, 0x02,        //     Report Count (2)\n0x15, 0x00,        //     Logical Minimum (0)\n0x25, 0x01,        //     Logical Maximum (1)\n0x35, 0x00,        //     Physical Minimum (0)\n0x45, 0x01,        //     Physical Maximum (1)\n0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0x75, 0x06,        //     Report Size (6)\n0x95, 0x01,        //     Report Count (1)\n0xB1, 0x03,        //     Feature (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)\n0xC0,              //   End Collection\n0xC0,              // End Collection\n\n// 1322 bytes\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/","title":"Windows 11 Gaming VM with GPU pass-thru","text":"<p>WIP</p>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#prerequisites","title":"Prerequisites","text":""},{"location":"research/VFIO/Windows-11-Gaming-VM/#used-hardware","title":"Used Hardware","text":"Part Usage Description Mainboard Host ASUS ROG Crosshair VIII Hero CPU Host, VM AMD Ryzen 7 3700X 8-Core Processor GPU #1 VM AMD Radeon RX 6900 XT (16 GB) GPU #2 Host AMD Radeon RX 480 (8 GB) PCIe USB Card VM VIA VL805/VL806/VL80x Super Speed USB 3.0 Host Controller"},{"location":"research/VFIO/Windows-11-Gaming-VM/#used-software","title":"Used Software","text":"Property Value Date August 2024 Kernel 5.15.0-119-generic Distribution Linux Mint 21.3 Virginia QEMU QEMU emulator version 6.2.0 (Debian 1:6.2+dfsg-2ubuntu6.22) libvirt libvirtd (libvirt) 8.0.0 virt-manager 4.0.0"},{"location":"research/VFIO/Windows-11-Gaming-VM/#resources","title":"Resources","text":"<ul> <li>https://dannyvanheumen.nl/post/setting-scaling-governor-through-udev-rules/</li> <li>Sharing files with Virtiofs</li> <li>How to install virtiofs drivers on Windows</li> <li>WinFsp</li> <li>Configuring static Hugepages for virtual machine usage</li> <li>Sharing files with Virtiofs</li> <li>KVM - Using Hugepages</li> <li>Comprehensive guide to performance optimizations for gaming on virtual machines with KVM/QEMU and PCI passthrough</li> <li>Improving the performance of a Windows Guest on KVM/QEMU</li> <li>Nested Virtualization - Hyper-V 2019 in qemu-kvm</li> <li>Really Simple Network Bridging With qemu</li> <li>How to use bridged networking with libvirt and KVM</li> </ul>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#iommu-groups","title":"IOMMU Groups","text":"<p>Script: https://gist.github.com/r15ch13/ba2d738985fce8990a4e9f32d07c6ada</p> <pre><code>Group 0:    [1022:1482]     00:01.0  Host bridge                              Starship/Matisse PCIe Dummy Host Bridge\nGroup 1:    [1022:1483] [R] 00:01.1  PCI bridge                               Starship/Matisse GPP Bridge\nGroup 2:    [1022:1483] [R] 00:01.2  PCI bridge                               Starship/Matisse GPP Bridge\nGroup 3:    [1022:1482]     00:02.0  Host bridge                              Starship/Matisse PCIe Dummy Host Bridge\nGroup 4:    [1022:1482]     00:03.0  Host bridge                              Starship/Matisse PCIe Dummy Host Bridge\nGroup 5:    [1022:1483] [R] 00:03.1  PCI bridge                               Starship/Matisse GPP Bridge\nGroup 6:    [1022:1483] [R] 00:03.2  PCI bridge                               Starship/Matisse GPP Bridge\nGroup 7:    [1022:1482]     00:04.0  Host bridge                              Starship/Matisse PCIe Dummy Host Bridge\nGroup 8:    [1022:1482]     00:05.0  Host bridge                              Starship/Matisse PCIe Dummy Host Bridge\nGroup 9:    [1022:1482]     00:07.0  Host bridge                              Starship/Matisse PCIe Dummy Host Bridge\nGroup 10:   [1022:1484] [R] 00:07.1  PCI bridge                               Starship/Matisse Internal PCIe GPP Bridge 0 to bus[E:B]\nGroup 11:   [1022:1482]     00:08.0  Host bridge                              Starship/Matisse PCIe Dummy Host Bridge\nGroup 12:   [1022:1484] [R] 00:08.1  PCI bridge                               Starship/Matisse Internal PCIe GPP Bridge 0 to bus[E:B]\nGroup 13:   [1022:790b]     00:14.0  SMBus                                    FCH SMBus Controller\n        [1022:790e]     00:14.3  ISA bridge                               FCH LPC Bridge\nGroup 14:   [1022:1440]     00:18.0  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 0\n        [1022:1441]     00:18.1  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 1\n        [1022:1442]     00:18.2  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 2\n        [1022:1443]     00:18.3  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 3\n        [1022:1444]     00:18.4  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 4\n        [1022:1445]     00:18.5  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 5\n        [1022:1446]     00:18.6  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 6\n        [1022:1447]     00:18.7  Host bridge                              Matisse/Vermeer Data Fabric: Device 18h; Function 7\nGroup 15:   [15b7:5030] [R] 01:00.0  Non-Volatile memory controller           Device 5030\nGroup 16:   [1022:57ad] [R] 02:00.0  PCI bridge                               Matisse Switch Upstream\nGroup 17:   [1022:57a3] [R] 03:01.0  PCI bridge                               Matisse PCIe GPP Bridge\nGroup 18:   [1022:57a3] [R] 03:05.0  PCI bridge                               Matisse PCIe GPP Bridge\nGroup 19:   [1022:57a4] [R] 03:08.0  PCI bridge                               Matisse PCIe GPP Bridge\n        [1022:1485] [R] 06:00.0  Non-Essential Instrumentation [1300]     Starship/Matisse Reserved SPP\n        [1022:149c]     06:00.1  USB controller                           Matisse USB 3.0 Host Controller\nUSB:        [0b05:18f3]      Bus 001 Device 008                       ASUSTek Computer, Inc. AURA LED Controller \nUSB:        [05e3:0610]      Bus 001 Device 007                       Genesys Logic, Inc. Hub \nUSB:        [046d:c547]      Bus 001 Device 005                       Logitech, Inc. USB Receiver \nUSB:        [08bb:29c0]      Bus 001 Device 003                       Texas Instruments PCM2900C Audio CODEC \nUSB:        [1038:1294]      Bus 001 Device 006                       SteelSeries ApS Arctis Pro Wireless \nUSB:        [1038:1290]      Bus 001 Device 004                       SteelSeries ApS Arctis Pro Wireless \nUSB:        [0451:2036]      Bus 001 Device 002                       Texas Instruments, Inc. TUSB2036 Hub \nUSB:        [1d6b:0002]      Bus 001 Device 001                       Linux Foundation 2.0 root hub \nUSB:        [1d6b:0003]      Bus 002 Device 001                       Linux Foundation 3.0 root hub \n        [1022:149c] [R] 06:00.3  USB controller                           Matisse USB 3.0 Host Controller\nUSB:        [046a:0001]      Bus 003 Device 003                       Cherry GmbH Keyboard \nUSB:        [046d:c33f]      Bus 003 Device 005                       Logitech, Inc. G815 Mechanical Keyboard \nUSB:        [05e3:0610]      Bus 003 Device 004                       Genesys Logic, Inc. Hub \nUSB:        [174c:2074]      Bus 003 Device 002                       ASMedia Technology Inc. ASM1074 High-Speed hub \nUSB:        [1d6b:0002]      Bus 003 Device 001                       Linux Foundation 2.0 root hub \nUSB:        [04c5:2028]      Bus 004 Device 003                       Fujitsu, Ltd iodd_ST400 \nUSB:        [05e3:0626]      Bus 004 Device 004                       Genesys Logic, Inc. USB3.1 Hub \nUSB:        [174c:3074]      Bus 004 Device 002                       ASMedia Technology Inc. ASM1074 SuperSpeed hub \nUSB:        [1d6b:0003]      Bus 004 Device 001                       Linux Foundation 3.0 root hub \nGroup 20:   [1022:57a4] [R] 03:09.0  PCI bridge                               Matisse PCIe GPP Bridge\n        [1022:7901] [R] 07:00.0  SATA controller                          FCH SATA Controller [AHCI mode]\nGroup 21:   [1022:57a4] [R] 03:0a.0  PCI bridge                               Matisse PCIe GPP Bridge\n        [1022:7901] [R] 08:00.0  SATA controller                          FCH SATA Controller [AHCI mode]\nGroup 22:   [15b7:5002] [R] 04:00.0  Non-Volatile memory controller           WD Black 2018/SN750 / PC SN720 NVMe SSD\nGroup 23:   [8086:1539] [R] 05:00.0  Ethernet controller                      I211 Gigabit Network Connection\nGroup 24:   [1002:1478] [R] 09:00.0  PCI bridge                               Navi 10 XL Upstream Port of PCI Express Switch\nGroup 25:   [1002:1479] [R] 0a:00.0  PCI bridge                               Navi 10 XL Downstream Port of PCI Express Switch\nGroup 26:   [1002:73bf] [R] 0b:00.0  VGA compatible controller                Navi 21 [Radeon RX 6800/6800 XT / 6900 XT]\nGroup 27:   [1002:ab28]     0b:00.1  Audio device                             Navi 21 HDMI Audio [Radeon RX 6800/6800 XT / 6900 XT]\nGroup 28:   [1002:73a6]     0b:00.2  USB controller                           Device 73a6\nUSB:        [2516:014d]      Bus 005 Device 002                       Cooler Master Co., Ltd. ARES \nUSB:        [1d6b:0002]      Bus 005 Device 001                       Linux Foundation 2.0 root hub \nUSB:        [1d6b:0003]      Bus 006 Device 001                       Linux Foundation 3.0 root hub \nGroup 29:   [1002:73a4]     0b:00.3  Serial bus controller                    Navi 21 USB\nGroup 30:   [1002:67df] [R] 0c:00.0  VGA compatible controller                Ellesmere [Radeon RX 470/480/570/570X/580/580X/590]\n        [1002:aaf0]     0c:00.1  Audio device                             Ellesmere HDMI Audio [Radeon RX 470/480 / 570/580/590]\nGroup 31:   [1022:148a] [R] 0d:00.0  Non-Essential Instrumentation [1300]     Starship/Matisse PCIe Dummy Function\nGroup 32:   [1022:1485] [R] 0e:00.0  Non-Essential Instrumentation [1300]     Starship/Matisse Reserved SPP\nGroup 33:   [1022:1486] [R] 0e:00.1  Encryption controller                    Starship/Matisse Cryptographic Coprocessor PSPCPP\nGroup 34:   [1022:149c] [R] 0e:00.3  USB controller                           Matisse USB 3.0 Host Controller\nUSB:        [0a12:0001]      Bus 007 Device 006                       Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode) \nUSB:        [05e3:0608]      Bus 007 Device 005                       Genesys Logic, Inc. Hub \nUSB:        [046d:082d]      Bus 007 Device 003                       Logitech, Inc. HD Pro Webcam C920 \nUSB:        [1d6b:0002]      Bus 007 Device 001                       Linux Foundation 2.0 root hub \nUSB:        [1d6b:0003]      Bus 008 Device 001                       Linux Foundation 3.0 root hub \nGroup 35:   [1022:1487]     0e:00.4  Audio device                             Starship/Matisse HD Audio Controller\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#vga-pci-iommu","title":"VGA PCI IOMMU","text":"<pre><code>/sys/kernel/iommu_groups/26/devices/0000:0b:00.0\n/sys/kernel/iommu_groups/27/devices/0000:0b:00.1\n/sys/kernel/iommu_groups/28/devices/0000:0b:00.2\n\n0b:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 21 [Radeon RX 6800/6800 XT / 6900 XT] [1002:73bf] (rev c0)\n0b:00.1 Audio device [0403]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 21 HDMI Audio [Radeon RX 6800/6800 XT / 6900 XT] [1002:ab28]\n0b:00.2 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD/ATI] Device [1002:73a6]\n0b:00.3 Serial bus controller [0c80]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 21 USB [1002:73a4]\n</code></pre> <pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"... vfio_pci.ids=1002:73bf,1002:ab28,1002:73a6,1002:73a4 kvm.ignore_msrs=1\"\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#usb-pci-iommu","title":"USB PCI IOMMU","text":""},{"location":"research/VFIO/Windows-11-Gaming-VM/#front-usb","title":"Front USB","text":"<pre><code>[1022:149c] [R] 06:00.3  USB controller                           Matisse USB 3.0 Host Controller\nUSB:        [046a:0001]      Bus 003 Device 003                       Cherry GmbH Keyboard \nUSB:        [046d:c33f]      Bus 003 Device 009                       Logitech, Inc. G815 Mechanical Keyboard \nUSB:        [05e3:0610]      Bus 003 Device 008                       Genesys Logic, Inc. Hub \nUSB:        [174c:2074]      Bus 003 Device 002                       ASMedia Technology Inc. ASM1074 High-Speed hub \nUSB:        [1d6b:0002]      Bus 003 Device 001                       Linux Foundation 2.0 root hub \nUSB:        [05e3:0626]      Bus 004 Device 005                       Genesys Logic, Inc. USB3.1 Hub \nUSB:        [174c:3074]      Bus 004 Device 002                       ASMedia Technology Inc. ASM1074 SuperSpeed hub \nUSB:        [1d6b:0003]      Bus 004 Device 001                       Linux Foundation 3.0 root hub \n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#usb-controllers","title":"USB Controllers","text":""},{"location":"research/VFIO/Windows-11-Gaming-VM/#before","title":"Before","text":"<pre><code>Bus 008 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 007 Device 004: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)\nBus 007 Device 003: ID 05e3:0608 Genesys Logic, Inc. Hub\nBus 007 Device 002: ID 046d:082d Logitech, Inc. HD Pro Webcam C920\nBus 007 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 006 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 005 Device 002: ID 2516:014d Cooler Master Co., Ltd. ARES\nBus 005 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 004 Device 005: ID 05e3:0626 Genesys Logic, Inc. USB3.1 Hub\nBus 004 Device 002: ID 174c:3074 ASMedia Technology Inc. ASM1074 SuperSpeed hub\nBus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 003 Device 003: ID 046a:0001 Cherry GmbH Keyboard\nBus 003 Device 009: ID 046d:c33f Logitech, Inc. G815 Mechanical Keyboard\nBus 003 Device 008: ID 05e3:0610 Genesys Logic, Inc. Hub\nBus 003 Device 002: ID 174c:2074 ASMedia Technology Inc. ASM1074 High-Speed hub\nBus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 008: ID 0b05:18f3 ASUSTek Computer, Inc. AURA LED Controller\nBus 001 Device 007: ID 05e3:0610 Genesys Logic, Inc. Hub\nBus 001 Device 005: ID 046d:c547 Logitech, Inc. USB Receiver\nBus 001 Device 003: ID 08bb:29c0 Texas Instruments PCM2900C Audio CODEC\nBus 001 Device 006: ID 1038:1294 SteelSeries ApS Arctis Pro Wireless\nBus 001 Device 004: ID 1038:1290 SteelSeries ApS Arctis Pro Wireless\nBus 001 Device 002: ID 0451:2036 Texas Instruments, Inc. TUSB2036 Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#after","title":"After","text":"<pre><code>Bus 009 Device 004: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)\nBus 009 Device 003: ID 05e3:0608 Genesys Logic, Inc. Hub\nBus 009 Device 002: ID 046d:082d Logitech, Inc. HD Pro Webcam C920\nBus 009 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 010 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 008 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 007 Device 002: ID 2516:014d Cooler Master Co., Ltd. ARES\nBus 007 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 006 Device 003: ID 05e3:0626 Genesys Logic, Inc. USB3.1 Hub\nBus 006 Device 002: ID 174c:3074 ASMedia Technology Inc. ASM1074 SuperSpeed hub\nBus 006 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 005 Device 004: ID 046d:c33f Logitech, Inc. G815 Mechanical Keyboard\nBus 005 Device 003: ID 05e3:0610 Genesys Logic, Inc. Hub\nBus 005 Device 002: ID 174c:2074 ASMedia Technology Inc. ASM1074 High-Speed hub\nBus 005 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 003 Device 008: ID 0b05:18f3 ASUSTek Computer, Inc. AURA LED Controller\nBus 003 Device 007: ID 05e3:0610 Genesys Logic, Inc. Hub\nBus 003 Device 005: ID 046d:c547 Logitech, Inc. USB Receiver\nBus 003 Device 003: ID 08bb:29c0 Texas Instruments PCM2900C Audio CODEC\nBus 003 Device 006: ID 1038:1294 SteelSeries ApS Arctis Pro Wireless\nBus 003 Device 004: ID 1038:1290 SteelSeries ApS Arctis Pro Wireless\nBus 003 Device 002: ID 0451:2036 Texas Instruments, Inc. TUSB2036 Hub\nBus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 002: ID 2109:3431 VIA Labs, Inc. Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#performance-tuning","title":"Performance tuning","text":""},{"location":"research/VFIO/Windows-11-Gaming-VM/#qemu-configuration","title":"QEMU Configuration","text":"<p>Set fixed amount of cores, topology and pin cores to best die layout; for <code>AMD Ryzen 7 3700X 8-Core Processor</code> it is</p> <pre><code>  &lt;vcpu placement=\"static\" cpuset=\"8-15\"&gt;8&lt;/vcpu&gt;\n  &lt;iothreads&gt;2&lt;/iothreads&gt;\n  &lt;cputune&gt;\n    &lt;vcpupin vcpu=\"0\" cpuset=\"8\"/&gt;\n    &lt;vcpupin vcpu=\"1\" cpuset=\"9\"/&gt;\n    &lt;vcpupin vcpu=\"2\" cpuset=\"10\"/&gt;\n    &lt;vcpupin vcpu=\"3\" cpuset=\"11\"/&gt;\n    &lt;vcpupin vcpu=\"4\" cpuset=\"12\"/&gt;\n    &lt;vcpupin vcpu=\"5\" cpuset=\"13\"/&gt;\n    &lt;vcpupin vcpu=\"6\" cpuset=\"14\"/&gt;\n    &lt;vcpupin vcpu=\"7\" cpuset=\"15\"/&gt;\n    &lt;emulatorpin cpuset=\"0-1\"/&gt;\n    &lt;iothreadpin iothread=\"1\" cpuset=\"0-1\"/&gt;\n    &lt;iothreadpin iothread=\"2\" cpuset=\"2-3\"/&gt;\n  &lt;/cputune&gt;\n</code></pre> <p>and</p> <pre><code>  &lt;cpu mode=\"host-passthrough\" check=\"none\" migratable=\"on\"&gt;\n    &lt;topology sockets=\"1\" dies=\"1\" cores=\"4\" threads=\"2\"/&gt;\n    &lt;cache mode=\"passthrough\"/&gt;\n    &lt;feature policy=\"require\" name=\"topoext\"/&gt;\n  &lt;/cpu&gt;\n</code></pre> <p>This config maps the last 8 cores to the Windows guest.</p> <p>For hugepages support add or adjust:</p> <pre><code>  &lt;memoryBacking&gt;\n    &lt;hugepages&gt;\n      &lt;page size=\"2048\" unit=\"KiB\"/&gt;\n    &lt;/hugepages&gt;\n    &lt;access mode=\"shared\"/&gt;\n  &lt;/memoryBacking&gt;\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#host-configuration","title":"Host configuration","text":""},{"location":"research/VFIO/Windows-11-Gaming-VM/#hugepages","title":"Hugepages","text":"<pre><code>grep Hugepagesize /proc/meminfo\nHugepagesize:       2048 kB\n</code></pre> <p>So a value of <code>8192</code> pages at a page size of 2MB equals 16GB of RAM reserved for hugepages.</p> <pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"... hugepages=8192\"\n</code></pre> <p><code>/etc/sysctl.conf</code></p> <pre><code>kernel.shmmax = 17179869184\nvm.nr_hugepages = 8192\nvm.min_free_kbytes = 112640\nvm.hugetlb_shm_group = 1000\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#cpu-governor-on-performance-mode","title":"CPU Governor on performance mode","text":"<pre><code>echo 'KERNEL==\"cpu8|cpu9|cpu10|cpu11|cpu12|cpu13|cpu14|cpu15\", SUBSYSTEM==\"cpu\", ACTION==\"add\", ATTR{cpufreq/scaling_governor}=\"performance\"' | sudo tee /etc/udev/rules.d/90-scaling-governor-performance.rules\n# reboot, then confirm changes with\ncat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#isolate-cpu-cores-from-scheduler","title":"Isolate CPU cores from scheduler","text":"<p>Do more testing if this is beneficial or worse for both host and VM performance</p> <pre><code>sudo vim /etc/default/grub\n</code></pre> <pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"... isolcpus=8-15\"\n</code></pre> <pre><code>sudo update-grub\n</code></pre> <p>Reboot to activate.</p>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#irql-re-balance","title":"IRQL re-balance","text":"<p><code>/etc/default/irqbalance</code></p> <pre><code>IRQBALANCE_BANNED_CPULIST=8-15\n</code></pre> <pre><code>sudo systemctl restart irqbalance\n</code></pre>"},{"location":"research/VFIO/Windows-11-Gaming-VM/#networking","title":"Networking","text":"<p><code>/lib/systemd/system/qemu-startup.service</code></p> <pre><code>[Unit]\nDescription=Setup qemu network bridging\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRestart=on-failure\nExecStart=brctl addbr br0\nExecStart=brctl addif br0 enp5s0\nExecStart=dhclient br0\nExecStart=ip link set br0 up\nExecStart=iptables -I FORWARD -m physdev --physdev-is-bridged -j ACCEPT\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <pre><code>sudo systemctl enable qemu-startup.service\nsudo systemctl start qemu-startup.service \n</code></pre>"}]}